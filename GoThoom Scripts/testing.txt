<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252"><meta name="viewport" content="width=device-width"><title>http://gorvin.50webs.com/CLRev/dps.html</title><link rel="stylesheet" type="text/css" href="resource://content-accessible/viewsource.css"></head><body id="viewsource" style="tab-size: 4"><span id="line1"><span>
</span></span><span id="line2"><span></span><span class="error" title="Start tag seen without seeing a doctype first. Expected “&lt;!DOCTYPE html&gt;”.">&lt;<span class="start-tag">html</span>&gt;</span><span>
</span></span><span id="line3"><span></span><span>&lt;<span class="start-tag">head</span>&gt;</span><span>
</span></span><span id="line4"><span></span><span>&lt;<span class="start-tag">title</span>&gt;</span><span>Fighter Calculator</span><span>&lt;/<span class="end-tag">title</span>&gt;</span><span>
</span></span><span id="line5"><span></span><span>&lt;<span class="start-tag">link</span> <span class="attribute-name">REL</span>="<a class="attribute-value">SHORTCUT ICON</a>" <span class="attribute-name">HREF</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/images/clicon.bmp">../images/clicon.bmp</a>"&gt;</span><span>
</span></span><span id="line6"><span></span><span>&lt;<span class="start-tag">link</span> <span class="attribute-name">REL</span>="<a class="attribute-value">stylesheet</a>" <span class="attribute-name">TYPE</span>="<a class="attribute-value">text/css</a>" <span class="attribute-name">HREF</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/dps.css">dps.css</a>" <span>/</span>&gt;</span><span>
</span></span><span id="line7"><span></span><span>&lt;<span class="start-tag">meta</span> <span class="attribute-name">http-equiv</span>="<a class="attribute-value">Cache-Control</a>" <span class="attribute-name">content</span>="<a class="attribute-value">no-cache, no-store, must-revalidate</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8"><span></span><span>&lt;<span class="start-tag">meta</span> <span class="attribute-name">http-equiv</span>="<a class="attribute-value">Pragma</a>" <span class="attribute-name">content</span>="<a class="attribute-value">no-cache</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line9"><span></span><span>&lt;<span class="start-tag">meta</span> <span class="attribute-name">http-equiv</span>="<a class="attribute-value">Expires</a>" <span class="attribute-name">content</span>="<a class="attribute-value">0</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line10"><span></span><span>&lt;<span class="start-tag">script</span> <span class="attribute-name">type</span>="<a class="attribute-value">text/javascript</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/wz_jsgraphics.js">wz_jsgraphics.js</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">script</span>&gt;</span><span>
</span></span><span id="line11"><span></span><span>&lt;/<span class="end-tag">head</span>&gt;</span><span>
</span></span><span id="line12"><span>
</span></span><span id="line13"><span></span><span class="error" title="“script” element between “head” and “body”.">&lt;<span class="start-tag">script</span>&gt;</span><span>
</span></span><span id="line14"><span>
</span></span><span id="line15"><span>var DebugModeOn = 0;
</span></span><span id="line16"><span>
</span></span><span id="line17"><span>var CurrNotes = "";
</span></span><span id="line18"><span>
</span></span><span id="line19"><span>// To add new trainer, update the following:
</span></span><span id="line20"><span>// - Add HTML fields
</span></span><span id="line21"><span>// - Array initialization
</span></span><span id="line22"><span>// - switchSet()
</span></span><span id="line23"><span>// - saveData()
</span></span><span id="line24"><span>// - calculate()
</span></span><span id="line25"><span>//   - Read field
</span></span><span id="line26"><span>//   - Ignore if not in trainer's subclass
</span></span><span id="line27"><span>//   - Update stats
</span></span><span id="line28"><span>//   - Update total field
</span></span><span id="line29"><span>
</span></span><span id="line30"><span>// Simulation vars.
</span></span><span id="line31"><span>var SimInterval = 0;	// Interval object.
</span></span><span id="line32"><span>var GotFirstTick = 0;	// Have we already done at least one tick?
</span></span><span id="line33"><span>var Timer = new Date();	// Holds current date structure.
</span></span><span id="line34"><span>var CurrTime = 0;		// Holds current time.
</span></span><span id="line35"><span>var Bal = 100;		// Current balance.
</span></span><span id="line36"><span>var BalMax = 100;		// Max balance.
</span></span><span id="line37"><span>var BalUse = 100;		// Balance used per swing.
</span></span><span id="line38"><span>var BalReg = 100;		// Balance recovered per tick.
</span></span><span id="line39"><span>var BalTick = 235;	// Milliseconds per tick.
</span></span><span id="line40"><span>var BalSwung = 0;		// Are we in the middle of a swing?
</span></span><span id="line41"><span>var BalSwing = 0;		// Should we swing next time we can?
</span></span><span id="line42"><span>var BalRunning = 0;	// Is the balance loop currently running?
</span></span><span id="line43"><span>var SwingForever = 0;	// Should we keep swinging as often as we can?
</span></span><span id="line44"><span>var HP = 1000;		// Current health.
</span></span><span id="line45"><span>var HPMax = 1000;		// Max health.
</span></span><span id="line46"><span>var HPReg = 100;		// Health regenerated per tick.
</span></span><span id="line47"><span>var SP = 800;		// Current spirit.
</span></span><span id="line48"><span>var SPMax = 800;		// Max spirit.
</span></span><span id="line49"><span>var SPReg = 6;		// Spirit regenerated per tick.
</span></span><span id="line50"><span>var HitMin = 100;		// Min Damage.
</span></span><span id="line51"><span>var HitMax = 100;		// Max Damage.
</span></span><span id="line52"><span>var HitAvg = 100;		// Avg Damage.
</span></span><span id="line53"><span>var EnHP = 1000;		// Enemy current health.
</span></span><span id="line54"><span>var EnHPMax = 1000;	// Enemy max health.
</span></span><span id="line55"><span>var EnHPReg = 100;	// Enemy health regeneration.
</span></span><span id="line56"><span>var AtkiteStr = 0;		// Atkite effective CM.
</span></span><span id="line57"><span>var DarkiteStr = 0;		// Darkite effective CM.
</span></span><span id="line58"><span>var BalthiteStr = 0;	// Balthite effective CM.
</span></span><span id="line59"><span>var DethiteStr = 0;		// Dethite effective CM.
</span></span><span id="line60"><span>var CurrSet = 1;		// Current Set.
</span></span><span id="line61"><span>var SwingDrain = 0;	// Spirit cost of attack.
</span></span><span id="line62"><span>var SSOn = 0;		// Is shieldstone being used?
</span></span><span id="line63"><span>var SSDrain = 1066;	// Starting Shieldstone drain rate.
</span></span><span id="line64"><span>var SSDrainCurr = 1066;	// Current Shieldstone drain rate.
</span></span><span id="line65"><span>var SSDrainInc10 = 60; // 10 Frame Shieldstone drain increase.
</span></span><span id="line66"><span>var SSDrainFrames = 0; // Shieldstone use time.
</span></span><span id="line67"><span>var IteTimer = 0;		// Ite boost duration remaining.
</span></span><span id="line68"><span>var GraphTab = 0;		// Active graph tab.
</span></span><span id="line69"><span>var GraphStatReg = 0;	// Bal regen stat for graph.
</span></span><span id="line70"><span>var GraphStatMinDmg = 0;	// Min damage stat for graph.
</span></span><span id="line71"><span>var GraphStatMaxDmg = 0;	// Max damage stat for graph.
</span></span><span id="line72"><span>var GraphStatAcc = 0;	// Accuracy stat for graph.
</span></span><span id="line73"><span>var GraphStatAccMin = -1; // Min Accuracy stat for graph.
</span></span><span id="line74"><span>var GraphStatAccMax = -1; // Max Accuracy stat for graph.
</span></span><span id="line75"><span>var GraphStatFell = 0; // Fell ranks for graph.
</span></span><span id="line76"><span>// 0=Heartwood 1=Morph 2=Befriend
</span></span><span id="line77"><span>var RangerDrain = new Array(3);
</span></span><span id="line78"><span>var RangerTimer = new Array(3);
</span></span><span id="line79"><span>var RangerTick = new Array(3);
</span></span><span id="line80"><span>var RangerInc = new Array(3);
</span></span><span id="line81"><span>var RangerWait = new Array(3);
</span></span><span id="line82"><span>for(var i=0; i</span><span>&lt;3</span><span>; i++)
</span></span><span id="line83"><span>{
</span></span><span id="line84"><span>	RangerDrain[i] = 0;
</span></span><span id="line85"><span>	RangerTimer[i] = 0;
</span></span><span id="line86"><span>	RangerWait[i] = 0;
</span></span><span id="line87"><span>}
</span></span><span id="line88"><span>RangerTick[0] = 18;
</span></span><span id="line89"><span>RangerInc[0] = 3;
</span></span><span id="line90"><span>RangerTick[1] = 14;
</span></span><span id="line91"><span>RangerInc[1] = 1;
</span></span><span id="line92"><span>RangerTick[2] = 11;
</span></span><span id="line93"><span>RangerInc[2] = 2;
</span></span><span id="line94"><span>
</span></span><span id="line95"><span>// Frame rates.
</span></span><span id="line96"><span>var StandardFPS = 5.0;
</span></span><span id="line97"><span>var FPSArray = [
</span></span><span id="line98"><span>  StandardFPS,
</span></span><span id="line99"><span>  4.27,
</span></span><span id="line100"><span>  1.0,
</span></span><span id="line101"><span>  StandardFPS
</span></span><span id="line102"><span>];
</span></span><span id="line103"><span>
</span></span><span id="line104"><span>// 0=Accuracy 1=MinDamage 2=MaxDamage 3=Balance 4=BalRegen 5=Health 6=Defense 7=HPRegen
</span></span><span id="line105"><span>// 8=Spirit 9=SpiRegen
</span></span><span id="line106"><span>
</span></span><span id="line107"><span>// ****Races****
</span></span><span id="line108"><span>var races = new Array(8);
</span></span><span id="line109"><span>for (var i=0; i</span><span>&lt;r</span><span>aces.length; i++)
</span></span><span id="line110"><span>	races[i] = new Array(10);
</span></span><span id="line111"><span>
</span></span><span id="line112"><span>// 0 - Human/Undisclosed
</span></span><span id="line113"><span>races[0][0] = 300;
</span></span><span id="line114"><span>races[0][1] = 100;
</span></span><span id="line115"><span>races[0][2] = 200;
</span></span><span id="line116"><span>races[0][3] = 5000;
</span></span><span id="line117"><span>races[0][4] = 400;
</span></span><span id="line118"><span>races[0][5] = 3000;
</span></span><span id="line119"><span>races[0][6] = 300;
</span></span><span id="line120"><span>races[0][7] = 100;
</span></span><span id="line121"><span>races[0][8] = 800;
</span></span><span id="line122"><span>races[0][9] = 600;
</span></span><span id="line123"><span>
</span></span><span id="line124"><span>// 1 - Dwarf
</span></span><span id="line125"><span>races[1][0] = 400;
</span></span><span id="line126"><span>races[1][1] = 0;
</span></span><span id="line127"><span>races[1][2] = 300;
</span></span><span id="line128"><span>races[1][3] = 5300;
</span></span><span id="line129"><span>races[1][4] = 300;
</span></span><span id="line130"><span>races[1][5] = 3300;
</span></span><span id="line131"><span>races[1][6] = 300;
</span></span><span id="line132"><span>races[1][7] = 100;
</span></span><span id="line133"><span>races[1][8] = 500;
</span></span><span id="line134"><span>races[1][9] = 500;
</span></span><span id="line135"><span>
</span></span><span id="line136"><span>// 2 - Fen
</span></span><span id="line137"><span>races[2][0] = 200;
</span></span><span id="line138"><span>races[2][1] = 0;
</span></span><span id="line139"><span>races[2][2] = 200;
</span></span><span id="line140"><span>races[2][3] = 5900;
</span></span><span id="line141"><span>races[2][4] = 500;
</span></span><span id="line142"><span>races[2][5] = 1500;
</span></span><span id="line143"><span>races[2][6] = 200;
</span></span><span id="line144"><span>races[2][7] = 100;
</span></span><span id="line145"><span>races[2][8] = 700;
</span></span><span id="line146"><span>races[2][9] = 500;
</span></span><span id="line147"><span>
</span></span><span id="line148"><span>// 3 - Halfling
</span></span><span id="line149"><span>races[3][0] = 100;
</span></span><span id="line150"><span>races[3][1] = 0;
</span></span><span id="line151"><span>races[3][2] = 100;
</span></span><span id="line152"><span>races[3][3] = 5300;
</span></span><span id="line153"><span>races[3][4] = 300;
</span></span><span id="line154"><span>races[3][5] = 3000;
</span></span><span id="line155"><span>races[3][6] = 600;
</span></span><span id="line156"><span>races[3][7] = 100;
</span></span><span id="line157"><span>races[3][8] = 900;
</span></span><span id="line158"><span>races[3][9] = 700;
</span></span><span id="line159"><span>
</span></span><span id="line160"><span>// 4 - Ghorak Zo
</span></span><span id="line161"><span>races[4][0] = 500;
</span></span><span id="line162"><span>races[4][1] = 200;
</span></span><span id="line163"><span>races[4][2] = 400;
</span></span><span id="line164"><span>races[4][3] = 4400;
</span></span><span id="line165"><span>races[4][4] = 500;
</span></span><span id="line166"><span>races[4][5] = 3600;
</span></span><span id="line167"><span>races[4][6] = 100;
</span></span><span id="line168"><span>races[4][7] = 100;
</span></span><span id="line169"><span>races[4][8] = 700;
</span></span><span id="line170"><span>races[4][9] = 500;
</span></span><span id="line171"><span>
</span></span><span id="line172"><span>// 5 - Sylvan
</span></span><span id="line173"><span>races[5][0] = 300;
</span></span><span id="line174"><span>races[5][1] = 100;
</span></span><span id="line175"><span>races[5][2] = 100;
</span></span><span id="line176"><span>races[5][3] = 5000;
</span></span><span id="line177"><span>races[5][4] = 500;
</span></span><span id="line178"><span>races[5][5] = 2400;
</span></span><span id="line179"><span>races[5][6] = 400;
</span></span><span id="line180"><span>races[5][7] = 100;
</span></span><span id="line181"><span>races[5][8] = 800;
</span></span><span id="line182"><span>races[5][9] = 600;
</span></span><span id="line183"><span>
</span></span><span id="line184"><span>// 6 - Thoom
</span></span><span id="line185"><span>races[6][0] = 200;
</span></span><span id="line186"><span>races[6][1] = 0;
</span></span><span id="line187"><span>races[6][2] = 100;
</span></span><span id="line188"><span>races[6][3] = 4700;
</span></span><span id="line189"><span>races[6][4] = 300;
</span></span><span id="line190"><span>races[6][5] = 3900;
</span></span><span id="line191"><span>races[6][6] = 200;
</span></span><span id="line192"><span>races[6][7] = 300;
</span></span><span id="line193"><span>races[6][8] = 1000;
</span></span><span id="line194"><span>races[6][9] = 700;
</span></span><span id="line195"><span>
</span></span><span id="line196"><span>// 7 - 0 Stat Race
</span></span><span id="line197"><span>races[7][0] = 0;
</span></span><span id="line198"><span>races[7][1] = 0;
</span></span><span id="line199"><span>races[7][2] = 0;
</span></span><span id="line200"><span>races[7][3] = 0;
</span></span><span id="line201"><span>races[7][4] = 0;
</span></span><span id="line202"><span>races[7][5] = 0;
</span></span><span id="line203"><span>races[7][6] = 0;
</span></span><span id="line204"><span>races[7][7] = 0;
</span></span><span id="line205"><span>races[7][8] = 0;
</span></span><span id="line206"><span>races[7][9] = 0;
</span></span><span id="line207"><span>
</span></span><span id="line208"><span>
</span></span><span id="line209"><span>// ****Weapons****
</span></span><span id="line210"><span>var weapons = new Array(130);
</span></span><span id="line211"><span>for (var i=0; i</span><span>&lt;w</span><span>eapons.length; i++)
</span></span><span id="line212"><span>{
</span></span><span id="line213"><span>	weapons[i] = new Array(10);
</span></span><span id="line214"><span>	weapons[i][8] = 0;
</span></span><span id="line215"><span>	weapons[i][9] = 0;
</span></span><span id="line216"><span>}
</span></span><span id="line217"><span>
</span></span><span id="line218"><span>// 0 - Roguewood Club
</span></span><span id="line219"><span>weapons[0][0] = 0;
</span></span><span id="line220"><span>weapons[0][1] = 0;
</span></span><span id="line221"><span>weapons[0][2] = 0;
</span></span><span id="line222"><span>weapons[0][3] = 0;
</span></span><span id="line223"><span>weapons[0][4] = 0;
</span></span><span id="line224"><span>weapons[0][5] = 0;
</span></span><span id="line225"><span>weapons[0][6] = 0;
</span></span><span id="line226"><span>weapons[0][7] = 0;
</span></span><span id="line227"><span>
</span></span><span id="line228"><span>// 1 - Dagger
</span></span><span id="line229"><span>weapons[1][0] = 100;
</span></span><span id="line230"><span>weapons[1][1] = 0;
</span></span><span id="line231"><span>weapons[1][2] = 0;
</span></span><span id="line232"><span>weapons[1][3] = 300;
</span></span><span id="line233"><span>weapons[1][4] = 150;
</span></span><span id="line234"><span>weapons[1][5] = 0;
</span></span><span id="line235"><span>weapons[1][6] = -200;
</span></span><span id="line236"><span>weapons[1][7] = 0;
</span></span><span id="line237"><span>
</span></span><span id="line238"><span>// 2 - Dueling Blade
</span></span><span id="line239"><span>weapons[2][0] = 100;
</span></span><span id="line240"><span>weapons[2][1] = -200;
</span></span><span id="line241"><span>weapons[2][2] = -100;
</span></span><span id="line242"><span>weapons[2][3] = 600;
</span></span><span id="line243"><span>weapons[2][4] = 200;
</span></span><span id="line244"><span>weapons[2][5] = 0;
</span></span><span id="line245"><span>weapons[2][6] = 0;
</span></span><span id="line246"><span>weapons[2][7] = 0;
</span></span><span id="line247"><span>
</span></span><span id="line248"><span>// 3 - Shiny Dagger
</span></span><span id="line249"><span>weapons[3][0] = 200;
</span></span><span id="line250"><span>weapons[3][1] = -100;
</span></span><span id="line251"><span>weapons[3][2] = -100;
</span></span><span id="line252"><span>weapons[3][3] = 900;
</span></span><span id="line253"><span>weapons[3][4] = 400;
</span></span><span id="line254"><span>weapons[3][5] = 0;
</span></span><span id="line255"><span>weapons[3][6] = -100;
</span></span><span id="line256"><span>weapons[3][7] = 0;
</span></span><span id="line257"><span>
</span></span><span id="line258"><span>// 4 - Lyfelidae Claw
</span></span><span id="line259"><span>weapons[4][0] = 100;
</span></span><span id="line260"><span>weapons[4][1] = 0;
</span></span><span id="line261"><span>weapons[4][2] = 0;
</span></span><span id="line262"><span>weapons[4][3] = 0;
</span></span><span id="line263"><span>weapons[4][4] = 0;
</span></span><span id="line264"><span>weapons[4][5] = 0;
</span></span><span id="line265"><span>weapons[4][6] = -400;
</span></span><span id="line266"><span>weapons[4][7] = 300;
</span></span><span id="line267"><span>
</span></span><span id="line268"><span>// 5 - Studded Club
</span></span><span id="line269"><span>weapons[5][0] = 50;
</span></span><span id="line270"><span>weapons[5][1] = 0;
</span></span><span id="line271"><span>weapons[5][2] = 50;
</span></span><span id="line272"><span>weapons[5][3] = 150;
</span></span><span id="line273"><span>weapons[5][4] = 100;
</span></span><span id="line274"><span>weapons[5][5] = 0;
</span></span><span id="line275"><span>weapons[5][6] = -100;
</span></span><span id="line276"><span>weapons[5][7] = 0;
</span></span><span id="line277"><span>
</span></span><span id="line278"><span>// 6 - Shovel
</span></span><span id="line279"><span>weapons[6][0] = -50;
</span></span><span id="line280"><span>weapons[6][1] = 0;
</span></span><span id="line281"><span>weapons[6][2] = 0;
</span></span><span id="line282"><span>weapons[6][3] = -150;
</span></span><span id="line283"><span>weapons[6][4] = 50;
</span></span><span id="line284"><span>weapons[6][5] = 0;
</span></span><span id="line285"><span>weapons[6][6] = 50;
</span></span><span id="line286"><span>weapons[6][7] = 0;
</span></span><span id="line287"><span>
</span></span><span id="line288"><span>// 7 - Boar Tusk
</span></span><span id="line289"><span>weapons[7][0] = 100;
</span></span><span id="line290"><span>weapons[7][1] = 200;
</span></span><span id="line291"><span>weapons[7][2] = 200;
</span></span><span id="line292"><span>weapons[7][3] = 0;
</span></span><span id="line293"><span>weapons[7][4] = 0;
</span></span><span id="line294"><span>weapons[7][5] = 0;
</span></span><span id="line295"><span>weapons[7][6] = 0;
</span></span><span id="line296"><span>weapons[7][7] = 0;
</span></span><span id="line297"><span>
</span></span><span id="line298"><span>// 8 - Sturdy Limb
</span></span><span id="line299"><span>weapons[8][0] = 100;
</span></span><span id="line300"><span>weapons[8][1] = 100;
</span></span><span id="line301"><span>weapons[8][2] = 100;
</span></span><span id="line302"><span>weapons[8][3] = -300;
</span></span><span id="line303"><span>weapons[8][4] = 0;
</span></span><span id="line304"><span>weapons[8][5] = 0;
</span></span><span id="line305"><span>weapons[8][6] = 0;
</span></span><span id="line306"><span>weapons[8][7] = 0;
</span></span><span id="line307"><span>
</span></span><span id="line308"><span>// 9 - Spike
</span></span><span id="line309"><span>weapons[9][0] = 100;
</span></span><span id="line310"><span>weapons[9][1] = 100;
</span></span><span id="line311"><span>weapons[9][2] = 100;
</span></span><span id="line312"><span>weapons[9][3] = 300;
</span></span><span id="line313"><span>weapons[9][4] = 100;
</span></span><span id="line314"><span>weapons[9][5] = 0;
</span></span><span id="line315"><span>weapons[9][6] = -200;
</span></span><span id="line316"><span>weapons[9][7] = 0;
</span></span><span id="line317"><span>
</span></span><span id="line318"><span>// 10 - Seta Scale
</span></span><span id="line319"><span>weapons[10][0] = 100;
</span></span><span id="line320"><span>weapons[10][1] = 200;
</span></span><span id="line321"><span>weapons[10][2] = 200;
</span></span><span id="line322"><span>weapons[10][3] = -300;
</span></span><span id="line323"><span>weapons[10][4] = -100;
</span></span><span id="line324"><span>weapons[10][5] = 0;
</span></span><span id="line325"><span>weapons[10][6] = -100;
</span></span><span id="line326"><span>weapons[10][7] = 0;
</span></span><span id="line327"><span>
</span></span><span id="line328"><span>// 11 - Quarterstaff
</span></span><span id="line329"><span>weapons[11][0] = -50;
</span></span><span id="line330"><span>weapons[11][1] = 0;
</span></span><span id="line331"><span>weapons[11][2] = 50;
</span></span><span id="line332"><span>weapons[11][3] = -300;
</span></span><span id="line333"><span>weapons[11][4] = 50;
</span></span><span id="line334"><span>weapons[11][5] = 0;
</span></span><span id="line335"><span>weapons[11][6] = 100;
</span></span><span id="line336"><span>weapons[11][7] = 0;
</span></span><span id="line337"><span>
</span></span><span id="line338"><span>// 12 - Flail
</span></span><span id="line339"><span>weapons[12][0] = 100;
</span></span><span id="line340"><span>weapons[12][1] = 100;
</span></span><span id="line341"><span>weapons[12][2] = 120;
</span></span><span id="line342"><span>weapons[12][3] = 0;
</span></span><span id="line343"><span>weapons[12][4] = -50;
</span></span><span id="line344"><span>weapons[12][5] = 0;
</span></span><span id="line345"><span>weapons[12][6] = -50;
</span></span><span id="line346"><span>weapons[12][7] = 0;
</span></span><span id="line347"><span>
</span></span><span id="line348"><span>// 13 - Battle Hammer
</span></span><span id="line349"><span>weapons[13][0] = 90;
</span></span><span id="line350"><span>weapons[13][1] = 175;
</span></span><span id="line351"><span>weapons[13][2] = 225;
</span></span><span id="line352"><span>weapons[13][3] = -300;
</span></span><span id="line353"><span>weapons[13][4] = -90;
</span></span><span id="line354"><span>weapons[13][5] = 0;
</span></span><span id="line355"><span>weapons[13][6] = 0;
</span></span><span id="line356"><span>weapons[13][7] = 0;
</span></span><span id="line357"><span>
</span></span><span id="line358"><span>// 20 - Short Sword
</span></span><span id="line359"><span>weapons[20][0] = 50;
</span></span><span id="line360"><span>weapons[20][1] = 0;
</span></span><span id="line361"><span>weapons[20][2] = 50;
</span></span><span id="line362"><span>weapons[20][3] = 0;
</span></span><span id="line363"><span>weapons[20][4] = 0;
</span></span><span id="line364"><span>weapons[20][5] = 0;
</span></span><span id="line365"><span>weapons[20][6] = 100;
</span></span><span id="line366"><span>weapons[20][7] = 0;
</span></span><span id="line367"><span>
</span></span><span id="line368"><span>// 21 - Rapier
</span></span><span id="line369"><span>weapons[21][0] = 20;
</span></span><span id="line370"><span>weapons[21][1] = 20;
</span></span><span id="line371"><span>weapons[21][2] = 110;
</span></span><span id="line372"><span>weapons[21][3] = 300;
</span></span><span id="line373"><span>weapons[21][4] = 50;
</span></span><span id="line374"><span>weapons[21][5] = 0;
</span></span><span id="line375"><span>weapons[21][6] = -100;
</span></span><span id="line376"><span>weapons[21][7] = 0;
</span></span><span id="line377"><span>
</span></span><span id="line378"><span>// 22 - Longsword
</span></span><span id="line379"><span>weapons[22][0] = 100;
</span></span><span id="line380"><span>weapons[22][1] = 100;
</span></span><span id="line381"><span>weapons[22][2] = 150;
</span></span><span id="line382"><span>weapons[22][3] = -240;
</span></span><span id="line383"><span>weapons[22][4] = 0;
</span></span><span id="line384"><span>weapons[22][5] = 0;
</span></span><span id="line385"><span>weapons[22][6] = 40;
</span></span><span id="line386"><span>weapons[22][7] = 0;
</span></span><span id="line387"><span>
</span></span><span id="line388"><span>// 23 - Broadsword
</span></span><span id="line389"><span>weapons[23][0] = 150;
</span></span><span id="line390"><span>weapons[23][1] = 175;
</span></span><span id="line391"><span>weapons[23][2] = 175;
</span></span><span id="line392"><span>weapons[23][3] = -240;
</span></span><span id="line393"><span>weapons[23][4] = -80;
</span></span><span id="line394"><span>weapons[23][5] = 0;
</span></span><span id="line395"><span>weapons[23][6] = 50;
</span></span><span id="line396"><span>weapons[23][7] = 0;
</span></span><span id="line397"><span>
</span></span><span id="line398"><span>// 24 - Machete
</span></span><span id="line399"><span>weapons[24][0] = 50;
</span></span><span id="line400"><span>weapons[24][1] = 0;
</span></span><span id="line401"><span>weapons[24][2] = 50;
</span></span><span id="line402"><span>weapons[24][3] = 0;
</span></span><span id="line403"><span>weapons[24][4] = 0;
</span></span><span id="line404"><span>weapons[24][5] = 0;
</span></span><span id="line405"><span>weapons[24][6] = 100;
</span></span><span id="line406"><span>weapons[24][7] = 0;
</span></span><span id="line407"><span>
</span></span><span id="line408"><span>// 25 - Sword of Souls
</span></span><span id="line409"><span>weapons[25][0] = 100;
</span></span><span id="line410"><span>weapons[25][1] = 80;
</span></span><span id="line411"><span>weapons[25][2] = 80;
</span></span><span id="line412"><span>weapons[25][3] = -180;
</span></span><span id="line413"><span>weapons[25][4] = -60;
</span></span><span id="line414"><span>weapons[25][5] = 0;
</span></span><span id="line415"><span>weapons[25][6] = 120;
</span></span><span id="line416"><span>weapons[25][7] = 0;
</span></span><span id="line417"><span>
</span></span><span id="line418"><span>// 30 - Hand Axe
</span></span><span id="line419"><span>weapons[30][0] = 50;
</span></span><span id="line420"><span>weapons[30][1] = 50;
</span></span><span id="line421"><span>weapons[30][2] = 100;
</span></span><span id="line422"><span>weapons[30][3] = -150;
</span></span><span id="line423"><span>weapons[30][4] = -50;
</span></span><span id="line424"><span>weapons[30][5] = 0;
</span></span><span id="line425"><span>weapons[30][6] = 0;
</span></span><span id="line426"><span>weapons[30][7] = 0;
</span></span><span id="line427"><span>
</span></span><span id="line428"><span>// 31 - Axe
</span></span><span id="line429"><span>weapons[31][0] = 90;
</span></span><span id="line430"><span>weapons[31][1] = 250;
</span></span><span id="line431"><span>weapons[31][2] = 290;
</span></span><span id="line432"><span>weapons[31][3] = -480;
</span></span><span id="line433"><span>weapons[31][4] = -150;
</span></span><span id="line434"><span>weapons[31][5] = 0;
</span></span><span id="line435"><span>weapons[31][6] = 0;
</span></span><span id="line436"><span>weapons[31][7] = 0;
</span></span><span id="line437"><span>
</span></span><span id="line438"><span>// 40 - Cloth Bracers
</span></span><span id="line439"><span>weapons[40][0] = -100;
</span></span><span id="line440"><span>weapons[40][1] = -50;
</span></span><span id="line441"><span>weapons[40][2] = -150;
</span></span><span id="line442"><span>weapons[40][3] = 150;
</span></span><span id="line443"><span>weapons[40][4] = 100;
</span></span><span id="line444"><span>weapons[40][5] = 0;
</span></span><span id="line445"><span>weapons[40][6] = 0;
</span></span><span id="line446"><span>weapons[40][7] = 0;
</span></span><span id="line447"><span>
</span></span><span id="line448"><span>// 41 - Leather Bracers
</span></span><span id="line449"><span>weapons[41][0] = -50;
</span></span><span id="line450"><span>weapons[41][1] = 0;
</span></span><span id="line451"><span>weapons[41][2] = -100;
</span></span><span id="line452"><span>weapons[41][3] = 300;
</span></span><span id="line453"><span>weapons[41][4] = 100;
</span></span><span id="line454"><span>weapons[41][5] = 0;
</span></span><span id="line455"><span>weapons[41][6] = 20;
</span></span><span id="line456"><span>weapons[41][7] = 0;
</span></span><span id="line457"><span>
</span></span><span id="line458"><span>// 42 - Metal Bracers
</span></span><span id="line459"><span>weapons[42][0] = 50;
</span></span><span id="line460"><span>weapons[42][1] = 0;
</span></span><span id="line461"><span>weapons[42][2] = -60;
</span></span><span id="line462"><span>weapons[42][3] = 300;
</span></span><span id="line463"><span>weapons[42][4] = 100;
</span></span><span id="line464"><span>weapons[42][5] = 0;
</span></span><span id="line465"><span>weapons[42][6] = 70;
</span></span><span id="line466"><span>weapons[42][7] = 0;
</span></span><span id="line467"><span>
</span></span><span id="line468"><span>// 50 - Greataxe
</span></span><span id="line469"><span>weapons[50][0] = 150;
</span></span><span id="line470"><span>weapons[50][1] = 300;
</span></span><span id="line471"><span>weapons[50][2] = 350;
</span></span><span id="line472"><span>weapons[50][3] = -600;
</span></span><span id="line473"><span>weapons[50][4] = -200;
</span></span><span id="line474"><span>weapons[50][5] = 0;
</span></span><span id="line475"><span>weapons[50][6] = -20;
</span></span><span id="line476"><span>weapons[50][7] = 0;
</span></span><span id="line477"><span>
</span></span><span id="line478"><span>// 51 - Greatsword
</span></span><span id="line479"><span>weapons[51][0] = 250;
</span></span><span id="line480"><span>weapons[51][1] = 210;
</span></span><span id="line481"><span>weapons[51][2] = 210;
</span></span><span id="line482"><span>weapons[51][3] = -300;
</span></span><span id="line483"><span>weapons[51][4] = -100;
</span></span><span id="line484"><span>weapons[51][5] = 0;
</span></span><span id="line485"><span>weapons[51][6] = 50;
</span></span><span id="line486"><span>weapons[51][7] = 0;
</span></span><span id="line487"><span>
</span></span><span id="line488"><span>// 60 - Anchor
</span></span><span id="line489"><span>weapons[60][0] = -200;
</span></span><span id="line490"><span>weapons[60][1] = 200;
</span></span><span id="line491"><span>weapons[60][2] = 200;
</span></span><span id="line492"><span>weapons[60][3] = -300;
</span></span><span id="line493"><span>weapons[60][4] = -300;
</span></span><span id="line494"><span>weapons[60][5] = 0;
</span></span><span id="line495"><span>weapons[60][6] = 50;
</span></span><span id="line496"><span>weapons[60][7] = 0;
</span></span><span id="line497"><span>
</span></span><span id="line498"><span>// 80 - Mace
</span></span><span id="line499"><span>weapons[80][0] = -100;
</span></span><span id="line500"><span>weapons[80][1] = 200;
</span></span><span id="line501"><span>weapons[80][2] = 300;
</span></span><span id="line502"><span>weapons[80][3] = -300;
</span></span><span id="line503"><span>weapons[80][4] = -100;
</span></span><span id="line504"><span>weapons[80][5] = 0;
</span></span><span id="line505"><span>weapons[80][6] = 0;
</span></span><span id="line506"><span>weapons[80][7] = 0;
</span></span><span id="line507"><span>
</span></span><span id="line508"><span>// 81 - Oak Basher
</span></span><span id="line509"><span>weapons[81][0] = -500;
</span></span><span id="line510"><span>weapons[81][1] = 600;
</span></span><span id="line511"><span>weapons[81][2] = 600;
</span></span><span id="line512"><span>weapons[81][3] = -1500;
</span></span><span id="line513"><span>weapons[81][4] = -500;
</span></span><span id="line514"><span>weapons[81][5] = 0;
</span></span><span id="line515"><span>weapons[81][6] = -500;
</span></span><span id="line516"><span>weapons[81][7] = 0;
</span></span><span id="line517"><span>
</span></span><span id="line518"><span>// 89 - Ethereal Sword
</span></span><span id="line519"><span>weapons[89][0] = 50;
</span></span><span id="line520"><span>weapons[89][1] = 0;
</span></span><span id="line521"><span>weapons[89][2] = 50;
</span></span><span id="line522"><span>weapons[89][3] = 0;
</span></span><span id="line523"><span>weapons[89][4] = 0;
</span></span><span id="line524"><span>weapons[89][5] = 0;
</span></span><span id="line525"><span>weapons[89][6] = 100;
</span></span><span id="line526"><span>weapons[89][7] = 0;
</span></span><span id="line527"><span>
</span></span><span id="line528"><span>// 90-99 - Gossamer
</span></span><span id="line529"><span>weapons[90][0] = 100;
</span></span><span id="line530"><span>weapons[90][1] = -50;
</span></span><span id="line531"><span>weapons[90][2] = -50;
</span></span><span id="line532"><span>weapons[90][3] = 450;
</span></span><span id="line533"><span>weapons[90][4] = 200;
</span></span><span id="line534"><span>weapons[90][5] = 0;
</span></span><span id="line535"><span>weapons[90][6] = 0;
</span></span><span id="line536"><span>weapons[90][7] = 0;
</span></span><span id="line537"><span>
</span></span><span id="line538"><span>for(var i=91; i</span><span>&lt;=</span><span>99; i++)
</span></span><span id="line539"><span>{
</span></span><span id="line540"><span>	weapons[i][0] = weapons[90][0];
</span></span><span id="line541"><span>	weapons[i][1] = weapons[90][1];
</span></span><span id="line542"><span>	weapons[i][2] = weapons[90][2];
</span></span><span id="line543"><span>	weapons[i][3] = weapons[90][3];
</span></span><span id="line544"><span>	weapons[i][4] = weapons[90][4];
</span></span><span id="line545"><span>	weapons[i][5] = weapons[90][5];
</span></span><span id="line546"><span>	weapons[i][6] = weapons[90][6];
</span></span><span id="line547"><span>	weapons[i][7] = weapons[90][7];
</span></span><span id="line548"><span>}
</span></span><span id="line549"><span>
</span></span><span id="line550"><span>// 100-102 - Fell
</span></span><span id="line551"><span>weapons[100][0] = 45;
</span></span><span id="line552"><span>weapons[100][1] = 125;
</span></span><span id="line553"><span>weapons[100][2] = 145;
</span></span><span id="line554"><span>weapons[100][3] = -240;
</span></span><span id="line555"><span>weapons[100][4] = -80;
</span></span><span id="line556"><span>weapons[100][5] = 0;
</span></span><span id="line557"><span>weapons[100][6] = 0;
</span></span><span id="line558"><span>weapons[100][7] = 0;
</span></span><span id="line559"><span>
</span></span><span id="line560"><span>for(var i=101; i</span><span>&lt;=</span><span>102; i++)
</span></span><span id="line561"><span>{
</span></span><span id="line562"><span>	weapons[i][0] = weapons[100][0];
</span></span><span id="line563"><span>	weapons[i][1] = weapons[100][1];
</span></span><span id="line564"><span>	weapons[i][2] = weapons[100][2];
</span></span><span id="line565"><span>	weapons[i][3] = weapons[100][3];
</span></span><span id="line566"><span>	weapons[i][4] = weapons[100][4];
</span></span><span id="line567"><span>	weapons[i][5] = weapons[100][5];
</span></span><span id="line568"><span>	weapons[i][6] = weapons[100][6];
</span></span><span id="line569"><span>	weapons[i][7] = weapons[100][7];
</span></span><span id="line570"><span>}
</span></span><span id="line571"><span>
</span></span><span id="line572"><span>// 103 - Tell
</span></span><span id="line573"><span>weapons[103][0] = 0;
</span></span><span id="line574"><span>weapons[103][1] = 0;
</span></span><span id="line575"><span>weapons[103][2] = 0;
</span></span><span id="line576"><span>weapons[103][3] = 0;
</span></span><span id="line577"><span>weapons[103][4] = 50;
</span></span><span id="line578"><span>weapons[103][5] = 0;
</span></span><span id="line579"><span>weapons[103][6] = 0;
</span></span><span id="line580"><span>weapons[103][7] = 0;
</span></span><span id="line581"><span>
</span></span><span id="line582"><span>// Labrys
</span></span><span id="line583"><span>weapons[110][0] = 45;
</span></span><span id="line584"><span>weapons[110][1] = 125;
</span></span><span id="line585"><span>weapons[110][2] = 145;
</span></span><span id="line586"><span>weapons[110][3] = -240;
</span></span><span id="line587"><span>weapons[110][4] = -80;
</span></span><span id="line588"><span>weapons[110][5] = 0;
</span></span><span id="line589"><span>weapons[110][6] = 0;
</span></span><span id="line590"><span>weapons[110][7] = 0;
</span></span><span id="line591"><span>
</span></span><span id="line592"><span>// Bloodblade
</span></span><span id="line593"><span>weapons[120][0] = 180;
</span></span><span id="line594"><span>weapons[120][1] = 100;
</span></span><span id="line595"><span>weapons[120][2] = 300;
</span></span><span id="line596"><span>weapons[120][3] = 300;
</span></span><span id="line597"><span>weapons[120][4] = 0;
</span></span><span id="line598"><span>weapons[120][5] = 0;
</span></span><span id="line599"><span>weapons[120][6] = 0;
</span></span><span id="line600"><span>weapons[120][7] = 0;
</span></span><span id="line601"><span>
</span></span><span id="line602"><span>// ****Left-Hand****
</span></span><span id="line603"><span>var lefts = new Array(109);
</span></span><span id="line604"><span>for (var i=0; i</span><span>&lt;l</span><span>efts.length; i++)
</span></span><span id="line605"><span>	lefts[i] = new Array(10);
</span></span><span id="line606"><span>// 0 - None
</span></span><span id="line607"><span>lefts[0][0] = 0;
</span></span><span id="line608"><span>lefts[0][1] = 0;
</span></span><span id="line609"><span>lefts[0][2] = 0;
</span></span><span id="line610"><span>lefts[0][3] = 0;
</span></span><span id="line611"><span>lefts[0][4] = 0;
</span></span><span id="line612"><span>lefts[0][5] = 0;
</span></span><span id="line613"><span>lefts[0][6] = 0;
</span></span><span id="line614"><span>lefts[0][7] = 0;
</span></span><span id="line615"><span>lefts[0][8] = 0;
</span></span><span id="line616"><span>lefts[0][9] = 0;
</span></span><span id="line617"><span>
</span></span><span id="line618"><span>// 1 - Main Gauche
</span></span><span id="line619"><span>lefts[1][0] = 100;
</span></span><span id="line620"><span>lefts[1][1] = 10;
</span></span><span id="line621"><span>lefts[1][2] = 10;
</span></span><span id="line622"><span>lefts[1][3] = -300;
</span></span><span id="line623"><span>lefts[1][4] = -100;
</span></span><span id="line624"><span>lefts[1][5] = 0;
</span></span><span id="line625"><span>lefts[1][6] = 100;
</span></span><span id="line626"><span>lefts[1][7] = 0;
</span></span><span id="line627"><span>lefts[1][8] = 0;
</span></span><span id="line628"><span>lefts[1][9] = 0;
</span></span><span id="line629"><span>
</span></span><span id="line630"><span>// 2 - Wooden Shield
</span></span><span id="line631"><span>lefts[2][0] = 0;
</span></span><span id="line632"><span>lefts[2][1] = 0;
</span></span><span id="line633"><span>lefts[2][2] = 0;
</span></span><span id="line634"><span>lefts[2][3] = -300;
</span></span><span id="line635"><span>lefts[2][4] = -100;
</span></span><span id="line636"><span>lefts[2][5] = 0;
</span></span><span id="line637"><span>lefts[2][6] = 300;
</span></span><span id="line638"><span>lefts[2][7] = 0;
</span></span><span id="line639"><span>lefts[2][8] = 0;
</span></span><span id="line640"><span>lefts[2][9] = 0;
</span></span><span id="line641"><span>
</span></span><span id="line642"><span>// 101-108 - Earth Minerals
</span></span><span id="line643"><span>lefts[101][0] = 0;
</span></span><span id="line644"><span>lefts[101][1] = 0;
</span></span><span id="line645"><span>lefts[101][2] = 0;
</span></span><span id="line646"><span>lefts[101][3] = 0;
</span></span><span id="line647"><span>lefts[101][4] = 0;
</span></span><span id="line648"><span>lefts[101][5] = 0;
</span></span><span id="line649"><span>lefts[101][6] = 0;
</span></span><span id="line650"><span>lefts[101][7] = 0;
</span></span><span id="line651"><span>lefts[101][8] = 0;
</span></span><span id="line652"><span>lefts[101][9] = 0;
</span></span><span id="line653"><span>
</span></span><span id="line654"><span>for(var i=102; i</span><span>&lt;1</span><span>09; i++)
</span></span><span id="line655"><span>{
</span></span><span id="line656"><span>	lefts[i][0] = lefts[101][0];
</span></span><span id="line657"><span>	lefts[i][1] = lefts[101][1];
</span></span><span id="line658"><span>	lefts[i][2] = lefts[101][2];
</span></span><span id="line659"><span>	lefts[i][3] = lefts[101][3];
</span></span><span id="line660"><span>	lefts[i][4] = lefts[101][4];
</span></span><span id="line661"><span>	lefts[i][5] = lefts[101][5];
</span></span><span id="line662"><span>	lefts[i][6] = lefts[101][6];
</span></span><span id="line663"><span>	lefts[i][7] = lefts[101][7];
</span></span><span id="line664"><span>	lefts[i][8] = lefts[101][8];
</span></span><span id="line665"><span>	lefts[i][9] = lefts[101][9];
</span></span><span id="line666"><span>}
</span></span><span id="line667"><span>
</span></span><span id="line668"><span>// ****Shoulders****
</span></span><span id="line669"><span>var shoulders = new Array(109);
</span></span><span id="line670"><span>for (var i=0; i</span><span>&lt;s</span><span>houlders.length; i++)
</span></span><span id="line671"><span>	shoulders[i] = new Array(10);
</span></span><span id="line672"><span>// 0 - None
</span></span><span id="line673"><span>shoulders[0][0] = 0;
</span></span><span id="line674"><span>shoulders[0][1] = 0;
</span></span><span id="line675"><span>shoulders[0][2] = 0;
</span></span><span id="line676"><span>shoulders[0][3] = 0;
</span></span><span id="line677"><span>shoulders[0][4] = 0;
</span></span><span id="line678"><span>shoulders[0][5] = 0;
</span></span><span id="line679"><span>shoulders[0][6] = 0;
</span></span><span id="line680"><span>shoulders[0][7] = 0;
</span></span><span id="line681"><span>shoulders[0][8] = 0;
</span></span><span id="line682"><span>shoulders[0][9] = 0;
</span></span><span id="line683"><span>
</span></span><span id="line684"><span>// 101-108 - Earth Minerals
</span></span><span id="line685"><span>shoulders[101][0] = 0;
</span></span><span id="line686"><span>shoulders[101][1] = 0;
</span></span><span id="line687"><span>shoulders[101][2] = 0;
</span></span><span id="line688"><span>shoulders[101][3] = 0;
</span></span><span id="line689"><span>shoulders[101][4] = 0;
</span></span><span id="line690"><span>shoulders[101][5] = 0;
</span></span><span id="line691"><span>shoulders[101][6] = 0;
</span></span><span id="line692"><span>shoulders[101][7] = 0;
</span></span><span id="line693"><span>shoulders[101][8] = 0;
</span></span><span id="line694"><span>shoulders[101][9] = 0;
</span></span><span id="line695"><span>
</span></span><span id="line696"><span>for(var i=102; i</span><span>&lt;1</span><span>09; i++)
</span></span><span id="line697"><span>{
</span></span><span id="line698"><span>	shoulders[i][0] = shoulders[101][0];
</span></span><span id="line699"><span>	shoulders[i][1] = shoulders[101][1];
</span></span><span id="line700"><span>	shoulders[i][2] = shoulders[101][2];
</span></span><span id="line701"><span>	shoulders[i][3] = shoulders[101][3];
</span></span><span id="line702"><span>	shoulders[i][4] = shoulders[101][4];
</span></span><span id="line703"><span>	shoulders[i][5] = shoulders[101][5];
</span></span><span id="line704"><span>	shoulders[i][6] = shoulders[101][6];
</span></span><span id="line705"><span>	shoulders[i][7] = shoulders[101][7];
</span></span><span id="line706"><span>	shoulders[i][8] = shoulders[101][8];
</span></span><span id="line707"><span>	shoulders[i][9] = shoulders[101][9];
</span></span><span id="line708"><span>}
</span></span><span id="line709"><span>
</span></span><span id="line710"><span>
</span></span><span id="line711"><span>// -------------------------------------------------------------------------------------------------------
</span></span><span id="line712"><span>
</span></span><span id="line713"><span>var allIconMenus = [ ];
</span></span><span id="line714"><span>var menuLookup = [ ];
</span></span><span id="line715"><span>
</span></span><span id="line716"><span>function initIconMenus() {
</span></span><span id="line717"><span>  var m;
</span></span><span id="line718"><span>  
</span></span><span id="line719"><span>  
</span></span><span id="line720"><span>  // Races Menu
</span></span><span id="line721"><span>  
</span></span><span id="line722"><span>  m = new iconMenu({
</span></span><span id="line723"><span>    inputName:"Race",
</span></span><span id="line724"><span>    containerID:"RaceOuter",
</span></span><span id="line725"><span>    onchange:function(val) { calculate(); saveData(CurrSet, 1); },
</span></span><span id="line726"><span>    inputIconW:42,
</span></span><span id="line727"><span>    inputIconH:42,
</span></span><span id="line728"><span>    menuSpacingW:2,
</span></span><span id="line729"><span>    menuSpacingH:2
</span></span><span id="line730"><span>  });
</span></span><span id="line731"><span>  allIconMenus[allIconMenus.length] = m;
</span></span><span id="line732"><span>  menuLookup[m.inputName] = m;
</span></span><span id="line733"><span>  
</span></span><span id="line734"><span>  m.addOpt({
</span></span><span id="line735"><span>    name:"Human/Undisclosed",
</span></span><span id="line736"><span>    value:0,
</span></span><span id="line737"><span>    showTooltip:false,
</span></span><span id="line738"><span>    menuImgPath:"../images/races/human_male.png",
</span></span><span id="line739"><span>    gridX:0,
</span></span><span id="line740"><span>    gridY:0
</span></span><span id="line741"><span>  });
</span></span><span id="line742"><span>  
</span></span><span id="line743"><span>  m.addOpt({
</span></span><span id="line744"><span>    name:"Human/Undisclosed",
</span></span><span id="line745"><span>    value:"0F",
</span></span><span id="line746"><span>    showName:true,
</span></span><span id="line747"><span>    showTooltip:false,
</span></span><span id="line748"><span>    menuImgPath:"../images/races/human_female.png",
</span></span><span id="line749"><span>    gridX:1,
</span></span><span id="line750"><span>    gridY:0
</span></span><span id="line751"><span>  });
</span></span><span id="line752"><span>  
</span></span><span id="line753"><span>  m.addOpt({
</span></span><span id="line754"><span>    name:"Dwarf",
</span></span><span id="line755"><span>    value:1,
</span></span><span id="line756"><span>    showTooltip:false,
</span></span><span id="line757"><span>    menuImgPath:"../images/races/dwarf_male.png",
</span></span><span id="line758"><span>    gridX:0,
</span></span><span id="line759"><span>    gridY:1
</span></span><span id="line760"><span>  });
</span></span><span id="line761"><span>  
</span></span><span id="line762"><span>  m.addOpt({
</span></span><span id="line763"><span>    name:"Dwarf",
</span></span><span id="line764"><span>    value:"1F",
</span></span><span id="line765"><span>    showName:true,
</span></span><span id="line766"><span>    showTooltip:false,
</span></span><span id="line767"><span>    menuImgPath:"../images/races/dwarf_female.png",
</span></span><span id="line768"><span>    gridX:1,
</span></span><span id="line769"><span>    gridY:1
</span></span><span id="line770"><span>  });
</span></span><span id="line771"><span>  
</span></span><span id="line772"><span>  m.addOpt({
</span></span><span id="line773"><span>    name:"Fen",
</span></span><span id="line774"><span>    value:2,
</span></span><span id="line775"><span>    showTooltip:false,
</span></span><span id="line776"><span>    menuImgPath:"../images/races/fen_male.png",
</span></span><span id="line777"><span>    gridX:0,
</span></span><span id="line778"><span>    gridY:2
</span></span><span id="line779"><span>  });
</span></span><span id="line780"><span>  
</span></span><span id="line781"><span>  m.addOpt({
</span></span><span id="line782"><span>    name:"Fen",
</span></span><span id="line783"><span>    value:"2F",
</span></span><span id="line784"><span>    showName:true,
</span></span><span id="line785"><span>    showTooltip:false,
</span></span><span id="line786"><span>    menuImgPath:"../images/races/fen_female.png",
</span></span><span id="line787"><span>    gridX:1,
</span></span><span id="line788"><span>    gridY:2
</span></span><span id="line789"><span>  });
</span></span><span id="line790"><span>  
</span></span><span id="line791"><span>  m.addOpt({
</span></span><span id="line792"><span>    name:"Halfling",
</span></span><span id="line793"><span>    value:3,
</span></span><span id="line794"><span>    showTooltip:false,
</span></span><span id="line795"><span>    menuImgPath:"../images/races/halfling_male.png",
</span></span><span id="line796"><span>    gridX:0,
</span></span><span id="line797"><span>    gridY:3
</span></span><span id="line798"><span>  });
</span></span><span id="line799"><span>  
</span></span><span id="line800"><span>  m.addOpt({
</span></span><span id="line801"><span>    name:"Halfling",
</span></span><span id="line802"><span>    value:"3F",
</span></span><span id="line803"><span>    showName:true,
</span></span><span id="line804"><span>    showTooltip:false,
</span></span><span id="line805"><span>    menuImgPath:"../images/races/halfling_female.png",
</span></span><span id="line806"><span>    gridX:1,
</span></span><span id="line807"><span>    gridY:3
</span></span><span id="line808"><span>  });
</span></span><span id="line809"><span>  
</span></span><span id="line810"><span>  m.addOpt({
</span></span><span id="line811"><span>    name:"Ghorak Zo",
</span></span><span id="line812"><span>    value:4,
</span></span><span id="line813"><span>    showTooltip:false,
</span></span><span id="line814"><span>    menuImgPath:"../images/races/zo_male.png",
</span></span><span id="line815"><span>    gridX:0,
</span></span><span id="line816"><span>    gridY:4
</span></span><span id="line817"><span>  });
</span></span><span id="line818"><span>  
</span></span><span id="line819"><span>  m.addOpt({
</span></span><span id="line820"><span>    name:"Ghorak Zo",
</span></span><span id="line821"><span>    value:"4F",
</span></span><span id="line822"><span>    showName:true,
</span></span><span id="line823"><span>    showTooltip:false,
</span></span><span id="line824"><span>    menuImgPath:"../images/races/zo_female.png",
</span></span><span id="line825"><span>    gridX:1,
</span></span><span id="line826"><span>    gridY:4
</span></span><span id="line827"><span>  });
</span></span><span id="line828"><span>  
</span></span><span id="line829"><span>  m.addOpt({
</span></span><span id="line830"><span>    name:"Sylvan",
</span></span><span id="line831"><span>    value:5,
</span></span><span id="line832"><span>    showTooltip:false,
</span></span><span id="line833"><span>    menuImgPath:"../images/races/sylvan_male.png",
</span></span><span id="line834"><span>    gridX:0,
</span></span><span id="line835"><span>    gridY:5
</span></span><span id="line836"><span>  });
</span></span><span id="line837"><span>  
</span></span><span id="line838"><span>  m.addOpt({
</span></span><span id="line839"><span>    name:"Sylvan",
</span></span><span id="line840"><span>    value:"5F",
</span></span><span id="line841"><span>    showName:true,
</span></span><span id="line842"><span>    showTooltip:false,
</span></span><span id="line843"><span>    menuImgPath:"../images/races/sylvan_female.png",
</span></span><span id="line844"><span>    gridX:1,
</span></span><span id="line845"><span>    gridY:5
</span></span><span id="line846"><span>  });
</span></span><span id="line847"><span>  
</span></span><span id="line848"><span>  m.addOpt({
</span></span><span id="line849"><span>    name:"Thoom",
</span></span><span id="line850"><span>    value:6,
</span></span><span id="line851"><span>    showTooltip:false,
</span></span><span id="line852"><span>    menuImgPath:"../images/races/thoom_male.png",
</span></span><span id="line853"><span>    gridX:0,
</span></span><span id="line854"><span>    gridY:6
</span></span><span id="line855"><span>  });
</span></span><span id="line856"><span>  
</span></span><span id="line857"><span>  m.addOpt({
</span></span><span id="line858"><span>    name:"Thoom",
</span></span><span id="line859"><span>    value:"6F",
</span></span><span id="line860"><span>    showName:true,
</span></span><span id="line861"><span>    showTooltip:false,
</span></span><span id="line862"><span>    menuImgPath:"../images/races/thoom_female.png",
</span></span><span id="line863"><span>    gridX:1,
</span></span><span id="line864"><span>    gridY:6
</span></span><span id="line865"><span>  });
</span></span><span id="line866"><span>  
</span></span><span id="line867"><span>  m.addOpt({
</span></span><span id="line868"><span>    name:"Magic 0-Stat Race",
</span></span><span id="line869"><span>    value:7,
</span></span><span id="line870"><span>    showName:true,
</span></span><span id="line871"><span>    showTooltip:false,
</span></span><span id="line872"><span>    menuImgPath:"../images/races/zero.png",
</span></span><span id="line873"><span>    gridX:1,
</span></span><span id="line874"><span>    gridY:7
</span></span><span id="line875"><span>  });
</span></span><span id="line876"><span>  
</span></span><span id="line877"><span>  
</span></span><span id="line878"><span>  // Weapon Menu
</span></span><span id="line879"><span>  
</span></span><span id="line880"><span>  m = new iconMenu({
</span></span><span id="line881"><span>    inputName:"Weapon",
</span></span><span id="line882"><span>    containerID:"WeaponOuter",
</span></span><span id="line883"><span>    onchange:function(val) { if(val == 89) setToggle('toggleDarkusBreakdownImg', 'toggleDarkusBreakdownInput', 'Y', [ 'DarkusBreakdown' ]); calculate(); },
</span></span><span id="line884"><span>    inputIconW:42,
</span></span><span id="line885"><span>    inputIconH:42,
</span></span><span id="line886"><span>    menuSpacingW:2,
</span></span><span id="line887"><span>    menuSpacingH:2
</span></span><span id="line888"><span>  });
</span></span><span id="line889"><span>  allIconMenus[allIconMenus.length] = m;
</span></span><span id="line890"><span>  menuLookup[m.inputName] = m;
</span></span><span id="line891"><span>  
</span></span><span id="line892"><span>  m.addOpt({
</span></span><span id="line893"><span>    name:"Roguewood Club",
</span></span><span id="line894"><span>    value:0,
</span></span><span id="line895"><span>    menuImgPath:"../images/club.png",
</span></span><span id="line896"><span>    gridX:0,
</span></span><span id="line897"><span>    gridY:0
</span></span><span id="line898"><span>  });
</span></span><span id="line899"><span>  
</span></span><span id="line900"><span>  m.addOpt({
</span></span><span id="line901"><span>    name:"Studded Club",
</span></span><span id="line902"><span>    value:5,
</span></span><span id="line903"><span>    menuImgPath:"../images/studclub.png",
</span></span><span id="line904"><span>    gridX:1,
</span></span><span id="line905"><span>    gridY:0
</span></span><span id="line906"><span>  });
</span></span><span id="line907"><span>  
</span></span><span id="line908"><span>  m.addOpt({
</span></span><span id="line909"><span>    name:"Quarterstaff",
</span></span><span id="line910"><span>    value:11,
</span></span><span id="line911"><span>    menuImgPath:"../images/QS.png",
</span></span><span id="line912"><span>    gridX:2,
</span></span><span id="line913"><span>    gridY:0
</span></span><span id="line914"><span>  });
</span></span><span id="line915"><span>  
</span></span><span id="line916"><span>  m.addOpt({
</span></span><span id="line917"><span>    name:"Flail",
</span></span><span id="line918"><span>    value:12,
</span></span><span id="line919"><span>    menuImgPath:"../images/flail.png",
</span></span><span id="line920"><span>    gridX:3,
</span></span><span id="line921"><span>    gridY:0
</span></span><span id="line922"><span>  });
</span></span><span id="line923"><span>  
</span></span><span id="line924"><span>  m.addOpt({
</span></span><span id="line925"><span>    name:"Battle Hammer",
</span></span><span id="line926"><span>    value:13,
</span></span><span id="line927"><span>    menuImgPath:"../images/hammer.png",
</span></span><span id="line928"><span>    gridX:4,
</span></span><span id="line929"><span>    gridY:0
</span></span><span id="line930"><span>  });
</span></span><span id="line931"><span>  
</span></span><span id="line932"><span>  m.addOpt({
</span></span><span id="line933"><span>    name:"Mace",
</span></span><span id="line934"><span>    value:80,
</span></span><span id="line935"><span>    menuImgPath:"../images/mace.png",
</span></span><span id="line936"><span>    gridX:5,
</span></span><span id="line937"><span>    gridY:0
</span></span><span id="line938"><span>  });
</span></span><span id="line939"><span>  
</span></span><span id="line940"><span>  m.addOpt({
</span></span><span id="line941"><span>    name:"Oak Basher",
</span></span><span id="line942"><span>    value:81,
</span></span><span id="line943"><span>    menuImgPath:"../images/OB.png",
</span></span><span id="line944"><span>    gridX:6,
</span></span><span id="line945"><span>    gridY:0
</span></span><span id="line946"><span>  });
</span></span><span id="line947"><span>  
</span></span><span id="line948"><span>  m.addOpt({
</span></span><span id="line949"><span>    name:"Anchor",
</span></span><span id="line950"><span>    value:60,
</span></span><span id="line951"><span>    menuImgPath:"../images/anchor.png",
</span></span><span id="line952"><span>    gridX:0,
</span></span><span id="line953"><span>    gridY:1
</span></span><span id="line954"><span>  });
</span></span><span id="line955"><span>  
</span></span><span id="line956"><span>  m.addOpt({
</span></span><span id="line957"><span>    name:"Shovel",
</span></span><span id="line958"><span>    value:6,
</span></span><span id="line959"><span>    menuImgPath:"../images/shovel.png",
</span></span><span id="line960"><span>    gridX:1,
</span></span><span id="line961"><span>    gridY:1
</span></span><span id="line962"><span>  });
</span></span><span id="line963"><span>  
</span></span><span id="line964"><span>  m.addOpt({
</span></span><span id="line965"><span>    name:"Sturdy Limb",
</span></span><span id="line966"><span>    value:8,
</span></span><span id="line967"><span>    menuImgPath:"../images/limb.png",
</span></span><span id="line968"><span>    gridX:2,
</span></span><span id="line969"><span>    gridY:1
</span></span><span id="line970"><span>  });
</span></span><span id="line971"><span>  
</span></span><span id="line972"><span>  m.addOpt({
</span></span><span id="line973"><span>    name:"Spike",
</span></span><span id="line974"><span>    value:9,
</span></span><span id="line975"><span>    menuImgPath:"../images/spike.png",
</span></span><span id="line976"><span>    gridX:3,
</span></span><span id="line977"><span>    gridY:1
</span></span><span id="line978"><span>  });
</span></span><span id="line979"><span>  
</span></span><span id="line980"><span>  m.addOpt({
</span></span><span id="line981"><span>    name:"Seta Scale",
</span></span><span id="line982"><span>    value:10,
</span></span><span id="line983"><span>    menuImgPath:"../images/setascale.png",
</span></span><span id="line984"><span>    gridX:4,
</span></span><span id="line985"><span>    gridY:1
</span></span><span id="line986"><span>  });
</span></span><span id="line987"><span>  
</span></span><span id="line988"><span>  m.addOpt({
</span></span><span id="line989"><span>    name:"Boar Tusk",
</span></span><span id="line990"><span>    value:7,
</span></span><span id="line991"><span>    menuImgPath:"../images/tusk2.png",
</span></span><span id="line992"><span>    gridX:5,
</span></span><span id="line993"><span>    gridY:1
</span></span><span id="line994"><span>  });
</span></span><span id="line995"><span>  
</span></span><span id="line996"><span>  m.addOpt({
</span></span><span id="line997"><span>    name:"Lyfelidae Claw",
</span></span><span id="line998"><span>    value:4,
</span></span><span id="line999"><span>    menuImgPath:"../images/claw.png",
</span></span><span id="line1000"><span>    gridX:6,
</span></span><span id="line1001"><span>    gridY:1
</span></span><span id="line1002"><span>  });
</span></span><span id="line1003"><span>  
</span></span><span id="line1004"><span>  m.addOpt({
</span></span><span id="line1005"><span>    name:"Dagger",
</span></span><span id="line1006"><span>    value:1,
</span></span><span id="line1007"><span>    menuImgPath:"../images/dagger.png",
</span></span><span id="line1008"><span>    gridX:0,
</span></span><span id="line1009"><span>    gridY:2
</span></span><span id="line1010"><span>  });
</span></span><span id="line1011"><span>  
</span></span><span id="line1012"><span>  m.addOpt({
</span></span><span id="line1013"><span>    name:"Dueling Blade",
</span></span><span id="line1014"><span>    value:2,
</span></span><span id="line1015"><span>    menuImgPath:"../images/duelingblade.png",
</span></span><span id="line1016"><span>    gridX:1,
</span></span><span id="line1017"><span>    gridY:2
</span></span><span id="line1018"><span>  });
</span></span><span id="line1019"><span>  
</span></span><span id="line1020"><span>  m.addOpt({
</span></span><span id="line1021"><span>    name:"Rapier",
</span></span><span id="line1022"><span>    value:21,
</span></span><span id="line1023"><span>    menuImgPath:"../images/rapier.png",
</span></span><span id="line1024"><span>    gridX:2,
</span></span><span id="line1025"><span>    gridY:2
</span></span><span id="line1026"><span>  });
</span></span><span id="line1027"><span>  
</span></span><span id="line1028"><span>  m.addOpt({
</span></span><span id="line1029"><span>    name:"Shiny Dagger",
</span></span><span id="line1030"><span>    value:3,
</span></span><span id="line1031"><span>    menuImgPath:"../images/SD.png",
</span></span><span id="line1032"><span>    gridX:3,
</span></span><span id="line1033"><span>    gridY:2
</span></span><span id="line1034"><span>  });
</span></span><span id="line1035"><span>  
</span></span><span id="line1036"><span>  m.addOpt({
</span></span><span id="line1037"><span>    name:"Short Sword",
</span></span><span id="line1038"><span>    value:20,
</span></span><span id="line1039"><span>    menuImgPath:"../images/shortsword.png",
</span></span><span id="line1040"><span>    gridX:0,
</span></span><span id="line1041"><span>    gridY:3
</span></span><span id="line1042"><span>  });
</span></span><span id="line1043"><span>  
</span></span><span id="line1044"><span>  m.addOpt({
</span></span><span id="line1045"><span>    name:"Machete",
</span></span><span id="line1046"><span>    value:24,
</span></span><span id="line1047"><span>    menuImgPath:"../images/machete.png",
</span></span><span id="line1048"><span>    gridX:1,
</span></span><span id="line1049"><span>    gridY:3
</span></span><span id="line1050"><span>  });
</span></span><span id="line1051"><span>  
</span></span><span id="line1052"><span>  m.addOpt({
</span></span><span id="line1053"><span>    name:"Longsword",
</span></span><span id="line1054"><span>    value:22,
</span></span><span id="line1055"><span>    menuImgPath:"../images/LS.png",
</span></span><span id="line1056"><span>    gridX:2,
</span></span><span id="line1057"><span>    gridY:3
</span></span><span id="line1058"><span>  });
</span></span><span id="line1059"><span>  
</span></span><span id="line1060"><span>  m.addOpt({
</span></span><span id="line1061"><span>    name:"Broadsword",
</span></span><span id="line1062"><span>    value:23,
</span></span><span id="line1063"><span>    menuImgPath:"../images/BS.png",
</span></span><span id="line1064"><span>    gridX:3,
</span></span><span id="line1065"><span>    gridY:3
</span></span><span id="line1066"><span>  });
</span></span><span id="line1067"><span>  
</span></span><span id="line1068"><span>  m.addOpt({
</span></span><span id="line1069"><span>    name:"Greatsword",
</span></span><span id="line1070"><span>    value:51,
</span></span><span id="line1071"><span>    menuImgPath:"../images/GS.png",
</span></span><span id="line1072"><span>    gridX:4,
</span></span><span id="line1073"><span>    gridY:3
</span></span><span id="line1074"><span>  });
</span></span><span id="line1075"><span>  
</span></span><span id="line1076"><span>  m.addOpt({
</span></span><span id="line1077"><span>    name:"Ethereal Sword",
</span></span><span id="line1078"><span>    value:89,
</span></span><span id="line1079"><span>    menuImgPath:"../images/ethsword.png",
</span></span><span id="line1080"><span>    gridX:5,
</span></span><span id="line1081"><span>    gridY:3
</span></span><span id="line1082"><span>  });
</span></span><span id="line1083"><span>  
</span></span><span id="line1084"><span>  m.addOpt({
</span></span><span id="line1085"><span>    name:"Hand Axe",
</span></span><span id="line1086"><span>    value:30,
</span></span><span id="line1087"><span>    menuImgPath:"../images/handaxe.png",
</span></span><span id="line1088"><span>    gridX:0,
</span></span><span id="line1089"><span>    gridY:4
</span></span><span id="line1090"><span>  });
</span></span><span id="line1091"><span>  
</span></span><span id="line1092"><span>  m.addOpt({
</span></span><span id="line1093"><span>    name:"Axe",
</span></span><span id="line1094"><span>    value:31,
</span></span><span id="line1095"><span>    menuImgPath:"../images/axe.png",
</span></span><span id="line1096"><span>    gridX:1,
</span></span><span id="line1097"><span>    gridY:4
</span></span><span id="line1098"><span>  });
</span></span><span id="line1099"><span>  
</span></span><span id="line1100"><span>  m.addOpt({
</span></span><span id="line1101"><span>    name:"Greataxe",
</span></span><span id="line1102"><span>    value:50,
</span></span><span id="line1103"><span>    menuImgPath:"../images/GA.png",
</span></span><span id="line1104"><span>    gridX:2,
</span></span><span id="line1105"><span>    gridY:4
</span></span><span id="line1106"><span>  });
</span></span><span id="line1107"><span>  
</span></span><span id="line1108"><span>  m.addOpt({
</span></span><span id="line1109"><span>    name:"Cloth Bracers",
</span></span><span id="line1110"><span>    value:40,
</span></span><span id="line1111"><span>    menuImgPath:"../images/CB.png",
</span></span><span id="line1112"><span>    gridX:0,
</span></span><span id="line1113"><span>    gridY:5
</span></span><span id="line1114"><span>  });
</span></span><span id="line1115"><span>  
</span></span><span id="line1116"><span>  m.addOpt({
</span></span><span id="line1117"><span>    name:"Leather Bracers",
</span></span><span id="line1118"><span>    value:41,
</span></span><span id="line1119"><span>    menuImgPath:"../images/LB.png",
</span></span><span id="line1120"><span>    gridX:1,
</span></span><span id="line1121"><span>    gridY:5
</span></span><span id="line1122"><span>  });
</span></span><span id="line1123"><span>  
</span></span><span id="line1124"><span>  m.addOpt({
</span></span><span id="line1125"><span>    name:"Metal Bracers",
</span></span><span id="line1126"><span>    value:42,
</span></span><span id="line1127"><span>    menuImgPath:"../images/MB.png",
</span></span><span id="line1128"><span>    gridX:2,
</span></span><span id="line1129"><span>    gridY:5
</span></span><span id="line1130"><span>  });
</span></span><span id="line1131"><span>  
</span></span><span id="line1132"><span>  m.addOpt({
</span></span><span id="line1133"><span>    name:"Tell Blade",
</span></span><span id="line1134"><span>    value:103,
</span></span><span id="line1135"><span>    menuImgPath:"../images/tell.png",
</span></span><span id="line1136"><span>    gridX:0,
</span></span><span id="line1137"><span>    gridY:6
</span></span><span id="line1138"><span>  });
</span></span><span id="line1139"><span>  
</span></span><span id="line1140"><span>  m.addOpt({
</span></span><span id="line1141"><span>    name:"Labrys",
</span></span><span id="line1142"><span>    value:110,
</span></span><span id="line1143"><span>    menuImgPath:"../images/labrys.png",
</span></span><span id="line1144"><span>    gridX:1,
</span></span><span id="line1145"><span>    gridY:6
</span></span><span id="line1146"><span>  });
</span></span><span id="line1147"><span>  
</span></span><span id="line1148"><span>  m.addOpt({
</span></span><span id="line1149"><span>    name:"Fell Blade (Normal Attack)",
</span></span><span id="line1150"><span>    value:100,
</span></span><span id="line1151"><span>    menuIconText:"",
</span></span><span id="line1152"><span>    menuIconTextAlign:"right",
</span></span><span id="line1153"><span>    menuIconTextVAlign:"bottom",
</span></span><span id="line1154"><span>    menuImgPath:"../images/fell.png",
</span></span><span id="line1155"><span>    gridX:2,
</span></span><span id="line1156"><span>    gridY:6
</span></span><span id="line1157"><span>  });
</span></span><span id="line1158"><span>  
</span></span><span id="line1159"><span>  m.addOpt({
</span></span><span id="line1160"><span>    name:"Fell Blade (Angled Backstab)",
</span></span><span id="line1161"><span>    value:101,
</span></span><span id="line1162"><span>    menuIconText:"1/2",
</span></span><span id="line1163"><span>    menuIconTextAlign:"right",
</span></span><span id="line1164"><span>    menuIconTextVAlign:"bottom",
</span></span><span id="line1165"><span>    menuImgPath:"../images/fell.png",
</span></span><span id="line1166"><span>    gridX:3,
</span></span><span id="line1167"><span>    gridY:6
</span></span><span id="line1168"><span>  });
</span></span><span id="line1169"><span>  
</span></span><span id="line1170"><span>  m.addOpt({
</span></span><span id="line1171"><span>    name:"Fell Blade (Direct Backstab)",
</span></span><span id="line1172"><span>    value:102,
</span></span><span id="line1173"><span>    menuIconText:"B",
</span></span><span id="line1174"><span>    menuIconTextAlign:"right",
</span></span><span id="line1175"><span>    menuIconTextVAlign:"bottom",
</span></span><span id="line1176"><span>    menuImgPath:"../images/fell.png",
</span></span><span id="line1177"><span>    gridX:4,
</span></span><span id="line1178"><span>    gridY:6
</span></span><span id="line1179"><span>  });
</span></span><span id="line1180"><span>  
</span></span><span id="line1181"><span>  m.addOpt({
</span></span><span id="line1182"><span>    name:"Gossamer (No Studies)",
</span></span><span id="line1183"><span>    value:90,
</span></span><span id="line1184"><span>    menuIconText:"",
</span></span><span id="line1185"><span>    menuIconTextAlign:"right",
</span></span><span id="line1186"><span>    menuIconTextVAlign:"top",
</span></span><span id="line1187"><span>    menuImgPath:"../images/goss.png",
</span></span><span id="line1188"><span>    gridX:0,
</span></span><span id="line1189"><span>    gridY:7
</span></span><span id="line1190"><span>  });
</span></span><span id="line1191"><span>  
</span></span><span id="line1192"><span>  m.addOpt({
</span></span><span id="line1193"><span>    name:"Gossamer (Level 1 Family Bonus)",
</span></span><span id="line1194"><span>    value:93,
</span></span><span id="line1195"><span>    menuIconText:"F1",
</span></span><span id="line1196"><span>    menuIconTextAlign:"right",
</span></span><span id="line1197"><span>    menuIconTextVAlign:"top",
</span></span><span id="line1198"><span>    menuImgPath:"../images/goss.png",
</span></span><span id="line1199"><span>    gridX:1,
</span></span><span id="line1200"><span>    gridY:7
</span></span><span id="line1201"><span>  });
</span></span><span id="line1202"><span>  
</span></span><span id="line1203"><span>  m.addOpt({
</span></span><span id="line1204"><span>    name:"Gossamer (Level 2 Family Bonus)",
</span></span><span id="line1205"><span>    value:94,
</span></span><span id="line1206"><span>    menuIconText:"F2",
</span></span><span id="line1207"><span>    menuIconTextAlign:"right",
</span></span><span id="line1208"><span>    menuIconTextVAlign:"top",
</span></span><span id="line1209"><span>    menuImgPath:"../images/goss.png",
</span></span><span id="line1210"><span>    gridX:2,
</span></span><span id="line1211"><span>    gridY:7
</span></span><span id="line1212"><span>  });
</span></span><span id="line1213"><span>  
</span></span><span id="line1214"><span>  m.addOpt({
</span></span><span id="line1215"><span>    name:"Gossamer (Level 3 Family Bonus)",
</span></span><span id="line1216"><span>    value:95,
</span></span><span id="line1217"><span>    menuIconText:"F3",
</span></span><span id="line1218"><span>    menuIconTextAlign:"right",
</span></span><span id="line1219"><span>    menuIconTextVAlign:"top",
</span></span><span id="line1220"><span>    menuImgPath:"../images/goss.png",
</span></span><span id="line1221"><span>    gridX:3,
</span></span><span id="line1222"><span>    gridY:7
</span></span><span id="line1223"><span>  });
</span></span><span id="line1224"><span>  
</span></span><span id="line1225"><span>  m.addOpt({
</span></span><span id="line1226"><span>    name:"Gossamer (Level 4 Family Bonus)",
</span></span><span id="line1227"><span>    value:96,
</span></span><span id="line1228"><span>    menuIconText:"F4",
</span></span><span id="line1229"><span>    menuIconTextAlign:"right",
</span></span><span id="line1230"><span>    menuIconTextVAlign:"top",
</span></span><span id="line1231"><span>    menuImgPath:"../images/goss.png",
</span></span><span id="line1232"><span>    gridX:4,
</span></span><span id="line1233"><span>    gridY:7
</span></span><span id="line1234"><span>  });
</span></span><span id="line1235"><span>  
</span></span><span id="line1236"><span>  m.addOpt({
</span></span><span id="line1237"><span>    name:"Gossamer (Level 5 Family Bonus)",
</span></span><span id="line1238"><span>    value:97,
</span></span><span id="line1239"><span>    menuIconText:"F5",
</span></span><span id="line1240"><span>    menuIconTextAlign:"right",
</span></span><span id="line1241"><span>    menuIconTextVAlign:"top",
</span></span><span id="line1242"><span>    menuImgPath:"../images/goss.png",
</span></span><span id="line1243"><span>    gridX:5,
</span></span><span id="line1244"><span>    gridY:7
</span></span><span id="line1245"><span>  });
</span></span><span id="line1246"><span>  
</span></span><span id="line1247"><span>  m.addOpt({
</span></span><span id="line1248"><span>    name:"Gossamer (Movement Studies)",
</span></span><span id="line1249"><span>    value:98,
</span></span><span id="line1250"><span>    menuIconText:"S",
</span></span><span id="line1251"><span>    menuIconTextAlign:"right",
</span></span><span id="line1252"><span>    menuIconTextVAlign:"top",
</span></span><span id="line1253"><span>    menuImgPath:"../images/goss.png",
</span></span><span id="line1254"><span>    gridX:6,
</span></span><span id="line1255"><span>    gridY:7
</span></span><span id="line1256"><span>  });
</span></span><span id="line1257"><span>  
</span></span><span id="line1258"><span>  m.addOpt({
</span></span><span id="line1259"><span>    name:"Bloodblade (Base Stats Only)",
</span></span><span id="line1260"><span>    value:120,
</span></span><span id="line1261"><span>    menuImgPath:"../images/BB.png",
</span></span><span id="line1262"><span>    gridX:0,
</span></span><span id="line1263"><span>    gridY:8
</span></span><span id="line1264"><span>  });
</span></span><span id="line1265"><span>  
</span></span><span id="line1266"><span>  
</span></span><span id="line1267"><span>  // Left Hand Menu
</span></span><span id="line1268"><span>  
</span></span><span id="line1269"><span>  m = new iconMenu({
</span></span><span id="line1270"><span>    inputName:"Lefthand",
</span></span><span id="line1271"><span>    containerID:"LefthandOuter",
</span></span><span id="line1272"><span>    onchange:function(val) { fixIteEquipment("lefthand"); calculate(); },
</span></span><span id="line1273"><span>    inputIconW:42,
</span></span><span id="line1274"><span>    inputIconH:42,
</span></span><span id="line1275"><span>    menuSpacingW:2,
</span></span><span id="line1276"><span>    menuSpacingH:2
</span></span><span id="line1277"><span>  });
</span></span><span id="line1278"><span>  allIconMenus[allIconMenus.length] = m;
</span></span><span id="line1279"><span>  menuLookup[m.inputName] = m;
</span></span><span id="line1280"><span>  
</span></span><span id="line1281"><span>  m.addOpt({
</span></span><span id="line1282"><span>    name:"Nothing",
</span></span><span id="line1283"><span>    value:0,
</span></span><span id="line1284"><span>    menuImgPath:"../images/no_item.png",
</span></span><span id="line1285"><span>    gridX:0,
</span></span><span id="line1286"><span>    gridY:0
</span></span><span id="line1287"><span>  });
</span></span><span id="line1288"><span>  
</span></span><span id="line1289"><span>  m.addOpt({
</span></span><span id="line1290"><span>    name:"Wooden Shield",
</span></span><span id="line1291"><span>    value:2,
</span></span><span id="line1292"><span>    menuImgPath:"../images/woodshield.png",
</span></span><span id="line1293"><span>    gridX:1,
</span></span><span id="line1294"><span>    gridY:0
</span></span><span id="line1295"><span>  });
</span></span><span id="line1296"><span>  
</span></span><span id="line1297"><span>  m.addOpt({
</span></span><span id="line1298"><span>    name:"Main Gauche",
</span></span><span id="line1299"><span>    value:1,
</span></span><span id="line1300"><span>    menuImgPath:"../images/MG.png",
</span></span><span id="line1301"><span>    gridX:2,
</span></span><span id="line1302"><span>    gridY:0
</span></span><span id="line1303"><span>  });
</span></span><span id="line1304"><span>  
</span></span><span id="line1305"><span>  m.addOpt({
</span></span><span id="line1306"><span>    name:"Atkite",
</span></span><span id="line1307"><span>    value:101,
</span></span><span id="line1308"><span>    menuImgPath:"../images/atkite.png",
</span></span><span id="line1309"><span>    gridX:0,
</span></span><span id="line1310"><span>    gridY:1
</span></span><span id="line1311"><span>  });
</span></span><span id="line1312"><span>  
</span></span><span id="line1313"><span>  m.addOpt({
</span></span><span id="line1314"><span>    name:"Darkite",
</span></span><span id="line1315"><span>    value:102,
</span></span><span id="line1316"><span>    menuImgPath:"../images/darkite.png",
</span></span><span id="line1317"><span>    gridX:1,
</span></span><span id="line1318"><span>    gridY:1
</span></span><span id="line1319"><span>  });
</span></span><span id="line1320"><span>  
</span></span><span id="line1321"><span>  m.addOpt({
</span></span><span id="line1322"><span>    name:"Balthite",
</span></span><span id="line1323"><span>    value:103,
</span></span><span id="line1324"><span>    menuImgPath:"../images/balthite.png",
</span></span><span id="line1325"><span>    gridX:2,
</span></span><span id="line1326"><span>    gridY:1
</span></span><span id="line1327"><span>  });
</span></span><span id="line1328"><span>  
</span></span><span id="line1329"><span>  m.addOpt({
</span></span><span id="line1330"><span>    name:"Dethite",
</span></span><span id="line1331"><span>    value:104,
</span></span><span id="line1332"><span>    menuImgPath:"../images/dethite.png",
</span></span><span id="line1333"><span>    gridX:3,
</span></span><span id="line1334"><span>    gridY:1
</span></span><span id="line1335"><span>  });
</span></span><span id="line1336"><span>  
</span></span><span id="line1337"><span>  m.addOpt({
</span></span><span id="line1338"><span>    name:"Atkite (Boosted)",
</span></span><span id="line1339"><span>    value:105,
</span></span><span id="line1340"><span>    menuImgPath:"../images/atkiteB.png",
</span></span><span id="line1341"><span>    gridX:0,
</span></span><span id="line1342"><span>    gridY:2
</span></span><span id="line1343"><span>  });
</span></span><span id="line1344"><span>  
</span></span><span id="line1345"><span>  m.addOpt({
</span></span><span id="line1346"><span>    name:"Darkite (Boosted)",
</span></span><span id="line1347"><span>    value:106,
</span></span><span id="line1348"><span>    menuImgPath:"../images/darkiteB.png",
</span></span><span id="line1349"><span>    gridX:1,
</span></span><span id="line1350"><span>    gridY:2
</span></span><span id="line1351"><span>  });
</span></span><span id="line1352"><span>  
</span></span><span id="line1353"><span>  m.addOpt({
</span></span><span id="line1354"><span>    name:"Balthite (Boosted)",
</span></span><span id="line1355"><span>    value:107,
</span></span><span id="line1356"><span>    menuImgPath:"../images/balthiteB.png",
</span></span><span id="line1357"><span>    gridX:2,
</span></span><span id="line1358"><span>    gridY:2
</span></span><span id="line1359"><span>  });
</span></span><span id="line1360"><span>  
</span></span><span id="line1361"><span>  m.addOpt({
</span></span><span id="line1362"><span>    name:"Dethite (Boosted)",
</span></span><span id="line1363"><span>    value:108,
</span></span><span id="line1364"><span>    menuImgPath:"../images/dethiteB.png",
</span></span><span id="line1365"><span>    gridX:3,
</span></span><span id="line1366"><span>    gridY:2
</span></span><span id="line1367"><span>  });
</span></span><span id="line1368"><span>  
</span></span><span id="line1369"><span>  
</span></span><span id="line1370"><span>  // Shoulder Menu
</span></span><span id="line1371"><span>  
</span></span><span id="line1372"><span>  m = new iconMenu({
</span></span><span id="line1373"><span>    inputName:"Shoulder",
</span></span><span id="line1374"><span>    containerID:"ShoulderOuter",
</span></span><span id="line1375"><span>    onchange:function(val) { fixIteEquipment("shoulder"); calculate(); },
</span></span><span id="line1376"><span>    inputIconW:42,
</span></span><span id="line1377"><span>    inputIconH:42,
</span></span><span id="line1378"><span>    menuSpacingW:2,
</span></span><span id="line1379"><span>    menuSpacingH:2
</span></span><span id="line1380"><span>  });
</span></span><span id="line1381"><span>  allIconMenus[allIconMenus.length] = m;
</span></span><span id="line1382"><span>  menuLookup[m.inputName] = m;
</span></span><span id="line1383"><span>  
</span></span><span id="line1384"><span>  m.addOpt({
</span></span><span id="line1385"><span>    name:"Nothing",
</span></span><span id="line1386"><span>    value:0,
</span></span><span id="line1387"><span>    menuImgPath:"../images/no_item2.png",
</span></span><span id="line1388"><span>    gridX:0,
</span></span><span id="line1389"><span>    gridY:0
</span></span><span id="line1390"><span>  });
</span></span><span id="line1391"><span>  
</span></span><span id="line1392"><span>  m.addOpt({
</span></span><span id="line1393"><span>    name:"Atkite Pauldron",
</span></span><span id="line1394"><span>    value:101,
</span></span><span id="line1395"><span>    menuImgPath:"../images/atkiteP.png",
</span></span><span id="line1396"><span>    gridX:0,
</span></span><span id="line1397"><span>    gridY:1
</span></span><span id="line1398"><span>  });
</span></span><span id="line1399"><span>  
</span></span><span id="line1400"><span>  m.addOpt({
</span></span><span id="line1401"><span>    name:"Darkite Pauldron",
</span></span><span id="line1402"><span>    value:102,
</span></span><span id="line1403"><span>    menuImgPath:"../images/darkiteP.png",
</span></span><span id="line1404"><span>    gridX:1,
</span></span><span id="line1405"><span>    gridY:1
</span></span><span id="line1406"><span>  });
</span></span><span id="line1407"><span>  
</span></span><span id="line1408"><span>  m.addOpt({
</span></span><span id="line1409"><span>    name:"Balthite Pauldron",
</span></span><span id="line1410"><span>    value:103,
</span></span><span id="line1411"><span>    menuImgPath:"../images/balthiteP.png",
</span></span><span id="line1412"><span>    gridX:2,
</span></span><span id="line1413"><span>    gridY:1
</span></span><span id="line1414"><span>  });
</span></span><span id="line1415"><span>  
</span></span><span id="line1416"><span>  m.addOpt({
</span></span><span id="line1417"><span>    name:"Dethite Pauldron",
</span></span><span id="line1418"><span>    value:104,
</span></span><span id="line1419"><span>    menuImgPath:"../images/dethiteP.png",
</span></span><span id="line1420"><span>    gridX:3,
</span></span><span id="line1421"><span>    gridY:1
</span></span><span id="line1422"><span>  });
</span></span><span id="line1423"><span>  
</span></span><span id="line1424"><span>  m.addOpt({
</span></span><span id="line1425"><span>    name:"Atkite Pauldron (Boosted)",
</span></span><span id="line1426"><span>    value:105,
</span></span><span id="line1427"><span>    menuImgPath:"../images/atkitePB.png",
</span></span><span id="line1428"><span>    gridX:0,
</span></span><span id="line1429"><span>    gridY:2
</span></span><span id="line1430"><span>  });
</span></span><span id="line1431"><span>  
</span></span><span id="line1432"><span>  m.addOpt({
</span></span><span id="line1433"><span>    name:"Darkite Pauldron (Boosted)",
</span></span><span id="line1434"><span>    value:106,
</span></span><span id="line1435"><span>    menuImgPath:"../images/darkitePB.png",
</span></span><span id="line1436"><span>    gridX:1,
</span></span><span id="line1437"><span>    gridY:2
</span></span><span id="line1438"><span>  });
</span></span><span id="line1439"><span>  
</span></span><span id="line1440"><span>  m.addOpt({
</span></span><span id="line1441"><span>    name:"Balthite Pauldron (Boosted)",
</span></span><span id="line1442"><span>    value:107,
</span></span><span id="line1443"><span>    menuImgPath:"../images/balthitePB.png",
</span></span><span id="line1444"><span>    gridX:2,
</span></span><span id="line1445"><span>    gridY:2
</span></span><span id="line1446"><span>  });
</span></span><span id="line1447"><span>  
</span></span><span id="line1448"><span>  m.addOpt({
</span></span><span id="line1449"><span>    name:"Dethite Pauldron (Boosted)",
</span></span><span id="line1450"><span>    value:108,
</span></span><span id="line1451"><span>    menuImgPath:"../images/dethitePB.png",
</span></span><span id="line1452"><span>    gridX:3,
</span></span><span id="line1453"><span>    gridY:2
</span></span><span id="line1454"><span>  });
</span></span><span id="line1455"><span>  
</span></span><span id="line1456"><span>  
</span></span><span id="line1457"><span>  // Subclass Menu
</span></span><span id="line1458"><span>  
</span></span><span id="line1459"><span>  m = new iconMenu({
</span></span><span id="line1460"><span>    inputName:"Subclass",
</span></span><span id="line1461"><span>    containerID:"SubclassOuter",
</span></span><span id="line1462"><span>    onchange:function(val) { ShowSubclass(); calculate(); saveData(CurrSet, 1); },
</span></span><span id="line1463"><span>    inputIconW:44,
</span></span><span id="line1464"><span>    inputIconH:42,
</span></span><span id="line1465"><span>    menuSpacingW:2,
</span></span><span id="line1466"><span>    menuSpacingH:2
</span></span><span id="line1467"><span>  });
</span></span><span id="line1468"><span>  allIconMenus[allIconMenus.length] = m;
</span></span><span id="line1469"><span>  menuLookup[m.inputName] = m;
</span></span><span id="line1470"><span>  
</span></span><span id="line1471"><span>  m.addOpt({
</span></span><span id="line1472"><span>    name:"No Subclass",
</span></span><span id="line1473"><span>    value:0,
</span></span><span id="line1474"><span>    showName:true,
</span></span><span id="line1475"><span>    showTooltip:false,
</span></span><span id="line1476"><span>    mouseOverAll:true,
</span></span><span id="line1477"><span>    w:135,
</span></span><span id="line1478"><span>    menuImgPath:"../images/no_subclass3.png",
</span></span><span id="line1479"><span>    gridX:0,
</span></span><span id="line1480"><span>    gridY:0
</span></span><span id="line1481"><span>  });
</span></span><span id="line1482"><span>  
</span></span><span id="line1483"><span>  m.addOpt({
</span></span><span id="line1484"><span>    name:"Champion",
</span></span><span id="line1485"><span>    value:1,
</span></span><span id="line1486"><span>    showName:true,
</span></span><span id="line1487"><span>    showTooltip:false,
</span></span><span id="line1488"><span>    mouseOverAll:true,
</span></span><span id="line1489"><span>    w:135,
</span></span><span id="line1490"><span>    menuImgPath:"../images/earthstone.png",
</span></span><span id="line1491"><span>    gridX:0,
</span></span><span id="line1492"><span>    gridY:1
</span></span><span id="line1493"><span>  });
</span></span><span id="line1494"><span>  
</span></span><span id="line1495"><span>  m.addOpt({
</span></span><span id="line1496"><span>    name:"Ranger",
</span></span><span id="line1497"><span>    value:2,
</span></span><span id="line1498"><span>    showName:true,
</span></span><span id="line1499"><span>    showTooltip:false,
</span></span><span id="line1500"><span>    mouseOverAll:true,
</span></span><span id="line1501"><span>    w:135,
</span></span><span id="line1502"><span>    menuImgPath:"../images/heartwood.png",
</span></span><span id="line1503"><span>    gridX:0,
</span></span><span id="line1504"><span>    gridY:2
</span></span><span id="line1505"><span>  });
</span></span><span id="line1506"><span>  
</span></span><span id="line1507"><span>  m.addOpt({
</span></span><span id="line1508"><span>    name:"Bloodmage",
</span></span><span id="line1509"><span>    value:3,
</span></span><span id="line1510"><span>    showName:true,
</span></span><span id="line1511"><span>    showTooltip:false,
</span></span><span id="line1512"><span>    mouseOverAll:true,
</span></span><span id="line1513"><span>    w:135,
</span></span><span id="line1514"><span>    menuImgPath:"../images/bloodstone.png",
</span></span><span id="line1515"><span>    gridX:0,
</span></span><span id="line1516"><span>    gridY:3
</span></span><span id="line1517"><span>  });
</span></span><span id="line1518"><span>  
</span></span><span id="line1519"><span>  
</span></span><span id="line1520"><span>  // Subclass Weapon Menu
</span></span><span id="line1521"><span>  
</span></span><span id="line1522"><span>  m = new iconMenu({
</span></span><span id="line1523"><span>    inputName:"SubclassWeapon",
</span></span><span id="line1524"><span>    containerID:"",
</span></span><span id="line1525"><span>    onchange:null,
</span></span><span id="line1526"><span>    inputIconW:42,
</span></span><span id="line1527"><span>    inputIconH:42,
</span></span><span id="line1528"><span>    menuSpacingW:2,
</span></span><span id="line1529"><span>    menuSpacingH:2
</span></span><span id="line1530"><span>  });
</span></span><span id="line1531"><span>  //allIconMenus[allIconMenus.length] = m;
</span></span><span id="line1532"><span>  menuLookup[m.inputName] = m;
</span></span><span id="line1533"><span>  
</span></span><span id="line1534"><span>  m.addOpt({
</span></span><span id="line1535"><span>    name:"No Subclass",
</span></span><span id="line1536"><span>    value:0,
</span></span><span id="line1537"><span>    menuImgPath:"../images/no_item2.png",
</span></span><span id="line1538"><span>    gridX:0,
</span></span><span id="line1539"><span>    gridY:1
</span></span><span id="line1540"><span>  });
</span></span><span id="line1541"><span>  
</span></span><span id="line1542"><span>  m.addOpt({
</span></span><span id="line1543"><span>    name:"Champion",
</span></span><span id="line1544"><span>    value:1,
</span></span><span id="line1545"><span>    menuImgPath:"../images/earthstone.png",
</span></span><span id="line1546"><span>    gridX:0,
</span></span><span id="line1547"><span>    gridY:1
</span></span><span id="line1548"><span>  });
</span></span><span id="line1549"><span>  
</span></span><span id="line1550"><span>  m.addOpt({
</span></span><span id="line1551"><span>    name:"Ranger",
</span></span><span id="line1552"><span>    value:2,
</span></span><span id="line1553"><span>    menuImgPath:"../images/heartwood.png",
</span></span><span id="line1554"><span>    gridX:0,
</span></span><span id="line1555"><span>    gridY:2
</span></span><span id="line1556"><span>  });
</span></span><span id="line1557"><span>  
</span></span><span id="line1558"><span>  m.addOpt({
</span></span><span id="line1559"><span>    name:"Bloodmage",
</span></span><span id="line1560"><span>    value:3,
</span></span><span id="line1561"><span>    menuImgPath:"../images/bloodstone.png",
</span></span><span id="line1562"><span>    gridX:0,
</span></span><span id="line1563"><span>    gridY:3
</span></span><span id="line1564"><span>  });
</span></span><span id="line1565"><span>  
</span></span><span id="line1566"><span>  
</span></span><span id="line1567"><span>  // Finish
</span></span><span id="line1568"><span>  
</span></span><span id="line1569"><span>  for(var i=0; i</span><span>&lt;t</span><span>his.allIconMenus.length; i++) {
</span></span><span id="line1570"><span>    m = this.allIconMenus[i];
</span></span><span id="line1571"><span>    m.showInput();
</span></span><span id="line1572"><span>  }
</span></span><span id="line1573"><span>}
</span></span><span id="line1574"><span>
</span></span><span id="line1575"><span>function updateAllIconMenus() {
</span></span><span id="line1576"><span>  var m;
</span></span><span id="line1577"><span>  
</span></span><span id="line1578"><span>  for(var i=0; i</span><span>&lt;t</span><span>his.allIconMenus.length; i++) {
</span></span><span id="line1579"><span>    m = this.allIconMenus[i];
</span></span><span id="line1580"><span>    m.hideMenu();
</span></span><span id="line1581"><span>    m.updateInput();
</span></span><span id="line1582"><span>  }
</span></span><span id="line1583"><span>}
</span></span><span id="line1584"><span>
</span></span><span id="line1585"><span>function hideAllMenus() {
</span></span><span id="line1586"><span>  var m;
</span></span><span id="line1587"><span>  
</span></span><span id="line1588"><span>  for(var i=0; i</span><span>&lt;t</span><span>his.allIconMenus.length; i++) {
</span></span><span id="line1589"><span>    m = this.allIconMenus[i];
</span></span><span id="line1590"><span>    m.hideMenu();
</span></span><span id="line1591"><span>  }
</span></span><span id="line1592"><span>  
</span></span><span id="line1593"><span>  gProfileMenu.hideMenu();
</span></span><span id="line1594"><span>}
</span></span><span id="line1595"><span>
</span></span><span id="line1596"><span>function getScrollX() {
</span></span><span id="line1597"><span>  if(document.all) {
</span></span><span id="line1598"><span>    if(document.scrollLeft || document.scrollLeft == 0)
</span></span><span id="line1599"><span>      return document.body.scrollLeft;
</span></span><span id="line1600"><span>    else
</span></span><span id="line1601"><span>      return document.documentElement.scrollLeft;
</span></span><span id="line1602"><span>  }
</span></span><span id="line1603"><span>  else {
</span></span><span id="line1604"><span>    return window.pageXOffset;
</span></span><span id="line1605"><span>  }
</span></span><span id="line1606"><span>}
</span></span><span id="line1607"><span>
</span></span><span id="line1608"><span>function getScrollY() {
</span></span><span id="line1609"><span>  if(document.all) {
</span></span><span id="line1610"><span>    if(document.scrollTop || document.scrollTop == 0)
</span></span><span id="line1611"><span>      return document.body.scrollTop;
</span></span><span id="line1612"><span>    else
</span></span><span id="line1613"><span>      return document.documentElement.scrollTop;
</span></span><span id="line1614"><span>  }
</span></span><span id="line1615"><span>  else {
</span></span><span id="line1616"><span>    return window.pageYOffset;
</span></span><span id="line1617"><span>  }
</span></span><span id="line1618"><span>}
</span></span><span id="line1619"><span>
</span></span><span id="line1620"><span>function getWindowW() {
</span></span><span id="line1621"><span>  var innerW;
</span></span><span id="line1622"><span>  if(window.innerWidth)
</span></span><span id="line1623"><span>    innerW = window.innerWidth;
</span></span><span id="line1624"><span>  else if(document.documentElement.clientWidth)
</span></span><span id="line1625"><span>    innerW = document.documentElement.clientWidth;
</span></span><span id="line1626"><span>  else
</span></span><span id="line1627"><span>    innerW = document.body.clientWidth;
</span></span><span id="line1628"><span>  
</span></span><span id="line1629"><span>  return innerW;
</span></span><span id="line1630"><span>}
</span></span><span id="line1631"><span>
</span></span><span id="line1632"><span>function getWindowH() {
</span></span><span id="line1633"><span>  var innerH;
</span></span><span id="line1634"><span>  
</span></span><span id="line1635"><span>  if(window.innerHeight)
</span></span><span id="line1636"><span>    innerH = window.innerHeight;
</span></span><span id="line1637"><span>  else if(document.documentElement.clientHeight)
</span></span><span id="line1638"><span>    innerH = document.documentElement.clientHeight;
</span></span><span id="line1639"><span>  else
</span></span><span id="line1640"><span>    innerH = document.body.clientHeight;
</span></span><span id="line1641"><span>  
</span></span><span id="line1642"><span>  return innerH;
</span></span><span id="line1643"><span>}
</span></span><span id="line1644"><span>
</span></span><span id="line1645"><span>function getDocW() {
</span></span><span id="line1646"><span>  var elt, w;
</span></span><span id="line1647"><span>  
</span></span><span id="line1648"><span>  elt = document.getElementById("documentOuter");
</span></span><span id="line1649"><span>  if(!elt)
</span></span><span id="line1650"><span>    return 0;
</span></span><span id="line1651"><span>  
</span></span><span id="line1652"><span>  w = Math.round(elt.offsetWidth);
</span></span><span id="line1653"><span>  
</span></span><span id="line1654"><span>  return w;
</span></span><span id="line1655"><span>}
</span></span><span id="line1656"><span>
</span></span><span id="line1657"><span>function getDocH() {
</span></span><span id="line1658"><span>  return Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);
</span></span><span id="line1659"><span>}
</span></span><span id="line1660"><span>
</span></span><span id="line1661"><span>function getXY(o) {
</span></span><span id="line1662"><span>  var x = 0;
</span></span><span id="line1663"><span>  var y = 0;
</span></span><span id="line1664"><span>  
</span></span><span id="line1665"><span>  while(o.offsetParent){
</span></span><span id="line1666"><span>    x += o.offsetLeft;
</span></span><span id="line1667"><span>    y += o.offsetTop;
</span></span><span id="line1668"><span>    o = o.offsetParent;
</span></span><span id="line1669"><span>  }
</span></span><span id="line1670"><span>  x += o.offsetLeft;
</span></span><span id="line1671"><span>  y += o.offsetTop;
</span></span><span id="line1672"><span>  
</span></span><span id="line1673"><span>  return { x:x, y:y };
</span></span><span id="line1674"><span>}
</span></span><span id="line1675"><span>
</span></span><span id="line1676"><span>function stopPropagation(e) {
</span></span><span id="line1677"><span>  e = e || window.event;
</span></span><span id="line1678"><span>  
</span></span><span id="line1679"><span>  if(e.stopPropagation)
</span></span><span id="line1680"><span>    e.stopPropagation();
</span></span><span id="line1681"><span>  else
</span></span><span id="line1682"><span>    e.cancelBubble = true;
</span></span><span id="line1683"><span>}
</span></span><span id="line1684"><span>
</span></span><span id="line1685"><span>var observe, unobserve;
</span></span><span id="line1686"><span>if(window.attachEvent) {
</span></span><span id="line1687"><span>  observe = function (element, event, handler) {
</span></span><span id="line1688"><span>    element.attachEvent("on"+event, handler);
</span></span><span id="line1689"><span>  };
</span></span><span id="line1690"><span>  unobserve = function (element, event, handler) {
</span></span><span id="line1691"><span>    element.detachEvent("on"+event, handler);
</span></span><span id="line1692"><span>  };
</span></span><span id="line1693"><span>}
</span></span><span id="line1694"><span>else {
</span></span><span id="line1695"><span>  observe = function (element, event, handler) {
</span></span><span id="line1696"><span>    element.addEventListener(event, handler, { passive:false });
</span></span><span id="line1697"><span>  };
</span></span><span id="line1698"><span>  unobserve = function (element, event, handler) {
</span></span><span id="line1699"><span>    element.removeEventListener(event, handler, { passive:false });
</span></span><span id="line1700"><span>  };
</span></span><span id="line1701"><span>}
</span></span><span id="line1702"><span>
</span></span><span id="line1703"><span>
</span></span><span id="line1704"><span>
</span></span><span id="line1705"><span>
</span></span><span id="line1706"><span>function iconMenu(p) {
</span></span><span id="line1707"><span>  this.opts = [ ];
</span></span><span id="line1708"><span>  
</span></span><span id="line1709"><span>  this.elts = {
</span></span><span id="line1710"><span>    inputOuter:null,
</span></span><span id="line1711"><span>    inputText:null,
</span></span><span id="line1712"><span>    inputIcon:null,
</span></span><span id="line1713"><span>    input:null,
</span></span><span id="line1714"><span>    menuOuter:null,
</span></span><span id="line1715"><span>    tooltipOuter:null,
</span></span><span id="line1716"><span>    tooltipText:null
</span></span><span id="line1717"><span>  };
</span></span><span id="line1718"><span>  
</span></span><span id="line1719"><span>  this.menuVisible = false;
</span></span><span id="line1720"><span>  this.tooltipVisible = false;
</span></span><span id="line1721"><span>  this.selectedValue = "";
</span></span><span id="line1722"><span>  this.selectedOpt = null;
</span></span><span id="line1723"><span>  this.menuW = 0;
</span></span><span id="line1724"><span>  this.menuH = 0;
</span></span><span id="line1725"><span>  this.mouseoverOpt = null;
</span></span><span id="line1726"><span>  
</span></span><span id="line1727"><span>  
</span></span><span id="line1728"><span>  this.inputName = "";
</span></span><span id="line1729"><span>  this.containerID = "";
</span></span><span id="line1730"><span>  this.onchange = null;
</span></span><span id="line1731"><span>  this.inputIconW = 0;
</span></span><span id="line1732"><span>  this.inputIconH = 0;
</span></span><span id="line1733"><span>  this.menuIconW = 0;
</span></span><span id="line1734"><span>  this.menuIconH = 0;
</span></span><span id="line1735"><span>  this.menuSpacingW = 0;
</span></span><span id="line1736"><span>  this.menuSpacingH = 0;
</span></span><span id="line1737"><span>  this.menuPaddingW = 4;
</span></span><span id="line1738"><span>  this.menuPaddingH = 4;
</span></span><span id="line1739"><span>  
</span></span><span id="line1740"><span>  var keys = Object.keys(p);
</span></span><span id="line1741"><span>  for(var i=0; i</span><span>&lt;k</span><span>eys.length; i++) {
</span></span><span id="line1742"><span>    var k = keys[i];
</span></span><span id="line1743"><span>    this[k] = p[k];
</span></span><span id="line1744"><span>  }
</span></span><span id="line1745"><span>  
</span></span><span id="line1746"><span>  if(this.menuIconW </span><span>&lt;=</span><span> 0)
</span></span><span id="line1747"><span>    this.menuIconW = this.inputIconW;
</span></span><span id="line1748"><span>  if(this.menuIconH </span><span>&lt;=</span><span> 0)
</span></span><span id="line1749"><span>    this.menuIconH = this.inputIconH;
</span></span><span id="line1750"><span>  
</span></span><span id="line1751"><span>  var _this = this;
</span></span><span id="line1752"><span>  this.hideMenuAttachable = function() { _this.hideMenu(); };
</span></span><span id="line1753"><span>}
</span></span><span id="line1754"><span>
</span></span><span id="line1755"><span>iconMenu.prototype.addOpt = function(p) {
</span></span><span id="line1756"><span>  var idx = this.opts.length;
</span></span><span id="line1757"><span>  
</span></span><span id="line1758"><span>  if(typeof p.menuIconW == "undefined")
</span></span><span id="line1759"><span>    p.menuIconW = this.menuIconW;
</span></span><span id="line1760"><span>  if(typeof p.menuIconH == "undefined")
</span></span><span id="line1761"><span>    p.menuIconH = this.menuIconH;
</span></span><span id="line1762"><span>  p.parent = this;
</span></span><span id="line1763"><span>  p.idx = idx;
</span></span><span id="line1764"><span>  
</span></span><span id="line1765"><span>  var o = new iconMenuOpt(p);
</span></span><span id="line1766"><span>  this.opts[idx] = o;
</span></span><span id="line1767"><span>  return o;
</span></span><span id="line1768"><span>};
</span></span><span id="line1769"><span>
</span></span><span id="line1770"><span>iconMenu.prototype.showInput = function() {
</span></span><span id="line1771"><span>  if(this.containerID == "")
</span></span><span id="line1772"><span>    return;
</span></span><span id="line1773"><span>  
</span></span><span id="line1774"><span>  if(!this.elts.inputOuter)
</span></span><span id="line1775"><span>    this.generateInputElts();
</span></span><span id="line1776"><span>  
</span></span><span id="line1777"><span>  elt = document.getElementById(this.containerID);
</span></span><span id="line1778"><span>  if(elt)
</span></span><span id="line1779"><span>    elt.appendChild(this.elts.inputOuter);
</span></span><span id="line1780"><span>};
</span></span><span id="line1781"><span>
</span></span><span id="line1782"><span>iconMenu.prototype.generateInputElts = function() {
</span></span><span id="line1783"><span>  var tbl, tr, td, tbl2, tr2, td2, div, inp, _this;
</span></span><span id="line1784"><span>  
</span></span><span id="line1785"><span>  _this = this;
</span></span><span id="line1786"><span>  
</span></span><span id="line1787"><span>  tbl = document.createElement("table");
</span></span><span id="line1788"><span>  this.elts.inputOuter = tbl;
</span></span><span id="line1789"><span>  tbl.cellPadding = 0;
</span></span><span id="line1790"><span>  tbl.cellSpacing = 0;
</span></span><span id="line1791"><span>  tbl.style.cursor = "pointer";
</span></span><span id="line1792"><span>  tbl.style.border = "1px solid #767676";
</span></span><span id="line1793"><span>  tbl.style.backgroundColor = "#A09790";
</span></span><span id="line1794"><span>  
</span></span><span id="line1795"><span>  tbl.onselectstart = function() { return false; };
</span></span><span id="line1796"><span>  tbl.onmousedown = function(e) { stopPropagation(e); _this.onclick(); };
</span></span><span id="line1797"><span>  tbl.onmouseover = function() { _this.onmouseover(); };
</span></span><span id="line1798"><span>  tbl.onmouseout = function() { _this.onmouseout(); };
</span></span><span id="line1799"><span>  
</span></span><span id="line1800"><span>  tr = tbl.insertRow(0);
</span></span><span id="line1801"><span>  td = tr.insertCell(0);
</span></span><span id="line1802"><span>  
</span></span><span id="line1803"><span>  tbl2 = document.createElement("table");
</span></span><span id="line1804"><span>  tbl2.cellPadding = 0;
</span></span><span id="line1805"><span>  tbl2.cellSpacing = 0;
</span></span><span id="line1806"><span>  
</span></span><span id="line1807"><span>  
</span></span><span id="line1808"><span>  tr2 = tbl2.insertRow(0);
</span></span><span id="line1809"><span>  td2 = tr2.insertCell(0);
</span></span><span id="line1810"><span>  
</span></span><span id="line1811"><span>  div = document.createElement("div");
</span></span><span id="line1812"><span>  this.elts.inputIcon = div;
</span></span><span id="line1813"><span>  div.style.width = this.inputIconW + "px";
</span></span><span id="line1814"><span>  div.style.height = this.inputIconH + "px";
</span></span><span id="line1815"><span>  div.style.backgroundRepeat = "no-repeat";
</span></span><span id="line1816"><span>  div.style.backgroundPosition = "center center";
</span></span><span id="line1817"><span>  td2.appendChild(div);
</span></span><span id="line1818"><span>  
</span></span><span id="line1819"><span>  inp = document.createElement("input");
</span></span><span id="line1820"><span>  inp.type = "hidden";
</span></span><span id="line1821"><span>  inp.name = this.inputName;
</span></span><span id="line1822"><span>  this.elts.input = inp;
</span></span><span id="line1823"><span>  td2.appendChild(inp);
</span></span><span id="line1824"><span>  
</span></span><span id="line1825"><span>  td.appendChild(tbl2);
</span></span><span id="line1826"><span>  
</span></span><span id="line1827"><span>  
</span></span><span id="line1828"><span>  td = tr.insertCell(1);
</span></span><span id="line1829"><span>  this.elts.inputText = td;
</span></span><span id="line1830"><span>  td.style.paddingLeft = "4px";
</span></span><span id="line1831"><span>  td.style.paddingRight = "8px";
</span></span><span id="line1832"><span>  
</span></span><span id="line1833"><span>  
</span></span><span id="line1834"><span>  td = tr.insertCell(2);
</span></span><span id="line1835"><span>  
</span></span><span id="line1836"><span>  div = document.createElement("div");
</span></span><span id="line1837"><span>  div.style.width = "10px";
</span></span><span id="line1838"><span>  div.style.height = this.inputIconH + "px";
</span></span><span id="line1839"><span>  div.style.backgroundRepeat = "no-repeat";
</span></span><span id="line1840"><span>  div.style.backgroundPosition = "center center";
</span></span><span id="line1841"><span>  div.style.backgroundImage = "url('../images/dropdown_arrow.png')";
</span></span><span id="line1842"><span>  
</span></span><span id="line1843"><span>  td.appendChild(div);
</span></span><span id="line1844"><span>  
</span></span><span id="line1845"><span>  
</span></span><span id="line1846"><span>  td = tr.insertCell(3);
</span></span><span id="line1847"><span>  td.style.width = "4px";
</span></span><span id="line1848"><span>};
</span></span><span id="line1849"><span>
</span></span><span id="line1850"><span>iconMenu.prototype.updateInput = function() {
</span></span><span id="line1851"><span>  var val = this.elts.input.value;
</span></span><span id="line1852"><span>  
</span></span><span id="line1853"><span>  var o = null;
</span></span><span id="line1854"><span>  for(var i=0; i</span><span>&lt;t</span><span>his.opts.length; i++) {
</span></span><span id="line1855"><span>    if(this.opts[i].value == val) {
</span></span><span id="line1856"><span>      o = this.opts[i];
</span></span><span id="line1857"><span>      break;
</span></span><span id="line1858"><span>    }
</span></span><span id="line1859"><span>  }
</span></span><span id="line1860"><span>  
</span></span><span id="line1861"><span>  this.selectedValue = val;
</span></span><span id="line1862"><span>  this.selectedOpt = o;
</span></span><span id="line1863"><span>  
</span></span><span id="line1864"><span>  this.updateInputDisplay();
</span></span><span id="line1865"><span>};
</span></span><span id="line1866"><span>
</span></span><span id="line1867"><span>iconMenu.prototype.updateInputDisplay = function() {
</span></span><span id="line1868"><span>  var o = this.selectedOpt;
</span></span><span id="line1869"><span>  
</span></span><span id="line1870"><span>  if(o) {
</span></span><span id="line1871"><span>    this.elts.inputIcon.style.backgroundImage = "url('" + o.inputImgPath + "')";
</span></span><span id="line1872"><span>    this.elts.inputText.innerHTML = o.name;
</span></span><span id="line1873"><span>  }
</span></span><span id="line1874"><span>  else {
</span></span><span id="line1875"><span>    this.elts.inputIcon.style.backgroundImage = "";
</span></span><span id="line1876"><span>    this.elts.inputText.innerHTML = "Nothing";
</span></span><span id="line1877"><span>  }
</span></span><span id="line1878"><span>};
</span></span><span id="line1879"><span>
</span></span><span id="line1880"><span>iconMenu.prototype.setValue = function(val) {
</span></span><span id="line1881"><span>  this.elts.input.value = val;
</span></span><span id="line1882"><span>  this.hideMenu();
</span></span><span id="line1883"><span>  this.updateInput();
</span></span><span id="line1884"><span>  
</span></span><span id="line1885"><span>  if(this.onchange)
</span></span><span id="line1886"><span>    this.onchange(val);
</span></span><span id="line1887"><span>};
</span></span><span id="line1888"><span>
</span></span><span id="line1889"><span>iconMenu.prototype.showMenu = function() {
</span></span><span id="line1890"><span>  hideAllMenus();
</span></span><span id="line1891"><span>  
</span></span><span id="line1892"><span>  if(!this.elts.menuOuter)
</span></span><span id="line1893"><span>    this.generateMenuElts();
</span></span><span id="line1894"><span>  
</span></span><span id="line1895"><span>  var elt, rect, x, y, _this;
</span></span><span id="line1896"><span>  
</span></span><span id="line1897"><span>  _this = this;
</span></span><span id="line1898"><span>  
</span></span><span id="line1899"><span>  rect = this.elts.inputOuter.getBoundingClientRect();
</span></span><span id="line1900"><span>  
</span></span><span id="line1901"><span>  x = getScrollX() + rect.left;
</span></span><span id="line1902"><span>  x = Math.round(x);
</span></span><span id="line1903"><span>  x = Math.min(x, getDocW() - this.menuW - 8);
</span></span><span id="line1904"><span>  x = Math.max(x, 8);
</span></span><span id="line1905"><span>  
</span></span><span id="line1906"><span>  y = getScrollY() + rect.bottom;
</span></span><span id="line1907"><span>  y = Math.round(y);
</span></span><span id="line1908"><span>  
</span></span><span id="line1909"><span>  this.elts.menuOuter.style.left = x + "px";
</span></span><span id="line1910"><span>  this.elts.menuOuter.style.top = y + "px";
</span></span><span id="line1911"><span>  
</span></span><span id="line1912"><span>  this.elts.menuOuter.style.display = "";
</span></span><span id="line1913"><span>  
</span></span><span id="line1914"><span>  if(this.selectedOpt) {
</span></span><span id="line1915"><span>    if(this.mouseoverOpt) {
</span></span><span id="line1916"><span>      this.mouseoverOpt.unhighlight();
</span></span><span id="line1917"><span>      this.hideTooltip();
</span></span><span id="line1918"><span>      this.mouseoverOpt = null;
</span></span><span id="line1919"><span>    }
</span></span><span id="line1920"><span>    
</span></span><span id="line1921"><span>    this.selectedOpt.highlight();
</span></span><span id="line1922"><span>    this.mouseoverOpt = this.selectedOpt;
</span></span><span id="line1923"><span>  }
</span></span><span id="line1924"><span>  
</span></span><span id="line1925"><span>  
</span></span><span id="line1926"><span>  this.menuVisible = true;
</span></span><span id="line1927"><span>  observe(document.body, "mousedown", this.hideMenuAttachable);
</span></span><span id="line1928"><span>  observe(document.body, "keydown", this.hideMenuAttachable);
</span></span><span id="line1929"><span>};
</span></span><span id="line1930"><span>
</span></span><span id="line1931"><span>iconMenu.prototype.hideMenu = function() {
</span></span><span id="line1932"><span>  if(!this.menuVisible)
</span></span><span id="line1933"><span>    return;
</span></span><span id="line1934"><span>  
</span></span><span id="line1935"><span>  if(this.mouseoverOpt) {
</span></span><span id="line1936"><span>    this.mouseoverOpt.unhighlight();
</span></span><span id="line1937"><span>    this.hideTooltip();
</span></span><span id="line1938"><span>    this.mouseoverOpt = null;
</span></span><span id="line1939"><span>  }
</span></span><span id="line1940"><span>  
</span></span><span id="line1941"><span>  this.elts.menuOuter.style.display = "none";
</span></span><span id="line1942"><span>  this.menuVisible = false;
</span></span><span id="line1943"><span>  unobserve(document.body, "mousedown", this.hideMenuAttachable);
</span></span><span id="line1944"><span>  unobserve(document.body, "keydown", this.hideMenuAttachable);
</span></span><span id="line1945"><span>};
</span></span><span id="line1946"><span>
</span></span><span id="line1947"><span>iconMenu.prototype.generateMenuElts = function() {
</span></span><span id="line1948"><span>  var tbl, tr, td, tbl2, tr2, td2, div, div2, _this, fullIconW, fullIconH, i, o;
</span></span><span id="line1949"><span>  
</span></span><span id="line1950"><span>  div = document.createElement("div");
</span></span><span id="line1951"><span>  this.elts.menuOuter = div;
</span></span><span id="line1952"><span>  div.style.display = "none";
</span></span><span id="line1953"><span>  div.style.position = "absolute";
</span></span><span id="line1954"><span>  div.style.zIndex = "1000";
</span></span><span id="line1955"><span>  div.style.boxShadow = "5px 5px 5px rgba(0, 0, 0, 0.2)";
</span></span><span id="line1956"><span>  div.onselectstart = function() { return false; };
</span></span><span id="line1957"><span>  div.onmousedown = function(e) { stopPropagation(e); };
</span></span><span id="line1958"><span>  
</span></span><span id="line1959"><span>  div2 = document.createElement("div");
</span></span><span id="line1960"><span>  div2.style.width = "100%";
</span></span><span id="line1961"><span>  div2.style.height = "100%";
</span></span><span id="line1962"><span>  div2.style.border = "1px solid #767676";
</span></span><span id="line1963"><span>  div2.style.backgroundColor = "#A09790";
</span></span><span id="line1964"><span>  div2.style.boxSizing = "border-box";
</span></span><span id="line1965"><span>  div2.style.mozBoxSizing = "border-box";
</span></span><span id="line1966"><span>  div2.style.webkitBoxSizing = "border-box";
</span></span><span id="line1967"><span>  div.appendChild(div2);
</span></span><span id="line1968"><span>  
</span></span><span id="line1969"><span>  
</span></span><span id="line1970"><span>  fullIconW = this.menuIconW;
</span></span><span id="line1971"><span>  fullIconH = this.menuIconH;
</span></span><span id="line1972"><span>  for(i=0; i</span><span>&lt;t</span><span>his.opts.length; i++) {
</span></span><span id="line1973"><span>    o = this.opts[i];
</span></span><span id="line1974"><span>    
</span></span><span id="line1975"><span>    o.x = 1 + this.menuPaddingW + (o.gridX * (fullIconW + this.menuSpacingW));
</span></span><span id="line1976"><span>    o.y = 1 + this.menuPaddingH + (o.gridY * (fullIconH + this.menuSpacingH));
</span></span><span id="line1977"><span>    o.generateElts();
</span></span><span id="line1978"><span>    
</span></span><span id="line1979"><span>    this.menuW = Math.max(this.menuW, 1 + o.x + o.w + this.menuPaddingW);
</span></span><span id="line1980"><span>    this.menuH = Math.max(this.menuH, 1 + o.y + o.h + this.menuPaddingH);
</span></span><span id="line1981"><span>    
</span></span><span id="line1982"><span>    div.appendChild(o.elts.outer);
</span></span><span id="line1983"><span>  }
</span></span><span id="line1984"><span>  
</span></span><span id="line1985"><span>  div.style.width = this.menuW + "px";
</span></span><span id="line1986"><span>  div.style.height = this.menuH + "px";
</span></span><span id="line1987"><span>  
</span></span><span id="line1988"><span>  document.body.appendChild(this.elts.menuOuter);
</span></span><span id="line1989"><span>};
</span></span><span id="line1990"><span>
</span></span><span id="line1991"><span>iconMenu.prototype.showTooltip = function(elt, offsetX, offsetY, align, text) {
</span></span><span id="line1992"><span>  if(this.tooltipVisible)
</span></span><span id="line1993"><span>    return;
</span></span><span id="line1994"><span>  
</span></span><span id="line1995"><span>  if(!this.elts.tooltipOuter)
</span></span><span id="line1996"><span>    this.generateTooltipElts();
</span></span><span id="line1997"><span>  
</span></span><span id="line1998"><span>  var rect, x, y, w, h;
</span></span><span id="line1999"><span>  
</span></span><span id="line2000"><span>  this.elts.tooltipOuter.style.left = "0px";
</span></span><span id="line2001"><span>  this.elts.tooltipOuter.style.top = "0px";
</span></span><span id="line2002"><span>  this.elts.tooltipText.innerHTML = text;
</span></span><span id="line2003"><span>  this.elts.tooltipOuter.style.display = "";
</span></span><span id="line2004"><span>  
</span></span><span id="line2005"><span>  rect = this.elts.tooltipOuter.getBoundingClientRect();
</span></span><span id="line2006"><span>  w = Math.round(rect.right - rect.left);
</span></span><span id="line2007"><span>  h = Math.round(rect.bottom - rect.top);
</span></span><span id="line2008"><span>  
</span></span><span id="line2009"><span>  rect = elt.getBoundingClientRect();
</span></span><span id="line2010"><span>  
</span></span><span id="line2011"><span>  x = 0;
</span></span><span id="line2012"><span>  y = 0;
</span></span><span id="line2013"><span>  if(align == "right") {
</span></span><span id="line2014"><span>    x = getScrollX() + rect.right + offsetX;
</span></span><span id="line2015"><span>    x = Math.round(x);
</span></span><span id="line2016"><span>    if(x + w &gt;= getDocW()) {
</span></span><span id="line2017"><span>      align = "left";
</span></span><span id="line2018"><span>      offsetX = -offsetX;
</span></span><span id="line2019"><span>    }
</span></span><span id="line2020"><span>    else {
</span></span><span id="line2021"><span>      y = getScrollY() + rect.top + (((rect.bottom - rect.top) - h) / 2) + offsetY;
</span></span><span id="line2022"><span>      y = Math.round(y);
</span></span><span id="line2023"><span>    }
</span></span><span id="line2024"><span>  }
</span></span><span id="line2025"><span>  
</span></span><span id="line2026"><span>  if(align == "left") {
</span></span><span id="line2027"><span>    x = getScrollX() + rect.left - w + offsetX;
</span></span><span id="line2028"><span>    x = Math.round(x);
</span></span><span id="line2029"><span>    x = Math.max(x, 0);
</span></span><span id="line2030"><span>    
</span></span><span id="line2031"><span>    y = getScrollY() + rect.top + (((rect.bottom - rect.top) - h) / 2) + offsetY;
</span></span><span id="line2032"><span>    y = Math.round(y);
</span></span><span id="line2033"><span>  }
</span></span><span id="line2034"><span>  else if(align == "top") {
</span></span><span id="line2035"><span>    x = getScrollX() + (((rect.right - rect.left) - w) / 2) + offsetX;
</span></span><span id="line2036"><span>    x = Math.round(x);
</span></span><span id="line2037"><span>    x = Math.min(x, getDocW() - w);
</span></span><span id="line2038"><span>    x = Math.max(x, 0);
</span></span><span id="line2039"><span>    
</span></span><span id="line2040"><span>    y = getScrollY() + rect.top - h + offsetY;
</span></span><span id="line2041"><span>    y = Math.round(y);
</span></span><span id="line2042"><span>  }
</span></span><span id="line2043"><span>  else if(align == "bottom") {
</span></span><span id="line2044"><span>    x = getScrollX() + rect.left + (((rect.right - rect.left) - w) / 2) + offsetX;
</span></span><span id="line2045"><span>    x = Math.round(x);
</span></span><span id="line2046"><span>    x = Math.min(x, getDocW() - w);
</span></span><span id="line2047"><span>    x = Math.max(x, 0);
</span></span><span id="line2048"><span>    
</span></span><span id="line2049"><span>    y = getScrollY() + rect.bottom + offsetY;
</span></span><span id="line2050"><span>    y = Math.round(y);
</span></span><span id="line2051"><span>  }
</span></span><span id="line2052"><span>  else if(align == "center") {
</span></span><span id="line2053"><span>    x = getScrollX() + rect.left + (((rect.right - rect.left) - w) / 2) + offsetX;
</span></span><span id="line2054"><span>    x = Math.round(x);
</span></span><span id="line2055"><span>    x = Math.min(x, getDocW() - w);
</span></span><span id="line2056"><span>    x = Math.max(x, 0);
</span></span><span id="line2057"><span>    
</span></span><span id="line2058"><span>    y = getScrollY() + rect.top + (((rect.bottom - rect.top) - h) / 2) + offsetY;
</span></span><span id="line2059"><span>    y = Math.round(y);
</span></span><span id="line2060"><span>  }
</span></span><span id="line2061"><span>  
</span></span><span id="line2062"><span>  this.elts.tooltipOuter.style.left = x + "px";
</span></span><span id="line2063"><span>  this.elts.tooltipOuter.style.top = y + "px";
</span></span><span id="line2064"><span>  this.tooltipVisible = true;
</span></span><span id="line2065"><span>};
</span></span><span id="line2066"><span>
</span></span><span id="line2067"><span>iconMenu.prototype.hideTooltip = function() {
</span></span><span id="line2068"><span>  if(!this.tooltipVisible)
</span></span><span id="line2069"><span>    return;
</span></span><span id="line2070"><span>  
</span></span><span id="line2071"><span>  
</span></span><span id="line2072"><span>  this.elts.tooltipOuter.style.display = "none";
</span></span><span id="line2073"><span>  this.tooltipVisible = false;
</span></span><span id="line2074"><span>};
</span></span><span id="line2075"><span>
</span></span><span id="line2076"><span>iconMenu.prototype.generateTooltipElts = function() {
</span></span><span id="line2077"><span>  var opacity, tbl, tr, td;
</span></span><span id="line2078"><span>  
</span></span><span id="line2079"><span>  opacity = 0.8;
</span></span><span id="line2080"><span>  
</span></span><span id="line2081"><span>  tbl = document.createElement("table");
</span></span><span id="line2082"><span>  this.elts.tooltipOuter = tbl;
</span></span><span id="line2083"><span>  tbl.cellPadding = 0;
</span></span><span id="line2084"><span>  tbl.cellSpacing = 0;
</span></span><span id="line2085"><span>  tbl.style.display = "none";
</span></span><span id="line2086"><span>  tbl.style.position = "absolute";
</span></span><span id="line2087"><span>  tbl.style.zIndex = "1001";
</span></span><span id="line2088"><span>  tbl.style.border = "1px solid #333333";
</span></span><span id="line2089"><span>  tbl.style.backgroundColor = "#FFFFFF";
</span></span><span id="line2090"><span>  tbl.style.opacity = opacity;
</span></span><span id="line2091"><span>  tbl.style.filter = "alpha(opacity="+Math.round(opacity*100)+")";
</span></span><span id="line2092"><span>  
</span></span><span id="line2093"><span>  tbl.style.pointerEvents = "none";
</span></span><span id="line2094"><span>  tbl.style.webkitTouchCallout = "none";
</span></span><span id="line2095"><span>  tbl.style.webkitUserSelect = "none";
</span></span><span id="line2096"><span>  tbl.style.khtmlUserSelect = "none";
</span></span><span id="line2097"><span>  tbl.style.mozUserSelect = "none";
</span></span><span id="line2098"><span>  tbl.style.msUserSelect = "none";
</span></span><span id="line2099"><span>  tbl.style.userSelect = "none";
</span></span><span id="line2100"><span>  
</span></span><span id="line2101"><span>  tbl.onselectstart = function() { return false; };
</span></span><span id="line2102"><span>  
</span></span><span id="line2103"><span>  tr = tbl.insertRow(0);
</span></span><span id="line2104"><span>  td = tr.insertCell(0);
</span></span><span id="line2105"><span>  this.elts.tooltipText = td;
</span></span><span id="line2106"><span>  td.style.padding = "2px";
</span></span><span id="line2107"><span>  td.style.fontSize = "14px";
</span></span><span id="line2108"><span>  td.style.whiteSpace = "nowrap";
</span></span><span id="line2109"><span>  
</span></span><span id="line2110"><span>  document.body.appendChild(this.elts.tooltipOuter);
</span></span><span id="line2111"><span>};
</span></span><span id="line2112"><span>
</span></span><span id="line2113"><span>iconMenu.prototype.onclick = function() {
</span></span><span id="line2114"><span>  if(!this.menuVisible)
</span></span><span id="line2115"><span>    this.showMenu();
</span></span><span id="line2116"><span>  else
</span></span><span id="line2117"><span>    this.hideMenu();
</span></span><span id="line2118"><span>};
</span></span><span id="line2119"><span>
</span></span><span id="line2120"><span>iconMenu.prototype.onmouseover = function() {
</span></span><span id="line2121"><span>  this.elts.inputOuter.style.backgroundColor = "#A7A097";
</span></span><span id="line2122"><span>};
</span></span><span id="line2123"><span>
</span></span><span id="line2124"><span>iconMenu.prototype.onmouseout = function() {
</span></span><span id="line2125"><span>  this.elts.inputOuter.style.backgroundColor = "#A09790";
</span></span><span id="line2126"><span>};
</span></span><span id="line2127"><span>
</span></span><span id="line2128"><span>iconMenu.prototype.onMenuOptMouseover = function(opt) {
</span></span><span id="line2129"><span>  if(this.mouseoverOpt) {
</span></span><span id="line2130"><span>    this.mouseoverOpt.unhighlight();
</span></span><span id="line2131"><span>    this.hideTooltip();
</span></span><span id="line2132"><span>    this.mouseoverOpt = null;
</span></span><span id="line2133"><span>  }
</span></span><span id="line2134"><span>  
</span></span><span id="line2135"><span>  opt.highlight();
</span></span><span id="line2136"><span>  
</span></span><span id="line2137"><span>  if(opt.showTooltip)
</span></span><span id="line2138"><span>    this.showTooltip(opt.elts.icon, 2, 0, "right", opt.name)
</span></span><span id="line2139"><span>  this.mouseoverOpt = opt;
</span></span><span id="line2140"><span>};
</span></span><span id="line2141"><span>
</span></span><span id="line2142"><span>iconMenu.prototype.onMenuOptMouseout = function(opt) {
</span></span><span id="line2143"><span>  if(this.mouseoverOpt == opt) {
</span></span><span id="line2144"><span>    this.hideTooltip();
</span></span><span id="line2145"><span>    this.mouseoverOpt = null;
</span></span><span id="line2146"><span>  }
</span></span><span id="line2147"><span>  
</span></span><span id="line2148"><span>  opt.unhighlight();
</span></span><span id="line2149"><span>};
</span></span><span id="line2150"><span>
</span></span><span id="line2151"><span>iconMenu.prototype.onMenuOptClick = function(opt) {
</span></span><span id="line2152"><span>  this.setValue(opt.value);
</span></span><span id="line2153"><span>};
</span></span><span id="line2154"><span>
</span></span><span id="line2155"><span>
</span></span><span id="line2156"><span>
</span></span><span id="line2157"><span>
</span></span><span id="line2158"><span>function iconMenuOpt(p) {
</span></span><span id="line2159"><span>  this.elts = {
</span></span><span id="line2160"><span>    outer:null,
</span></span><span id="line2161"><span>    icon:null
</span></span><span id="line2162"><span>  };
</span></span><span id="line2163"><span>  
</span></span><span id="line2164"><span>  this.x = 0;
</span></span><span id="line2165"><span>  this.y = 0;
</span></span><span id="line2166"><span>  this.w = 0;
</span></span><span id="line2167"><span>  this.h = 0;
</span></span><span id="line2168"><span>  
</span></span><span id="line2169"><span>  this.name = ""
</span></span><span id="line2170"><span>  this.value = "";
</span></span><span id="line2171"><span>  this.showName = false;
</span></span><span id="line2172"><span>  this.showTooltip = true;
</span></span><span id="line2173"><span>  this.mouseOverAll = false;
</span></span><span id="line2174"><span>  this.menuIconText = "";
</span></span><span id="line2175"><span>  this.menuIconTextAlign = "";
</span></span><span id="line2176"><span>  this.menuIconTextVAlign = "";
</span></span><span id="line2177"><span>  this.menuImgPath = "";
</span></span><span id="line2178"><span>  this.inputImgPath = "";
</span></span><span id="line2179"><span>  this.gridX = 0;
</span></span><span id="line2180"><span>  this.gridY = 0;
</span></span><span id="line2181"><span>  this.menuIconW = 0;
</span></span><span id="line2182"><span>  this.menuIconH = 0;
</span></span><span id="line2183"><span>  this.parent = null;
</span></span><span id="line2184"><span>  this.idx = 0;
</span></span><span id="line2185"><span>  
</span></span><span id="line2186"><span>  var keys = Object.keys(p);
</span></span><span id="line2187"><span>  for(var i=0; i</span><span>&lt;k</span><span>eys.length; i++) {
</span></span><span id="line2188"><span>    var k = keys[i];
</span></span><span id="line2189"><span>    this[k] = p[k];
</span></span><span id="line2190"><span>  }
</span></span><span id="line2191"><span>  
</span></span><span id="line2192"><span>  if(this.inputImgPath == "")
</span></span><span id="line2193"><span>    this.inputImgPath = this.menuImgPath;
</span></span><span id="line2194"><span>}
</span></span><span id="line2195"><span>
</span></span><span id="line2196"><span>iconMenuOpt.prototype.generateElts = function() {
</span></span><span id="line2197"><span>  var tbl, tr, td, div, span, elt, w, h, _this;
</span></span><span id="line2198"><span>  
</span></span><span id="line2199"><span>  _this = this;
</span></span><span id="line2200"><span>  
</span></span><span id="line2201"><span>  w = this.menuIconW;
</span></span><span id="line2202"><span>  h = this.menuIconH;
</span></span><span id="line2203"><span>  
</span></span><span id="line2204"><span>  tbl = document.createElement("table");
</span></span><span id="line2205"><span>  this.elts.outer = tbl;
</span></span><span id="line2206"><span>  tbl.cellPadding = 0;
</span></span><span id="line2207"><span>  tbl.cellSpacing = 0;
</span></span><span id="line2208"><span>  tbl.style.position = "absolute";
</span></span><span id="line2209"><span>  tbl.style.left = this.x + "px";
</span></span><span id="line2210"><span>  tbl.style.top = this.y + "px";
</span></span><span id="line2211"><span>  tbl.style.backgroundColor = "transparent";
</span></span><span id="line2212"><span>  
</span></span><span id="line2213"><span>  tr = tbl.insertRow(0);
</span></span><span id="line2214"><span>  td = tr.insertCell(0);
</span></span><span id="line2215"><span>  td.style.width = this.menuIconW + "px";
</span></span><span id="line2216"><span>  td.style.height = this.menuIconH + "px";
</span></span><span id="line2217"><span>  
</span></span><span id="line2218"><span>  
</span></span><span id="line2219"><span>  div = document.createElement("div");
</span></span><span id="line2220"><span>  this.elts.icon = div;
</span></span><span id="line2221"><span>  div.style.width = this.menuIconW + "px";
</span></span><span id="line2222"><span>  div.style.height = this.menuIconH + "px";
</span></span><span id="line2223"><span>  div.style.backgroundRepeat = "no-repeat";
</span></span><span id="line2224"><span>  div.style.backgroundPosition = "center center";
</span></span><span id="line2225"><span>  div.style.backgroundImage = "url('" + this.menuImgPath + "')";
</span></span><span id="line2226"><span>  td.appendChild(div);
</span></span><span id="line2227"><span>  
</span></span><span id="line2228"><span>  if(this.menuIconText != "") {
</span></span><span id="line2229"><span>    this.elts.icon.style.position = "relative";
</span></span><span id="line2230"><span>    
</span></span><span id="line2231"><span>    span = document.createElement("span");
</span></span><span id="line2232"><span>    span.style.position = "absolute";
</span></span><span id="line2233"><span>    
</span></span><span id="line2234"><span>    if(this.menuIconTextAlign == "right")
</span></span><span id="line2235"><span>      span.style.right = "0px";
</span></span><span id="line2236"><span>    else
</span></span><span id="line2237"><span>      span.style.left = "0px";
</span></span><span id="line2238"><span>    
</span></span><span id="line2239"><span>    if(this.menuIconTextVAlign == "bottom")
</span></span><span id="line2240"><span>      span.style.bottom = "0px";
</span></span><span id="line2241"><span>    else
</span></span><span id="line2242"><span>      span.style.top = "0px";
</span></span><span id="line2243"><span>    
</span></span><span id="line2244"><span>    span.style.fontSize = "12px";
</span></span><span id="line2245"><span>    span.style.fontWeight = "bold";
</span></span><span id="line2246"><span>    span.innerHTML = this.menuIconText;
</span></span><span id="line2247"><span>    
</span></span><span id="line2248"><span>    this.elts.icon.appendChild(span);
</span></span><span id="line2249"><span>  }
</span></span><span id="line2250"><span>  
</span></span><span id="line2251"><span>  
</span></span><span id="line2252"><span>  if(this.showName) {
</span></span><span id="line2253"><span>    td = tr.insertCell(1);
</span></span><span id="line2254"><span>    td.style.paddingLeft = "4px";
</span></span><span id="line2255"><span>    td.style.paddingRight = "4px";
</span></span><span id="line2256"><span>    
</span></span><span id="line2257"><span>    span = document.createElement("span");
</span></span><span id="line2258"><span>    
</span></span><span id="line2259"><span>    span.style.whiteSpace = "nowrap";
</span></span><span id="line2260"><span>    span.style.fontSize = "16px";
</span></span><span id="line2261"><span>    span.innerHTML = this.name;
</span></span><span id="line2262"><span>    
</span></span><span id="line2263"><span>    document.body.appendChild(span);
</span></span><span id="line2264"><span>    w += 8 + Math.ceil(span.offsetWidth);
</span></span><span id="line2265"><span>    document.body.removeChild(span);
</span></span><span id="line2266"><span>    
</span></span><span id="line2267"><span>    td.appendChild(span);
</span></span><span id="line2268"><span>  }
</span></span><span id="line2269"><span>  
</span></span><span id="line2270"><span>  
</span></span><span id="line2271"><span>  if(this.mouseOverAll)
</span></span><span id="line2272"><span>    elt = this.elts.outer;
</span></span><span id="line2273"><span>  else
</span></span><span id="line2274"><span>    elt = this.elts.icon;
</span></span><span id="line2275"><span>  elt.style.cursor = "pointer";
</span></span><span id="line2276"><span>  elt.onmouseover = function() { _this.parent.onMenuOptMouseover(_this); };
</span></span><span id="line2277"><span>  elt.onmouseout = function() { _this.parent.onMenuOptMouseout(_this); };
</span></span><span id="line2278"><span>  elt.onclick = function() { _this.parent.onMenuOptClick(_this); };
</span></span><span id="line2279"><span>  
</span></span><span id="line2280"><span>  
</span></span><span id="line2281"><span>  if(this.w != 0) {
</span></span><span id="line2282"><span>    w = Math.max(w, this.w);
</span></span><span id="line2283"><span>    this.elts.outer.style.width = w + "px";
</span></span><span id="line2284"><span>  }
</span></span><span id="line2285"><span>  this.w = w;
</span></span><span id="line2286"><span>  
</span></span><span id="line2287"><span>  if(this.h != 0) {
</span></span><span id="line2288"><span>    h = Math.max(h, this.h);
</span></span><span id="line2289"><span>    this.elts.outer.style.height = h + "px";
</span></span><span id="line2290"><span>  }
</span></span><span id="line2291"><span>  this.h = h;
</span></span><span id="line2292"><span>};
</span></span><span id="line2293"><span>
</span></span><span id="line2294"><span>iconMenuOpt.prototype.highlight = function() {
</span></span><span id="line2295"><span>  if(this.mouseOverAll)
</span></span><span id="line2296"><span>    this.elts.outer.style.backgroundColor = "#1E90FF";
</span></span><span id="line2297"><span>  else
</span></span><span id="line2298"><span>    this.elts.icon.style.backgroundColor = "#1E90FF";
</span></span><span id="line2299"><span>};
</span></span><span id="line2300"><span>
</span></span><span id="line2301"><span>iconMenuOpt.prototype.unhighlight = function() {
</span></span><span id="line2302"><span>  if(this.mouseOverAll)
</span></span><span id="line2303"><span>    this.elts.outer.style.backgroundColor = "transparent";
</span></span><span id="line2304"><span>  else
</span></span><span id="line2305"><span>    this.elts.icon.style.backgroundColor = "transparent";
</span></span><span id="line2306"><span>};
</span></span><span id="line2307"><span>
</span></span><span id="line2308"><span>
</span></span><span id="line2309"><span>
</span></span><span id="line2310"><span>// -------------------------------------------------------------------------------------------------------
</span></span><span id="line2311"><span>
</span></span><span id="line2312"><span>
</span></span><span id="line2313"><span>
</span></span><span id="line2314"><span>var gProfileMenu = null;
</span></span><span id="line2315"><span>
</span></span><span id="line2316"><span>function profileMenu(p) {
</span></span><span id="line2317"><span>  this.elts = {
</span></span><span id="line2318"><span>    outer:null,
</span></span><span id="line2319"><span>    valueInput:null,
</span></span><span id="line2320"><span>    nameInput:null,
</span></span><span id="line2321"><span>    menuOuter:null,
</span></span><span id="line2322"><span>    menuInner:null
</span></span><span id="line2323"><span>  };
</span></span><span id="line2324"><span>  
</span></span><span id="line2325"><span>  this.opts = [ ];
</span></span><span id="line2326"><span>  
</span></span><span id="line2327"><span>  this.menuVisible = false;
</span></span><span id="line2328"><span>  this.mouseoverOpt = null;
</span></span><span id="line2329"><span>  this.selectedOpt = null;
</span></span><span id="line2330"><span>  this.selectedValue = "";
</span></span><span id="line2331"><span>  
</span></span><span id="line2332"><span>  this.h = 41;
</span></span><span id="line2333"><span>  this.valueInputName = "";
</span></span><span id="line2334"><span>  this.nameInputName = "";
</span></span><span id="line2335"><span>  this.containerID = "";
</span></span><span id="line2336"><span>  this.menuBorderColor = "#767676";
</span></span><span id="line2337"><span>  this.menuBackgroundColor = "#FFFFFF";
</span></span><span id="line2338"><span>  this.menuOptHighlightColor = "#1E90FF";
</span></span><span id="line2339"><span>  this.menuOptImages = [ ];
</span></span><span id="line2340"><span>  this.onchangeValue = null;
</span></span><span id="line2341"><span>  this.onchangeName = null;
</span></span><span id="line2342"><span>  
</span></span><span id="line2343"><span>  if(typeof p != "undefined" &amp;&amp; p) {
</span></span><span id="line2344"><span>    var keys = Object.keys(p);
</span></span><span id="line2345"><span>    for(var i=0; i</span><span>&lt;k</span><span>eys.length; i++) {
</span></span><span id="line2346"><span>      var k = keys[i];
</span></span><span id="line2347"><span>      this[k] = p[k];
</span></span><span id="line2348"><span>    }
</span></span><span id="line2349"><span>  }
</span></span><span id="line2350"><span>  
</span></span><span id="line2351"><span>  var _this = this;
</span></span><span id="line2352"><span>  this.hideMenuAttachable = function() { _this.hideMenu(); };
</span></span><span id="line2353"><span>}
</span></span><span id="line2354"><span>
</span></span><span id="line2355"><span>profileMenu.prototype.generateMainElts = function() {
</span></span><span id="line2356"><span>  var tbl, tr, td, tbl2, tr2, td2, tbl3, tr3, td3, div, totW, leftW, rightW, inp, btn, buttons, w, h, c, b, _this;
</span></span><span id="line2357"><span>  
</span></span><span id="line2358"><span>  _this = this;
</span></span><span id="line2359"><span>  
</span></span><span id="line2360"><span>  h = this.h;
</span></span><span id="line2361"><span>  
</span></span><span id="line2362"><span>  tbl = document.createElement("table");
</span></span><span id="line2363"><span>  this.elts.outer = tbl;
</span></span><span id="line2364"><span>  tbl.cellPadding = 0;
</span></span><span id="line2365"><span>  tbl.cellSpacing = 0;
</span></span><span id="line2366"><span>  tbl.style.position = "fixed";
</span></span><span id="line2367"><span>  tbl.style.left = "0px";
</span></span><span id="line2368"><span>  tbl.style.top = "0px";
</span></span><span id="line2369"><span>  tbl.style.width = "100%";
</span></span><span id="line2370"><span>  tbl.style.height = h + "px";
</span></span><span id="line2371"><span>  tbl.style.zIndex = "2000";
</span></span><span id="line2372"><span>  tbl.style.backgroundColor = "#888888";
</span></span><span id="line2373"><span>  tbl.style.backgroundRepeat = "repeat";
</span></span><span id="line2374"><span>  tbl.style.backgroundPosition = "left top";
</span></span><span id="line2375"><span>  tbl.style.backgroundImage = "url('../images/citadel_tiles.png')";
</span></span><span id="line2376"><span>  
</span></span><span id="line2377"><span>  tr = tbl.insertRow(0);
</span></span><span id="line2378"><span>  
</span></span><span id="line2379"><span>  
</span></span><span id="line2380"><span>  w = 27;
</span></span><span id="line2381"><span>  
</span></span><span id="line2382"><span>  td = tr.insertCell(0);
</span></span><span id="line2383"><span>  td.style.width = "43px";
</span></span><span id="line2384"><span>  td.align = "center";
</span></span><span id="line2385"><span>  td.style.textAlign = "center";
</span></span><span id="line2386"><span>  td.appendChild(new iconButton({
</span></span><span id="line2387"><span>    w:w,
</span></span><span id="line2388"><span>    h:w,
</span></span><span id="line2389"><span>    borderRadius:7,
</span></span><span id="line2390"><span>    imgPath:"../images/open.png",
</span></span><span id="line2391"><span>    onmousedown:function(e) { stopPropagation(e); _this.onclick(); },
</span></span><span id="line2392"><span>    tooltip:"Select Build"
</span></span><span id="line2393"><span>  }).getOuter());
</span></span><span id="line2394"><span>  
</span></span><span id="line2395"><span>  inp = document.createElement("input");
</span></span><span id="line2396"><span>  this.elts.valueInput = inp;
</span></span><span id="line2397"><span>  inp.type = "hidden";
</span></span><span id="line2398"><span>  inp.name = this.valueInputName;
</span></span><span id="line2399"><span>  td.appendChild(inp);
</span></span><span id="line2400"><span>  
</span></span><span id="line2401"><span>  
</span></span><span id="line2402"><span>  td = tr.insertCell(1);
</span></span><span id="line2403"><span>  td.style.position = "relative";
</span></span><span id="line2404"><span>  td.style.verticalAlign = "top";
</span></span><span id="line2405"><span>  
</span></span><span id="line2406"><span>  
</span></span><span id="line2407"><span>  totW = 220;
</span></span><span id="line2408"><span>  leftW = 16;
</span></span><span id="line2409"><span>  rightW = 20;
</span></span><span id="line2410"><span>  
</span></span><span id="line2411"><span>  
</span></span><span id="line2412"><span>  tbl2 = document.createElement("table");
</span></span><span id="line2413"><span>  tbl2.cellPadding = 0;
</span></span><span id="line2414"><span>  tbl2.cellSpacing = 0;
</span></span><span id="line2415"><span>  tbl2.style.position = "absolute";
</span></span><span id="line2416"><span>  tbl2.style.right = "0px";
</span></span><span id="line2417"><span>  tbl2.style.top = "0px";
</span></span><span id="line2418"><span>  tbl2.style.height = h + "px";
</span></span><span id="line2419"><span>  
</span></span><span id="line2420"><span>  tr2 = tbl2.insertRow(0);
</span></span><span id="line2421"><span>  
</span></span><span id="line2422"><span>  c = 0;
</span></span><span id="line2423"><span>  
</span></span><span id="line2424"><span>  td2 = tr2.insertCell(c++);
</span></span><span id="line2425"><span>  td2.style.width = "100%";
</span></span><span id="line2426"><span>  
</span></span><span id="line2427"><span>  w = 27;
</span></span><span id="line2428"><span>  
</span></span><span id="line2429"><span>  td2 = tr2.insertCell(c++);
</span></span><span id="line2430"><span>  td2.style.width = w + "px";
</span></span><span id="line2431"><span>  td2.appendChild(new iconButton({
</span></span><span id="line2432"><span>    w:w,
</span></span><span id="line2433"><span>    h:w,
</span></span><span id="line2434"><span>    borderRadius:7,
</span></span><span id="line2435"><span>    imgSize:"auto " + (w-6) + "px",
</span></span><span id="line2436"><span>    imgPath:"images/cl_portal.png",
</span></span><span id="line2437"><span>    onclick:function() { window.location.href = "index.html"; },
</span></span><span id="line2438"><span>    tooltip:"Exit Calculator"
</span></span><span id="line2439"><span>  }).getOuter());
</span></span><span id="line2440"><span>  
</span></span><span id="line2441"><span>  
</span></span><span id="line2442"><span>  td2 = tr2.insertCell(c++);
</span></span><span id="line2443"><span>  td2.style.width = "43px";
</span></span><span id="line2444"><span>  
</span></span><span id="line2445"><span>  td.appendChild(tbl2);
</span></span><span id="line2446"><span>  
</span></span><span id="line2447"><span>  
</span></span><span id="line2448"><span>  tbl2 = document.createElement("table");
</span></span><span id="line2449"><span>  tbl2.cellPadding = 0;
</span></span><span id="line2450"><span>  tbl2.cellSpacing = 0;
</span></span><span id="line2451"><span>  tbl2.style.position = "absolute";
</span></span><span id="line2452"><span>  tbl2.style.left = "0px";
</span></span><span id="line2453"><span>  tbl2.style.top = "0px";
</span></span><span id="line2454"><span>  tbl2.style.height = h + "px";
</span></span><span id="line2455"><span>  
</span></span><span id="line2456"><span>  tr2 = tbl2.insertRow(0);
</span></span><span id="line2457"><span>  
</span></span><span id="line2458"><span>  c = 0;
</span></span><span id="line2459"><span>  
</span></span><span id="line2460"><span>  w = leftW;
</span></span><span id="line2461"><span>  td2 = tr2.insertCell(c++);
</span></span><span id="line2462"><span>  td2.style.width = w + "px";
</span></span><span id="line2463"><span>  
</span></span><span id="line2464"><span>  div = document.createElement("div");
</span></span><span id="line2465"><span>  div.style.width = w + "px";
</span></span><span id="line2466"><span>  div.style.height = h + "px";
</span></span><span id="line2467"><span>  div.style.backgroundRepeat = "no-repeat";
</span></span><span id="line2468"><span>  div.style.backgroundPosition = "left center";
</span></span><span id="line2469"><span>  div.style.backgroundImage = "url('../images/scroll.png')";
</span></span><span id="line2470"><span>  td2.appendChild(div);
</span></span><span id="line2471"><span>  
</span></span><span id="line2472"><span>  w = totW - leftW - rightW;
</span></span><span id="line2473"><span>  td2 = tr2.insertCell(c++);
</span></span><span id="line2474"><span>  td2.style.width = w + "px";
</span></span><span id="line2475"><span>  
</span></span><span id="line2476"><span>  div = document.createElement("div");
</span></span><span id="line2477"><span>  div.style.width = w + "px";
</span></span><span id="line2478"><span>  div.style.height = h + "px";
</span></span><span id="line2479"><span>  div.style.backgroundRepeat = "repeat-x";
</span></span><span id="line2480"><span>  div.style.backgroundPosition = "left center";
</span></span><span id="line2481"><span>  div.style.backgroundImage = "url('../images/scroll_center.png')";
</span></span><span id="line2482"><span>  td2.appendChild(div);
</span></span><span id="line2483"><span>  
</span></span><span id="line2484"><span>  w = rightW;
</span></span><span id="line2485"><span>  td2 = tr2.insertCell(c++);
</span></span><span id="line2486"><span>  td2.style.width = w + "px";
</span></span><span id="line2487"><span>  
</span></span><span id="line2488"><span>  div = document.createElement("div");
</span></span><span id="line2489"><span>  div.style.width = w + "px";
</span></span><span id="line2490"><span>  div.style.height = h + "px";
</span></span><span id="line2491"><span>  div.style.backgroundRepeat = "no-repeat";
</span></span><span id="line2492"><span>  div.style.backgroundPosition = "right center";
</span></span><span id="line2493"><span>  div.style.backgroundImage = "url('../images/scroll.png')";
</span></span><span id="line2494"><span>  td2.appendChild(div);
</span></span><span id="line2495"><span>  
</span></span><span id="line2496"><span>  td2 = tr2.insertCell(c++);
</span></span><span id="line2497"><span>  
</span></span><span id="line2498"><span>  buttons = [
</span></span><span id="line2499"><span>    [
</span></span><span id="line2500"><span>      "Revert",
</span></span><span id="line2501"><span>      function(e) { revertSet(e); },
</span></span><span id="line2502"><span>      "#A0D0FF"
</span></span><span id="line2503"><span>    ],
</span></span><span id="line2504"><span>    [
</span></span><span id="line2505"><span>      "Save",
</span></span><span id="line2506"><span>      function(e) { saveSet(e); },
</span></span><span id="line2507"><span>      "#A0D0FF"
</span></span><span id="line2508"><span>    ],
</span></span><span id="line2509"><span>    [
</span></span><span id="line2510"><span>      "Copy",
</span></span><span id="line2511"><span>      function(e) { copySet(e); },
</span></span><span id="line2512"><span>      "#EEEE88"
</span></span><span id="line2513"><span>    ],
</span></span><span id="line2514"><span>    [
</span></span><span id="line2515"><span>      "Paste",
</span></span><span id="line2516"><span>      function(e) { pasteSet(e); },
</span></span><span id="line2517"><span>      "#EEEE88"
</span></span><span id="line2518"><span>    ],
</span></span><span id="line2519"><span>    [
</span></span><span id="line2520"><span>      "Share",
</span></span><span id="line2521"><span>      function(e) { shareBuild(e); },
</span></span><span id="line2522"><span>      "#EEEE88"
</span></span><span id="line2523"><span>    ],
</span></span><span id="line2524"><span>    [
</span></span><span id="line2525"><span>      "Clear",
</span></span><span id="line2526"><span>      function(e) { clearSet(e); },
</span></span><span id="line2527"><span>      "#CC7755"
</span></span><span id="line2528"><span>    ]
</span></span><span id="line2529"><span>  ];
</span></span><span id="line2530"><span>  
</span></span><span id="line2531"><span>  for(b=0; b</span><span>&lt;b</span><span>uttons.length; b++) {
</span></span><span id="line2532"><span>    td2 = tr2.insertCell(c++);
</span></span><span id="line2533"><span>    td2.style.paddingLeft = "8px";
</span></span><span id="line2534"><span>    
</span></span><span id="line2535"><span>    tbl3 = document.createElement("table");
</span></span><span id="line2536"><span>    tbl3.cellPadding = 0;
</span></span><span id="line2537"><span>    tbl3.cellSpacing = 0;
</span></span><span id="line2538"><span>    tbl3.style.border = "2px solid #333333";
</span></span><span id="line2539"><span>    tbl3.style.borderRadius = "6px";
</span></span><span id="line2540"><span>    tbl3.style.cursor = "pointer";
</span></span><span id="line2541"><span>    tbl3.style.onselectstart = function() { return false; };
</span></span><span id="line2542"><span>    tbl3.style.backgroundColor = buttons[b][2];
</span></span><span id="line2543"><span>    observe(tbl3, "click", buttons[b][1]);
</span></span><span id="line2544"><span>    
</span></span><span id="line2545"><span>    tr3 = tbl3.insertRow(0);
</span></span><span id="line2546"><span>    td3 = tr3.insertCell(0);
</span></span><span id="line2547"><span>    td3.style.boxSizing = "border-box";
</span></span><span id="line2548"><span>    td3.style.height = "17px";
</span></span><span id="line2549"><span>    td3.style.paddingLeft = "5px";
</span></span><span id="line2550"><span>    td3.style.paddingRight = "5px";
</span></span><span id="line2551"><span>    td3.style.fontSize = "14px";
</span></span><span id="line2552"><span>    td3.innerHTML = buttons[b][0];
</span></span><span id="line2553"><span>    
</span></span><span id="line2554"><span>    td2.appendChild(tbl3);
</span></span><span id="line2555"><span>  }
</span></span><span id="line2556"><span>  
</span></span><span id="line2557"><span>  td.appendChild(tbl2);
</span></span><span id="line2558"><span>  
</span></span><span id="line2559"><span>  
</span></span><span id="line2560"><span>  w = totW;
</span></span><span id="line2561"><span>  
</span></span><span id="line2562"><span>  tbl2 = document.createElement("table");
</span></span><span id="line2563"><span>  tbl2.cellPadding = 0;
</span></span><span id="line2564"><span>  tbl2.cellSpacing = 0;
</span></span><span id="line2565"><span>  tbl2.style.position = "absolute";
</span></span><span id="line2566"><span>  tbl2.style.left = "0px";
</span></span><span id="line2567"><span>  tbl2.style.top = "0px";
</span></span><span id="line2568"><span>  tbl2.style.tableLayout = "fixed";
</span></span><span id="line2569"><span>  tbl2.style.width = w + "px";
</span></span><span id="line2570"><span>  tbl2.style.height = h + "px";
</span></span><span id="line2571"><span>  
</span></span><span id="line2572"><span>  tr2 = tbl2.insertRow(0);
</span></span><span id="line2573"><span>  td2 = tr2.insertCell(0);
</span></span><span id="line2574"><span>  td2.style.paddingLeft = "8px";
</span></span><span id="line2575"><span>  td2.style.paddingRight = "8px";
</span></span><span id="line2576"><span>  
</span></span><span id="line2577"><span>  inp = document.createElement("input");
</span></span><span id="line2578"><span>  this.elts.nameInput = inp;
</span></span><span id="line2579"><span>  inp.name = this.nameInputName;
</span></span><span id="line2580"><span>  inp.type = "text";
</span></span><span id="line2581"><span>  inp.maxLength = 24;
</span></span><span id="line2582"><span>  inp.style.width = "100%";
</span></span><span id="line2583"><span>  inp.style.border = "0px solid transparent";
</span></span><span id="line2584"><span>  inp.style.backgroundColor = "transparent";
</span></span><span id="line2585"><span>  inp.style.fontWeight = "bold";
</span></span><span id="line2586"><span>  if(this.onchangeName)
</span></span><span id="line2587"><span>    inp.onchange = function() { _this.onchangeName(); };
</span></span><span id="line2588"><span>  td2.appendChild(inp);
</span></span><span id="line2589"><span>  
</span></span><span id="line2590"><span>  td.appendChild(tbl2);
</span></span><span id="line2591"><span>  
</span></span><span id="line2592"><span>  
</span></span><span id="line2593"><span>  td = tr.insertCell(2);
</span></span><span id="line2594"><span>  td.style.width = "14px";
</span></span><span id="line2595"><span>  
</span></span><span id="line2596"><span>  
</span></span><span id="line2597"><span>  document.getElementById("data").appendChild(this.elts.outer);
</span></span><span id="line2598"><span>};
</span></span><span id="line2599"><span>
</span></span><span id="line2600"><span>profileMenu.prototype.generateMenuElts = function() {
</span></span><span id="line2601"><span>  var tbl, tr, td, div, i, j, o;
</span></span><span id="line2602"><span>  
</span></span><span id="line2603"><span>  div = document.createElement("div");
</span></span><span id="line2604"><span>  this.elts.menuOuter = div;
</span></span><span id="line2605"><span>  div.style.display = "none";
</span></span><span id="line2606"><span>  div.style.position = "fixed";
</span></span><span id="line2607"><span>  div.style.left = "0px";
</span></span><span id="line2608"><span>  div.style.top = this.h + "px";
</span></span><span id="line2609"><span>  div.style.border = "1px solid " + this.menuBorderColor;
</span></span><span id="line2610"><span>  div.style.backgroundColor = this.menuBackgroundColor;
</span></span><span id="line2611"><span>  div.style.boxSizing = "border-box";
</span></span><span id="line2612"><span>  div.style.mozBoxSizing = "border-box";
</span></span><span id="line2613"><span>  div.style.webkitBoxSizing = "border-box";
</span></span><span id="line2614"><span>  div.style.overflowX = "hidden";
</span></span><span id="line2615"><span>  div.style.overflowY = "hidden";
</span></span><span id="line2616"><span>  div.onselectstart = function() { return false; };
</span></span><span id="line2617"><span>  div.onmousedown = function(e) { stopPropagation(e); };
</span></span><span id="line2618"><span>  
</span></span><span id="line2619"><span>  tbl = document.createElement("table");
</span></span><span id="line2620"><span>  this.elts.menuInner = tbl;
</span></span><span id="line2621"><span>  tbl.cellPadding = 0;
</span></span><span id="line2622"><span>  tbl.cellSpacing = 0;
</span></span><span id="line2623"><span>  
</span></span><span id="line2624"><span>  j = 0;
</span></span><span id="line2625"><span>  for(i=1; i</span><span>&lt;=</span><span>20; i++) {
</span></span><span id="line2626"><span>    o = new profileMenuOpt({
</span></span><span id="line2627"><span>      parent:this,
</span></span><span id="line2628"><span>      value:i,
</span></span><span id="line2629"><span>      numImages:this.menuOptImages.length,
</span></span><span id="line2630"><span>      highlightColor:this.menuOptHighlightColor
</span></span><span id="line2631"><span>    });
</span></span><span id="line2632"><span>    o.generateElts(tbl);
</span></span><span id="line2633"><span>    
</span></span><span id="line2634"><span>    this.opts[j] = o;
</span></span><span id="line2635"><span>    j++;
</span></span><span id="line2636"><span>  }
</span></span><span id="line2637"><span>  
</span></span><span id="line2638"><span>  div.appendChild(tbl);
</span></span><span id="line2639"><span>  
</span></span><span id="line2640"><span>  document.getElementById("data").appendChild(this.elts.menuOuter);
</span></span><span id="line2641"><span>};
</span></span><span id="line2642"><span>
</span></span><span id="line2643"><span>profileMenu.prototype.onclick = function() {
</span></span><span id="line2644"><span>  if(!this.menuVisible)
</span></span><span id="line2645"><span>    this.showMenu();
</span></span><span id="line2646"><span>  else
</span></span><span id="line2647"><span>    this.hideMenu();
</span></span><span id="line2648"><span>};
</span></span><span id="line2649"><span>
</span></span><span id="line2650"><span>profileMenu.prototype.showMenu = function() {
</span></span><span id="line2651"><span>  hideAllMenus();
</span></span><span id="line2652"><span>  
</span></span><span id="line2653"><span>  if(!this.elts.menuOuter)
</span></span><span id="line2654"><span>    this.generateMenuElts();
</span></span><span id="line2655"><span>  
</span></span><span id="line2656"><span>  if(this.mouseoverOpt) {
</span></span><span id="line2657"><span>    this.mouseoverOpt.unhighlight();
</span></span><span id="line2658"><span>    this.mouseoverOpt = null;
</span></span><span id="line2659"><span>  }
</span></span><span id="line2660"><span>  if(this.selectedOpt) {
</span></span><span id="line2661"><span>    this.selectedOpt.highlight();
</span></span><span id="line2662"><span>    this.mouseoverOpt = this.selectedOpt;
</span></span><span id="line2663"><span>  }
</span></span><span id="line2664"><span>  
</span></span><span id="line2665"><span>  this.elts.menuOuter.style.display = "";
</span></span><span id="line2666"><span>  this.menuVisible = true;
</span></span><span id="line2667"><span>  
</span></span><span id="line2668"><span>  
</span></span><span id="line2669"><span>  var w = this.elts.menuInner.scrollWidth + 2;
</span></span><span id="line2670"><span>  var fullH = this.elts.menuInner.scrollHeight + 2
</span></span><span id="line2671"><span>  
</span></span><span id="line2672"><span>  var h = fullH;
</span></span><span id="line2673"><span>  h = Math.min(h, getWindowH() - this.h - 20);
</span></span><span id="line2674"><span>  h = Math.max(h, 50);
</span></span><span id="line2675"><span>  
</span></span><span id="line2676"><span>  if(h </span><span>&lt; </span><span>fullH) {
</span></span><span id="line2677"><span>    w += 20;
</span></span><span id="line2678"><span>    this.elts.menuOuter.style.overflowY = "scroll";
</span></span><span id="line2679"><span>  }
</span></span><span id="line2680"><span>  else {
</span></span><span id="line2681"><span>    this.elts.menuOuter.style.overflowY = "hidden";
</span></span><span id="line2682"><span>  }
</span></span><span id="line2683"><span>  
</span></span><span id="line2684"><span>  this.elts.menuOuter.style.width = w + "px";
</span></span><span id="line2685"><span>  this.elts.menuOuter.style.height = h + "px";
</span></span><span id="line2686"><span>  
</span></span><span id="line2687"><span>  observe(document.body, "mousedown", this.hideMenuAttachable);
</span></span><span id="line2688"><span>  observe(document.body, "keydown", this.hideMenuAttachable);
</span></span><span id="line2689"><span>};
</span></span><span id="line2690"><span>
</span></span><span id="line2691"><span>profileMenu.prototype.hideMenu = function() {
</span></span><span id="line2692"><span>  if(!this.menuVisible)
</span></span><span id="line2693"><span>    return;
</span></span><span id="line2694"><span>  
</span></span><span id="line2695"><span>  this.elts.menuOuter.style.display = "none";
</span></span><span id="line2696"><span>  this.menuVisible = false;
</span></span><span id="line2697"><span>  unobserve(document.body, "mousedown", this.hideMenuAttachable);
</span></span><span id="line2698"><span>  unobserve(document.body, "keydown", this.hideMenuAttachable);
</span></span><span id="line2699"><span>};
</span></span><span id="line2700"><span>
</span></span><span id="line2701"><span>profileMenu.prototype.onMenuOptMouseover = function(opt) {
</span></span><span id="line2702"><span>  if(this.mouseoverOpt) {
</span></span><span id="line2703"><span>    this.mouseoverOpt.unhighlight();
</span></span><span id="line2704"><span>    this.mouseoverOpt = null;
</span></span><span id="line2705"><span>  }
</span></span><span id="line2706"><span>  
</span></span><span id="line2707"><span>  opt.highlight();
</span></span><span id="line2708"><span>  
</span></span><span id="line2709"><span>  this.mouseoverOpt = opt;
</span></span><span id="line2710"><span>};
</span></span><span id="line2711"><span>
</span></span><span id="line2712"><span>profileMenu.prototype.onMenuOptMouseout = function(opt) {
</span></span><span id="line2713"><span>  if(this.mouseoverOpt == opt) {
</span></span><span id="line2714"><span>    this.mouseoverOpt = null;
</span></span><span id="line2715"><span>  }
</span></span><span id="line2716"><span>  
</span></span><span id="line2717"><span>  opt.unhighlight();
</span></span><span id="line2718"><span>};
</span></span><span id="line2719"><span>
</span></span><span id="line2720"><span>profileMenu.prototype.onMenuOptClick = function(opt) {
</span></span><span id="line2721"><span>  this.setValue(opt.value);
</span></span><span id="line2722"><span>};
</span></span><span id="line2723"><span>
</span></span><span id="line2724"><span>profileMenu.prototype.setValue = function(val) {
</span></span><span id="line2725"><span>  this.elts.valueInput.value = val;
</span></span><span id="line2726"><span>  this.hideMenu();
</span></span><span id="line2727"><span>  this.updateSelection();
</span></span><span id="line2728"><span>  
</span></span><span id="line2729"><span>  if(this.onchangeValue)
</span></span><span id="line2730"><span>    this.onchangeValue(val);
</span></span><span id="line2731"><span>};
</span></span><span id="line2732"><span>
</span></span><span id="line2733"><span>profileMenu.prototype.updateSelection = function() {
</span></span><span id="line2734"><span>  var val = this.elts.valueInput.value;
</span></span><span id="line2735"><span>  
</span></span><span id="line2736"><span>  var o = null;
</span></span><span id="line2737"><span>  if(isNaN(val))
</span></span><span id="line2738"><span>    val = parseInt(val);
</span></span><span id="line2739"><span>  if(!isNaN(val) &amp;&amp; val &gt;= 1 &amp;&amp; val </span><span>&lt;=</span><span> this.opts.length)
</span></span><span id="line2740"><span>    o = this.opts[val-1];
</span></span><span id="line2741"><span>  
</span></span><span id="line2742"><span>  this.selectedValue = val;
</span></span><span id="line2743"><span>  this.selectedOpt = o;
</span></span><span id="line2744"><span>};
</span></span><span id="line2745"><span>
</span></span><span id="line2746"><span>profileMenu.prototype.updateOpt = function(idx, arr) {
</span></span><span id="line2747"><span>  var name, date, images, m, o, v, i, j;
</span></span><span id="line2748"><span>  
</span></span><span id="line2749"><span>  if(!this.elts.menuOuter)
</span></span><span id="line2750"><span>    this.generateMenuElts();
</span></span><span id="line2751"><span>  
</span></span><span id="line2752"><span>  if(idx </span><span>&lt; </span><span>1 || idx &gt; this.opts.length)
</span></span><span id="line2753"><span>    return;
</span></span><span id="line2754"><span>  
</span></span><span id="line2755"><span>  o = this.opts[idx-1];
</span></span><span id="line2756"><span>  
</span></span><span id="line2757"><span>  name = arr[0];
</span></span><span id="line2758"><span>  date = arr[44];
</span></span><span id="line2759"><span>  
</span></span><span id="line2760"><span>  images = new Array(this.menuOptImages.length);
</span></span><span id="line2761"><span>  for(i=0; i</span><span>&lt;i</span><span>mages.length; i++) {
</span></span><span id="line2762"><span>    images[i] = "";
</span></span><span id="line2763"><span>    
</span></span><span id="line2764"><span>    m = menuLookup[this.menuOptImages[i].menuName];
</span></span><span id="line2765"><span>    v = arr[this.menuOptImages[i].setValueIndex];
</span></span><span id="line2766"><span>    
</span></span><span id="line2767"><span>    for(j=0; j</span><span>&lt;m</span><span>.opts.length; j++) {
</span></span><span id="line2768"><span>      if(m.opts[j].value == v) {
</span></span><span id="line2769"><span>        images[i] = m.opts[j].menuImgPath;
</span></span><span id="line2770"><span>        break;
</span></span><span id="line2771"><span>      }
</span></span><span id="line2772"><span>    }
</span></span><span id="line2773"><span>  }
</span></span><span id="line2774"><span>  
</span></span><span id="line2775"><span>  o.setData(name, date, images)
</span></span><span id="line2776"><span>};
</span></span><span id="line2777"><span>
</span></span><span id="line2778"><span>
</span></span><span id="line2779"><span>
</span></span><span id="line2780"><span>function profileMenuOpt(p) {
</span></span><span id="line2781"><span>  this.elts = {
</span></span><span id="line2782"><span>    outer:null,
</span></span><span id="line2783"><span>    images:[ ],
</span></span><span id="line2784"><span>    name:[ ],
</span></span><span id="line2785"><span>    date:[ ]
</span></span><span id="line2786"><span>  };
</span></span><span id="line2787"><span>  
</span></span><span id="line2788"><span>  this.value = 0;
</span></span><span id="line2789"><span>  this.parent = null;
</span></span><span id="line2790"><span>  this.numImages = 2;
</span></span><span id="line2791"><span>  this.imageW = 42;
</span></span><span id="line2792"><span>  this.imageH = 42;
</span></span><span id="line2793"><span>  this.fontSize = 14;
</span></span><span id="line2794"><span>  this.bgColor = "transparent";
</span></span><span id="line2795"><span>  this.highlightColor = "";
</span></span><span id="line2796"><span>  
</span></span><span id="line2797"><span>  if(typeof p != "undefined" &amp;&amp; p) {
</span></span><span id="line2798"><span>    var keys = Object.keys(p);
</span></span><span id="line2799"><span>    for(var i=0; i</span><span>&lt;k</span><span>eys.length; i++) {
</span></span><span id="line2800"><span>      var k = keys[i];
</span></span><span id="line2801"><span>      this[k] = p[k];
</span></span><span id="line2802"><span>    }
</span></span><span id="line2803"><span>  }
</span></span><span id="line2804"><span>}
</span></span><span id="line2805"><span>
</span></span><span id="line2806"><span>profileMenuOpt.prototype.generateElts = function(tbl) {
</span></span><span id="line2807"><span>  var tr, td, div, c, i, _this;
</span></span><span id="line2808"><span>  
</span></span><span id="line2809"><span>  _this = this;
</span></span><span id="line2810"><span>  
</span></span><span id="line2811"><span>  tr = tbl.insertRow(tbl.rows.length);
</span></span><span id="line2812"><span>  this.elts.outer = tr;
</span></span><span id="line2813"><span>  tr.style.backgroundColor = this.bgColor;
</span></span><span id="line2814"><span>  c = 0;
</span></span><span id="line2815"><span>  
</span></span><span id="line2816"><span>  for(i=0; i</span><span>&lt;t</span><span>his.numImages; i++) {
</span></span><span id="line2817"><span>    td = tr.insertCell(c++);
</span></span><span id="line2818"><span>    td.style.width = this.imageW + "px";
</span></span><span id="line2819"><span>    td.style.height = this.imageH + "px";
</span></span><span id="line2820"><span>    
</span></span><span id="line2821"><span>    div = document.createElement("div");
</span></span><span id="line2822"><span>    this.elts.images[i] = div;
</span></span><span id="line2823"><span>    div.style.width = this.imageW + "px";
</span></span><span id="line2824"><span>    div.style.height = this.imageW + "px";
</span></span><span id="line2825"><span>    div.style.backgroundRepeat = "no-repeat";
</span></span><span id="line2826"><span>    div.style.backgroundPosition = "center center";
</span></span><span id="line2827"><span>    
</span></span><span id="line2828"><span>    td.appendChild(div);
</span></span><span id="line2829"><span>  }
</span></span><span id="line2830"><span>  
</span></span><span id="line2831"><span>  td = tr.insertCell(c++);
</span></span><span id="line2832"><span>  this.elts.name = td;
</span></span><span id="line2833"><span>  td.style.paddingLeft = "4px";
</span></span><span id="line2834"><span>  td.style.whiteSpace = "nowrap";
</span></span><span id="line2835"><span>  td.style.fontSize = this.fontSize + "px";
</span></span><span id="line2836"><span>  
</span></span><span id="line2837"><span>  td = tr.insertCell(c++);
</span></span><span id="line2838"><span>  this.elts.date = td;
</span></span><span id="line2839"><span>  td.style.paddingLeft = "20px";
</span></span><span id="line2840"><span>  td.style.paddingRight = "10px";
</span></span><span id="line2841"><span>  td.style.whiteSpace = "nowrap";
</span></span><span id="line2842"><span>  td.style.fontSize = (this.fontSize-2) + "px";
</span></span><span id="line2843"><span>  
</span></span><span id="line2844"><span>  this.elts.outer.style.cursor = "pointer";
</span></span><span id="line2845"><span>  this.elts.outer.onselectstart = function() { return false; };
</span></span><span id="line2846"><span>  this.elts.outer.onmouseover = function() { _this.parent.onMenuOptMouseover(_this); };
</span></span><span id="line2847"><span>  this.elts.outer.onmouseout = function() { _this.parent.onMenuOptMouseout(_this); };
</span></span><span id="line2848"><span>  this.elts.outer.onclick = function() { _this.parent.onMenuOptClick(_this); };
</span></span><span id="line2849"><span>};
</span></span><span id="line2850"><span>
</span></span><span id="line2851"><span>profileMenuOpt.prototype.setData = function(name, date, images) {
</span></span><span id="line2852"><span>  this.elts.name.innerHTML = escapeHTML(name);
</span></span><span id="line2853"><span>  
</span></span><span id="line2854"><span>  if(date != "")
</span></span><span id="line2855"><span>    this.elts.date.innerHTML = "Last Saved " + date;
</span></span><span id="line2856"><span>  else
</span></span><span id="line2857"><span>    this.elts.date.innerHTML = "";
</span></span><span id="line2858"><span>  
</span></span><span id="line2859"><span>  for(var i=0; i</span><span>&lt;t</span><span>his.numImages; i++) {
</span></span><span id="line2860"><span>    var imgPath;
</span></span><span id="line2861"><span>    if(i </span><span>&lt; </span><span>images.length)
</span></span><span id="line2862"><span>      imgPath = images[i];
</span></span><span id="line2863"><span>    else
</span></span><span id="line2864"><span>      imgPath = "";
</span></span><span id="line2865"><span>    
</span></span><span id="line2866"><span>    if(imgPath != "")
</span></span><span id="line2867"><span>      this.elts.images[i].style.backgroundImage = "url('" + imgPath + "')";
</span></span><span id="line2868"><span>    else
</span></span><span id="line2869"><span>      this.elts.images[i].style.backgroundImage = "";
</span></span><span id="line2870"><span>  }
</span></span><span id="line2871"><span>};
</span></span><span id="line2872"><span>
</span></span><span id="line2873"><span>profileMenuOpt.prototype.highlight = function() {
</span></span><span id="line2874"><span>  this.elts.outer.style.backgroundColor = this.highlightColor;
</span></span><span id="line2875"><span>};
</span></span><span id="line2876"><span>
</span></span><span id="line2877"><span>profileMenuOpt.prototype.unhighlight = function() {
</span></span><span id="line2878"><span>  this.elts.outer.style.backgroundColor = this.bgColor;
</span></span><span id="line2879"><span>};
</span></span><span id="line2880"><span>
</span></span><span id="line2881"><span>
</span></span><span id="line2882"><span>
</span></span><span id="line2883"><span>function iconButton(p) {
</span></span><span id="line2884"><span>  this.elts = {
</span></span><span id="line2885"><span>    outer:null,
</span></span><span id="line2886"><span>    img:null
</span></span><span id="line2887"><span>  };
</span></span><span id="line2888"><span>  
</span></span><span id="line2889"><span>  this.w = 21;
</span></span><span id="line2890"><span>  this.h = 21;
</span></span><span id="line2891"><span>  this.imgPath = "";
</span></span><span id="line2892"><span>  this.imgSize = "";
</span></span><span id="line2893"><span>  this.tooltip = "";
</span></span><span id="line2894"><span>  this.borderColor = "#333333";
</span></span><span id="line2895"><span>  this.borderRadius = 7;
</span></span><span id="line2896"><span>  this.bgColor = "#FFFFFF";
</span></span><span id="line2897"><span>  this.highlightColor = "#DDDDFF";
</span></span><span id="line2898"><span>  this.onmousedown = null;
</span></span><span id="line2899"><span>  this.onclick = null;
</span></span><span id="line2900"><span>  
</span></span><span id="line2901"><span>  if(typeof p != "undefined" &amp;&amp; p) {
</span></span><span id="line2902"><span>    var keys = Object.keys(p);
</span></span><span id="line2903"><span>    for(var i=0; i</span><span>&lt;k</span><span>eys.length; i++) {
</span></span><span id="line2904"><span>      var k = keys[i];
</span></span><span id="line2905"><span>      this[k] = p[k];
</span></span><span id="line2906"><span>    }
</span></span><span id="line2907"><span>  }
</span></span><span id="line2908"><span>}
</span></span><span id="line2909"><span>
</span></span><span id="line2910"><span>iconButton.prototype.getOuter = function() {
</span></span><span id="line2911"><span>  if(!this.elts.outer)
</span></span><span id="line2912"><span>    this.generateElts();
</span></span><span id="line2913"><span>  
</span></span><span id="line2914"><span>  return this.elts.outer;
</span></span><span id="line2915"><span>};
</span></span><span id="line2916"><span>
</span></span><span id="line2917"><span>iconButton.prototype.generateElts = function() {
</span></span><span id="line2918"><span>  var div, _this;
</span></span><span id="line2919"><span>  
</span></span><span id="line2920"><span>  _this = this;
</span></span><span id="line2921"><span>  
</span></span><span id="line2922"><span>  div = document.createElement("div");
</span></span><span id="line2923"><span>  this.elts.outer = div;
</span></span><span id="line2924"><span>  this.elts.img = div;
</span></span><span id="line2925"><span>  div.style.display = "inline-block";
</span></span><span id="line2926"><span>  div.style.width = this.w + "px";
</span></span><span id="line2927"><span>  div.style.height = this.h + "px";
</span></span><span id="line2928"><span>  div.style.cursor = "pointer";
</span></span><span id="line2929"><span>  div.style.border = "1px solid " + this.borderColor;
</span></span><span id="line2930"><span>  div.style.borderRadius = this.borderRadius + "px " + this.borderRadius + "px " + this.borderRadius + "px " + this.borderRadius + "px";
</span></span><span id="line2931"><span>  div.style.mozBorderRadius = this.borderRadius + "px " + this.borderRadius + "px " + this.borderRadius + "px " + this.borderRadius + "px";
</span></span><span id="line2932"><span>  if(this.imgSize != "")
</span></span><span id="line2933"><span>    div.style.backgroundSize = this.imgSize;
</span></span><span id="line2934"><span>  div.style.backgroundColor = this.bgColor;
</span></span><span id="line2935"><span>  div.style.backgroundRepeat = "no-repeat";
</span></span><span id="line2936"><span>  div.style.backgroundPosition = "center center";
</span></span><span id="line2937"><span>  div.style.backgroundImage = "url('" + this.imgPath + "')";
</span></span><span id="line2938"><span>  div.style.boxSizing = "border-box";
</span></span><span id="line2939"><span>  div.style.mozBoxSizing = "border-box";
</span></span><span id="line2940"><span>  div.style.webkitBoxSizing = "border-box";
</span></span><span id="line2941"><span>  if(this.tooltip != "")
</span></span><span id="line2942"><span>    div.title = this.tooltip;
</span></span><span id="line2943"><span>  
</span></span><span id="line2944"><span>  div.onselectstart = function() { return false; };
</span></span><span id="line2945"><span>  
</span></span><span id="line2946"><span>  if(this.onmousedown)
</span></span><span id="line2947"><span>    div.onmousedown = this.onmousedown;
</span></span><span id="line2948"><span>  
</span></span><span id="line2949"><span>  if(this.onclick)
</span></span><span id="line2950"><span>    div.onclick = this.onclick;
</span></span><span id="line2951"><span>  
</span></span><span id="line2952"><span>  div.onmouseover = function() { _this.highlight(); };
</span></span><span id="line2953"><span>  div.onmouseout = function() { _this.unhighlight(); };
</span></span><span id="line2954"><span>};
</span></span><span id="line2955"><span>
</span></span><span id="line2956"><span>iconButton.prototype.highlight = function() {
</span></span><span id="line2957"><span>  this.elts.outer.style.backgroundColor = this.highlightColor;
</span></span><span id="line2958"><span>};
</span></span><span id="line2959"><span>
</span></span><span id="line2960"><span>iconButton.prototype.unhighlight = function() {
</span></span><span id="line2961"><span>  this.elts.outer.style.backgroundColor = this.bgColor;
</span></span><span id="line2962"><span>};
</span></span><span id="line2963"><span>
</span></span><span id="line2964"><span>
</span></span><span id="line2965"><span>
</span></span><span id="line2966"><span>// </span><span>&lt;&gt;</span><span>
</span></span><span id="line2967"><span>function escapeHTML(str) {
</span></span><span id="line2968"><span>  return str.replace(/&amp;/g, "&amp;amp;").replace(/&gt;/g, "&amp;gt;").replace(/</span><span>&lt;/<span></span>g</span><span>, "&amp;lt;").replace(/\"/g, "&amp;quot;").replace(/  /g, "&amp;nbsp; ");
</span></span><span id="line2969"><span>}
</span></span><span id="line2970"><span>
</span></span><span id="line2971"><span>
</span></span><span id="line2972"><span>
</span></span><span id="line2973"><span>// -------------------------------------------------------------------------------------------------------
</span></span><span id="line2974"><span>
</span></span><span id="line2975"><span>
</span></span><span id="line2976"><span>
</span></span><span id="line2977"><span>// Profiles
</span></span><span id="line2978"><span>var sets = new Array(22);
</span></span><span id="line2979"><span>for (var i=0; i</span><span>&lt;s</span><span>ets.length; i++)
</span></span><span id="line2980"><span>{
</span></span><span id="line2981"><span>	sets[i] = new Array(71);
</span></span><span id="line2982"><span>	for (var ii=1; ii</span><span>&lt;2</span><span>1; ii++)
</span></span><span id="line2983"><span>		sets[i][ii] = "";
</span></span><span id="line2984"><span>	for (var ii=21; ii</span><span>&lt;2</span><span>4; ii++)
</span></span><span id="line2985"><span>		sets[i][ii] = 0;
</span></span><span id="line2986"><span>	for (var ii=24; ii</span><span>&lt;4</span><span>5; ii++)
</span></span><span id="line2987"><span>		sets[i][ii] = "";
</span></span><span id="line2988"><span>
</span></span><span id="line2989"><span>	sets[i][0] = "Build " + i;
</span></span><span id="line2990"><span>
</span></span><span id="line2991"><span>	sets[i][24] = FPSArray[1];
</span></span><span id="line2992"><span>	
</span></span><span id="line2993"><span>	sets[i][45] = "Add personal notes for this build here.  There is a 150 character limit.";
</span></span><span id="line2994"><span>	sets[i][46] = 0;
</span></span><span id="line2995"><span>  
</span></span><span id="line2996"><span>	for (var ii=47; ii</span><span>&lt;=</span><span>66; ii++)
</span></span><span id="line2997"><span>		sets[i][ii] = "";
</span></span><span id="line2998"><span>  
</span></span><span id="line2999"><span>	sets[i][67] = 0;
</span></span><span id="line3000"><span>  
</span></span><span id="line3001"><span>	for (var ii=68; ii</span><span>&lt;=</span><span>70; ii++)
</span></span><span id="line3002"><span>		sets[i][ii] = "";
</span></span><span id="line3003"><span>}
</span></span><span id="line3004"><span>
</span></span><span id="line3005"><span>function calculate() 
</span></span><span id="line3006"><span>{
</span></span><span id="line3007"><span>	var data = document.getElementById("data");
</span></span><span id="line3008"><span>
</span></span><span id="line3009"><span>	var EAtkus = parseFloat(data.EAtkus.value);
</span></span><span id="line3010"><span>	if(!EAtkus) EAtkus = 0;
</span></span><span id="line3011"><span>	var TAtkus = parseFloat(data.TAtkus.value);
</span></span><span id="line3012"><span>	if(!TAtkus) TAtkus = 0;
</span></span><span id="line3013"><span>	var EDarkus = parseFloat(data.EDarkus.value);
</span></span><span id="line3014"><span>	if(!EDarkus) EDarkus = 0;
</span></span><span id="line3015"><span>	var TDarkus = parseFloat(data.TDarkus.value);
</span></span><span id="line3016"><span>	if(!TDarkus) TDarkus = 0;
</span></span><span id="line3017"><span>	var TDarktur = parseFloat(data.TDarktur.value);
</span></span><span id="line3018"><span>	if(!TDarktur) TDarktur = 0;
</span></span><span id="line3019"><span>	var EBalthus = parseFloat(data.EBalthus.value);
</span></span><span id="line3020"><span>	if(!EBalthus) EBalthus = 0;
</span></span><span id="line3021"><span>	var TBalthus = parseFloat(data.TBalthus.value);
</span></span><span id="line3022"><span>	if(!TBalthus) TBalthus = 0;
</span></span><span id="line3023"><span>	var ERegia = parseFloat(data.ERegia.value);
</span></span><span id="line3024"><span>	if(!ERegia) ERegia = 0;
</span></span><span id="line3025"><span>	var TRegia = parseFloat(data.TRegia.value);
</span></span><span id="line3026"><span>	if(!TRegia) TRegia = 0;
</span></span><span id="line3027"><span>	var TEvus = parseFloat(data.TEvus.value);
</span></span><span id="line3028"><span>	if(!TEvus) TEvus = 0;
</span></span><span id="line3029"><span>	var TSwengus = parseFloat(data.TSwengus.value);
</span></span><span id="line3030"><span>	if(!TSwengus) TSwengus = 0;
</span></span><span id="line3031"><span>	var EHistia = parseFloat(data.EHistia.value);
</span></span><span id="line3032"><span>	if(!EHistia) EHistia = 0;
</span></span><span id="line3033"><span>	var THistia = parseFloat(data.THistia.value);
</span></span><span id="line3034"><span>	if(!THistia) THistia = 0;
</span></span><span id="line3035"><span>	var EDetha = parseFloat(data.EDetha.value);
</span></span><span id="line3036"><span>	if(!EDetha) EDetha = 0;
</span></span><span id="line3037"><span>	var TDetha = parseFloat(data.TDetha.value);
</span></span><span id="line3038"><span>	if(!TDetha) TDetha = 0;
</span></span><span id="line3039"><span>  
</span></span><span id="line3040"><span>	var TBodrus = parseFloat(data.TBodrus.value);
</span></span><span id="line3041"><span>	if(!TBodrus) TBodrus = 0;
</span></span><span id="line3042"><span>	var THardia = parseFloat(data.THardia.value);
</span></span><span id="line3043"><span>	if(!THardia) THardia = 0;
</span></span><span id="line3044"><span>	var ETroilus = parseFloat(data.ETroilus.value);
</span></span><span id="line3045"><span>	if(!ETroilus) ETroilus = 0;
</span></span><span id="line3046"><span>	var TTroilus = parseFloat(data.TTroilus.value);
</span></span><span id="line3047"><span>	if(!TTroilus) TTroilus = 0;
</span></span><span id="line3048"><span>	var ERodnus = parseFloat(data.ERodnus.value);
</span></span><span id="line3049"><span>	if(!ERodnus) ERodnus = 0;
</span></span><span id="line3050"><span>	var TRodnus = parseFloat(data.TRodnus.value);
</span></span><span id="line3051"><span>	if(!TRodnus) TRodnus = 0;
</span></span><span id="line3052"><span>	var TKnox = parseFloat(data.TKnox.value);
</span></span><span id="line3053"><span>	if(!TKnox) TKnox = 0;
</span></span><span id="line3054"><span>	var TAngilsa = parseFloat(data.TAngilsa.value);
</span></span><span id="line3055"><span>	if(!TAngilsa) TAngilsa = 0;
</span></span><span id="line3056"><span>  
</span></span><span id="line3057"><span>	var TFell = parseFloat(data.TFell.value);
</span></span><span id="line3058"><span>	if(!TFell) TFell = 0;
</span></span><span id="line3059"><span>	var TChan = parseFloat(data.TChan.value);
</span></span><span id="line3060"><span>	if(!TChan) TChan = 0;
</span></span><span id="line3061"><span>	var TAtkite = parseFloat(data.TAtkite.value);
</span></span><span id="line3062"><span>	if(!TAtkite) TAtkite = 0;
</span></span><span id="line3063"><span>	var TDarkite = parseFloat(data.TDarkite.value);
</span></span><span id="line3064"><span>	if(!TDarkite) TDarkite = 0;
</span></span><span id="line3065"><span>	var TBalthite = parseFloat(data.TBalthite.value);
</span></span><span id="line3066"><span>	if(!TBalthite) TBalthite = 0;
</span></span><span id="line3067"><span>	var TDethite = parseFloat(data.TDethite.value);
</span></span><span id="line3068"><span>	if(!TDethite) TDethite = 0;
</span></span><span id="line3069"><span>
</span></span><span id="line3070"><span>	var TGoss = parseFloat(data.TGoss.value);
</span></span><span id="line3071"><span>	if(!TGoss) TGoss = 0;
</span></span><span id="line3072"><span>
</span></span><span id="line3073"><span>	var AtkusReq = parseFloat(data.AtkusReq.value);
</span></span><span id="line3074"><span>	if((!AtkusReq &amp;&amp; data.AtkusReq.value != "0")) {
</span></span><span id="line3075"><span>		AtkusReq = 99999;
</span></span><span id="line3076"><span>		data.AtkusReq.value = 99999;
</span></span><span id="line3077"><span>	}
</span></span><span id="line3078"><span>  var AccuracyReq = Math.max(AtkusToAccuracy(AtkusReq), 0);
</span></span><span id="line3079"><span>  
</span></span><span id="line3080"><span>	var LabrysTargets = parseInt(data.LabrysTargets.value);
</span></span><span id="line3081"><span>  if(!LabrysTargets || LabrysTargets </span><span>&lt; </span><span>1) {
</span></span><span id="line3082"><span>    LabrysTargets = 1;
</span></span><span id="line3083"><span>    data.LabrysTargets.value = LabrysTargets.toString();
</span></span><span id="line3084"><span>  }
</span></span><span id="line3085"><span>  
</span></span><span id="line3086"><span>	var TErthron = parseFloat(data.TErthron.value);
</span></span><span id="line3087"><span>	if(!TErthron) TErthron = 0;
</span></span><span id="line3088"><span>	var TErthronNew = parseFloat(data.TErthronNew.value);
</span></span><span id="line3089"><span>	if(!TErthronNew) TErthronNew = 0;
</span></span><span id="line3090"><span>	var TForvyola = parseFloat(data.TForvyola.value);
</span></span><span id="line3091"><span>	if(!TForvyola) TForvyola = 0;
</span></span><span id="line3092"><span>	var TBangus = parseFloat(data.TBangus.value);
</span></span><span id="line3093"><span>	if(!TBangus) TBangus = 0;
</span></span><span id="line3094"><span>	var TFarly = parseFloat(data.TFarly.value);
</span></span><span id="line3095"><span>	if(!TFarly) TFarly = 0;
</span></span><span id="line3096"><span>
</span></span><span id="line3097"><span>	var TToomeria = parseFloat(data.TToomeria.value);
</span></span><span id="line3098"><span>	if(!TToomeria) TToomeria = 0;
</span></span><span id="line3099"><span>	var TSplash = parseFloat(data.TSplash.value);
</span></span><span id="line3100"><span>	if(!TSplash) TSplash = 0;
</span></span><span id="line3101"><span>	var TSplashOld = parseFloat(data.TSplashOld.value);
</span></span><span id="line3102"><span>	if(!TSplashOld) TSplashOld = 0;
</span></span><span id="line3103"><span>	var TRespin = parseFloat(data.TRespin.value);
</span></span><span id="line3104"><span>	if(!TRespin) TRespin = 0;
</span></span><span id="line3105"><span>	var TChampReg = parseFloat(data.TChampReg.value);
</span></span><span id="line3106"><span>	if(!TChampReg) TChampReg = 0;
</span></span><span id="line3107"><span>	var TDuvin = parseFloat(data.TDuvin.value);
</span></span><span id="line3108"><span>	if(!TDuvin) TDuvin = 0;
</span></span><span id="line3109"><span>	var THeen = parseFloat(data.THeen.value);
</span></span><span id="line3110"><span>	if(!THeen) THeen = 0;
</span></span><span id="line3111"><span>
</span></span><span id="line3112"><span>	var TSpiritus = parseFloat(data.TSpiritus.value);
</span></span><span id="line3113"><span>	if(!TSpiritus) TSpiritus = 0;
</span></span><span id="line3114"><span>	var ESpiritus = parseFloat(data.ESpiritus.value);
</span></span><span id="line3115"><span>	if(!ESpiritus) ESpiritus = 0;
</span></span><span id="line3116"><span>	var TTracking = parseFloat(data.TTracking.value);
</span></span><span id="line3117"><span>	if(!TTracking) TTracking = 0;
</span></span><span id="line3118"><span>	var TCrato = parseFloat(data.TCrato.value);
</span></span><span id="line3119"><span>	if(!TCrato) TCrato = 0;
</span></span><span id="line3120"><span>	var TSpleisha = parseFloat(data.TSpleisha.value);
</span></span><span id="line3121"><span>	if(!TSpleisha) TSpleisha = 0;
</span></span><span id="line3122"><span>	var TSpleishaOld = parseFloat(data.TSpleishaOld.value);
</span></span><span id="line3123"><span>	if(!TSpleishaOld) TSpleishaOld = 0;
</span></span><span id="line3124"><span>	var TBB = parseFloat(data.TBB.value);
</span></span><span id="line3125"><span>	if(!TBB) TBB = 0;
</span></span><span id="line3126"><span>
</span></span><span id="line3127"><span>	var TAktur = parseFloat(data.TAktur.value);
</span></span><span id="line3128"><span>	if(!TAktur) TAktur = 0;
</span></span><span id="line3129"><span>	var TAtkia = parseFloat(data.TAtkia.value);
</span></span><span id="line3130"><span>	if(!TAtkia) TAtkia = 0;
</span></span><span id="line3131"><span>	var TCloak = parseFloat(data.TCloak.value);
</span></span><span id="line3132"><span>	if(!TCloak) TCloak = 0;
</span></span><span id="line3133"><span>	var TGirdle = parseFloat(data.TGirdle.value);
</span></span><span id="line3134"><span>	if(!TGirdle) TGirdle = 0;
</span></span><span id="line3135"><span>
</span></span><span id="line3136"><span>	var TCryptus = parseFloat(data.TCryptus.value);
</span></span><span id="line3137"><span>	if(!TCryptus) TCryptus = 0;
</span></span><span id="line3138"><span>	var TDisabla = parseFloat(data.TDisabla.value);
</span></span><span id="line3139"><span>	if(!TDisabla) TDisabla = 0;
</span></span><span id="line3140"><span>	var TDantus = parseFloat(data.TDantus.value);
</span></span><span id="line3141"><span>	if(!TDantus) TDantus = 0;
</span></span><span id="line3142"><span>	var TAneurus = parseFloat(data.TAneurus.value);
</span></span><span id="line3143"><span>	if(!TAneurus) TAneurus = 0;
</span></span><span id="line3144"><span>	var TPosuhm = parseFloat(data.TPosuhm.value);
</span></span><span id="line3145"><span>	if(!TPosuhm) TPosuhm = 0;
</span></span><span id="line3146"><span>	var TAnemia = parseFloat(data.TAnemia.value);
</span></span><span id="line3147"><span>	if(!TAnemia) TAnemia = 0;
</span></span><span id="line3148"><span>	var TStedfustus = parseFloat(data.TStedfustus.value);
</span></span><span id="line3149"><span>	if(!TStedfustus) TStedfustus = 0;
</span></span><span id="line3150"><span>
</span></span><span id="line3151"><span>	
</span></span><span id="line3152"><span>	var Subclass = data.Subclass.value;
</span></span><span id="line3153"><span>	var Race = parseInt(data.Race.value);
</span></span><span id="line3154"><span>	var Weapon = data.Weapon.value;
</span></span><span id="line3155"><span>	var Left = data.Lefthand.value;
</span></span><span id="line3156"><span>	var Shoulder = data.Shoulder.value;
</span></span><span id="line3157"><span>  
</span></span><span id="line3158"><span>  if(((Weapon &gt;= 91 &amp;&amp; Weapon </span><span>&lt;=</span><span> 99) &amp;&amp; Subclass == 2) || (Weapon &gt;= 101 &amp;&amp; Weapon </span><span>&lt;=</span><span> 102) || (Weapon == 103 &amp;&amp; Subclass == 1))
</span></span><span id="line3159"><span>    document.getElementById("AtkusReqOuter").style.display = "";
</span></span><span id="line3160"><span>  else
</span></span><span id="line3161"><span>    document.getElementById("AtkusReqOuter").style.display = "none";
</span></span><span id="line3162"><span>  
</span></span><span id="line3163"><span>  if(Weapon == 110 &amp;&amp; Subclass == 1)
</span></span><span id="line3164"><span>    document.getElementById("LabrysOuter").style.display = "";
</span></span><span id="line3165"><span>  else
</span></span><span id="line3166"><span>    document.getElementById("LabrysOuter").style.display = "none";
</span></span><span id="line3167"><span>  
</span></span><span id="line3168"><span>  if(TChampReg == 11 &amp;&amp; (Race == 1 || Race == 2 || Race == 4)) TChampReg = 10;
</span></span><span id="line3169"><span>  if(TChampReg == 6 &amp;&amp; (Race == 0 || Race == 5)) TChampReg = 5;
</span></span><span id="line3170"><span>  
</span></span><span id="line3171"><span>	var FPS = parseFloat(data.FPS.value);
</span></span><span id="line3172"><span>	BalTick = 1000 / FPS;
</span></span><span id="line3173"><span>	BalTick = Math.floor(BalTick);
</span></span><span id="line3174"><span>
</span></span><span id="line3175"><span>	if(Subclass != 1)	// Not Champion
</span></span><span id="line3176"><span>	{
</span></span><span id="line3177"><span>		//TErthron = 0;
</span></span><span id="line3178"><span>		//TErthronNew = 0;
</span></span><span id="line3179"><span>		//TForvyola = 0;
</span></span><span id="line3180"><span>		TChan = 0;
</span></span><span id="line3181"><span>		TAtkite = 0;
</span></span><span id="line3182"><span>		TDarkite = 0;
</span></span><span id="line3183"><span>		TBalthite = 0;
</span></span><span id="line3184"><span>		TDethite = 0;
</span></span><span id="line3185"><span>		TToomeria = 0;
</span></span><span id="line3186"><span>		TChampReg = 0;
</span></span><span id="line3187"><span>		TCloak = 0;
</span></span><span id="line3188"><span>		TGirdle = 0;
</span></span><span id="line3189"><span>	}
</span></span><span id="line3190"><span>	if(Subclass != 2)	// Not Ranger
</span></span><span id="line3191"><span>	{
</span></span><span id="line3192"><span>		TDuvin = 0;
</span></span><span id="line3193"><span>		TSplash = 0;
</span></span><span id="line3194"><span>		TSplashOld = 0;
</span></span><span id="line3195"><span>		TRespin = 0;
</span></span><span id="line3196"><span>		TTracking = 0;
</span></span><span id="line3197"><span>		//TFarly = 0;
</span></span><span id="line3198"><span>		//TBangus = 0;
</span></span><span id="line3199"><span>	}
</span></span><span id="line3200"><span>	if(Subclass != 3)	// Not Bloodmage
</span></span><span id="line3201"><span>	{
</span></span><span id="line3202"><span>		TCryptus = 0;
</span></span><span id="line3203"><span>		TDisabla = 0;
</span></span><span id="line3204"><span>		TDantus = 0;
</span></span><span id="line3205"><span>		TAneurus = 0;
</span></span><span id="line3206"><span>		TPosuhm = 0;
</span></span><span id="line3207"><span>		//TAnemia = 0;
</span></span><span id="line3208"><span>		//TStedfustus = 0;		
</span></span><span id="line3209"><span>	}
</span></span><span id="line3210"><span>	
</span></span><span id="line3211"><span>  var ChanMult = 1;
</span></span><span id="line3212"><span>  var IsDoubleIte = false;
</span></span><span id="line3213"><span>  if((Left == 101 || Left == 102 || Left == 103 || Left == 104 || Left == 105 || Left == 106 || Left == 107 || Left == 108) &amp;&amp;
</span></span><span id="line3214"><span>     (Shoulder == 101 || Shoulder == 102 || Shoulder == 103 || Shoulder == 104 || Shoulder == 105 || Shoulder == 106 || Shoulder == 107 || Shoulder == 108)) {
</span></span><span id="line3215"><span>    ChanMult = 0.5;
</span></span><span id="line3216"><span>    IsDoubleIte = true;
</span></span><span id="line3217"><span>    
</span></span><span id="line3218"><span>    if(Left == 105)
</span></span><span id="line3219"><span>      Left = 101;
</span></span><span id="line3220"><span>    else if(Left == 106)
</span></span><span id="line3221"><span>      Left = 102;
</span></span><span id="line3222"><span>    else if(Left == 107)
</span></span><span id="line3223"><span>      Left = 103;
</span></span><span id="line3224"><span>    else if(Left == 108)
</span></span><span id="line3225"><span>      Left = 104;
</span></span><span id="line3226"><span>  }
</span></span><span id="line3227"><span>  
</span></span><span id="line3228"><span>	// Calculate final stats.
</span></span><span id="line3229"><span>
</span></span><span id="line3230"><span>	// Channel Master and Fell
</span></span><span id="line3231"><span>	var Chan = TChan;
</span></span><span id="line3232"><span>	Chan = Chan + Math.floor(TAtkite*5/4) + Math.floor(TDarkite*5/4) + Math.floor(TBalthite*5/4) + Math.floor(TDethite*5/4);
</span></span><span id="line3233"><span>	data.Chan.value = Chan;
</span></span><span id="line3234"><span>  
</span></span><span id="line3235"><span>	var EFell = TFell + 10;
</span></span><span id="line3236"><span>	AtkiteStr = Chan;
</span></span><span id="line3237"><span>	DarkiteStr = Chan;
</span></span><span id="line3238"><span>	BalthiteStr = Chan;
</span></span><span id="line3239"><span>	DethiteStr = Chan;
</span></span><span id="line3240"><span>	var AtkiteAccuracy = CMToAccuracy(AtkiteStr);
</span></span><span id="line3241"><span>	var DarkiteDamage = CMToAvgDamage(DarkiteStr);
</span></span><span id="line3242"><span>	var BalthiteBalance = CMToBalance(BalthiteStr);
</span></span><span id="line3243"><span>	var DethiteDefense = CMToDefense(DethiteStr);
</span></span><span id="line3244"><span>	data.Atkite.value = (Math.round(AccuracyToAtkus(Math.floor(AtkiteAccuracy * ChanMult)) * 1000) / 1000) + " Atkus";
</span></span><span id="line3245"><span>	data.Darkite.value = (Math.round(DamageToDarkus(Math.floor(DarkiteDamage * ChanMult)) * 1000) / 1000) + " Darkus";
</span></span><span id="line3246"><span>	data.Balthite.value = (Math.round(BalanceToBalthus(Math.floor(BalthiteBalance * ChanMult)) * 1000) / 1000) + " Balthus";
</span></span><span id="line3247"><span>	data.Dethite.value = (Math.round(DefenseToDetha(Math.floor(DethiteDefense * ChanMult)) * 1000) / 1000) + " Detha";
</span></span><span id="line3248"><span>	AtkiteAccuracy = CMToAccuracy(IteBoostStrength(Chan));
</span></span><span id="line3249"><span>	DarkiteDamage = CMToAvgDamage(IteBoostStrength(Chan));
</span></span><span id="line3250"><span>	BalthiteBalance = CMToBalance(IteBoostStrength(Chan));
</span></span><span id="line3251"><span>	DethiteDefense = CMToDefense(IteBoostStrength(Chan));
</span></span><span id="line3252"><span>	data.BAtkite.value = "+" + (Math.round(AccuracyToAtkus(AtkiteAccuracy) * 1000) / 1000) + " Atkus Boost";
</span></span><span id="line3253"><span>	data.BDarkite.value = "+" + (Math.round(DamageToDarkus(DarkiteDamage) * 1000) / 1000) + " Darkus Boost";
</span></span><span id="line3254"><span>	data.BBalthite.value = "+" + (Math.round(BalanceToBalthus(BalthiteBalance) * 1000) / 1000) + " Balthus Boost";
</span></span><span id="line3255"><span>	data.BDethite.value = "+" + (Math.round(DefenseToDetha(DethiteDefense) * 1000) / 1000) + " Detha Boost";
</span></span><span id="line3256"><span>  
</span></span><span id="line3257"><span>  // Duvin
</span></span><span id="line3258"><span>	var Beastlore = TDuvin + (TGoss / 4);
</span></span><span id="line3259"><span>	data.Duvin.value = Beastlore;
</span></span><span id="line3260"><span>
</span></span><span id="line3261"><span>	var SEvus = 0;
</span></span><span id="line3262"><span>	var SSwengus = 0;
</span></span><span id="line3263"><span>
</span></span><span id="line3264"><span>	// Atkus
</span></span><span id="line3265"><span>	var Accuracy = EAtkus + TAtkus;
</span></span><span id="line3266"><span>	Accuracy = AtkusToAccuracy(Accuracy);
</span></span><span id="line3267"><span>	Accuracy = Accuracy + TEvus*4;
</span></span><span id="line3268"><span>	Accuracy = Accuracy + TBodrus*4;
</span></span><span id="line3269"><span>	Accuracy = Accuracy + THardia*4;
</span></span><span id="line3270"><span>	Accuracy = Accuracy - TKnox*4;
</span></span><span id="line3271"><span>	Accuracy = Accuracy - TAngilsa*4;
</span></span><span id="line3272"><span>	Accuracy = Accuracy + TBangus*2;
</span></span><span id="line3273"><span>	Accuracy = Accuracy + TErthron*3;
</span></span><span id="line3274"><span>	Accuracy = Accuracy + TErthronNew*2;
</span></span><span id="line3275"><span>	Accuracy = Accuracy + AkturToAccuracy(TAktur);
</span></span><span id="line3276"><span>	Accuracy = Accuracy + TAtkia*13;
</span></span><span id="line3277"><span>	var SEvus = Accuracy / 4;
</span></span><span id="line3278"><span>	var SBodrus = Accuracy / 4;
</span></span><span id="line3279"><span>	var SHardia = Accuracy / 4;
</span></span><span id="line3280"><span>	var SErthron = Accuracy / 3;
</span></span><span id="line3281"><span>	var SErthronNew = Accuracy / 2;
</span></span><span id="line3282"><span>	var SBangus = Accuracy / 2;
</span></span><span id="line3283"><span>	var SAtkia = Accuracy / 13;
</span></span><span id="line3284"><span>	if(Left == 101 || Left == 105) Accuracy = Accuracy + CMToAccuracy(Math.floor(AtkiteStr * ChanMult));
</span></span><span id="line3285"><span>	if(Left == 105) Accuracy = Accuracy + CMToAccuracy(IteBoostStrength(Chan));
</span></span><span id="line3286"><span>	if(Shoulder == 101 || Shoulder == 105) Accuracy = Accuracy + CMToAccuracy(Math.floor(AtkiteStr * ChanMult));
</span></span><span id="line3287"><span>	if(Shoulder == 105) Accuracy = Accuracy + CMToAccuracy(IteBoostStrength(Chan));
</span></span><span id="line3288"><span>  
</span></span><span id="line3289"><span>	// Atkus conservation weapons
</span></span><span id="line3290"><span>	var GossAccuracy = 0;
</span></span><span id="line3291"><span>	var GossDamage = 0;
</span></span><span id="line3292"><span>  var FellAccuracy = 0;
</span></span><span id="line3293"><span>  var TellAccuracy = 0;
</span></span><span id="line3294"><span>	if(Weapon &gt;= 93 &amp;&amp; Weapon </span><span>&lt; </span><span>98 &amp;&amp; Subclass == 2) {
</span></span><span id="line3295"><span>    // Goss Family Bonus
</span></span><span id="line3296"><span>    
</span></span><span id="line3297"><span>		var Families = Weapon - 92;
</span></span><span id="line3298"><span>		GossAccuracy = 32*TGoss;
</span></span><span id="line3299"><span>		GossDamage = 12*TGoss;
</span></span><span id="line3300"><span>    
</span></span><span id="line3301"><span>		GossAccuracy = Math.floor(GossAccuracy * Families / 10);
</span></span><span id="line3302"><span>		GossDamage = Math.floor(GossDamage * Families / 10);
</span></span><span id="line3303"><span>    
</span></span><span id="line3304"><span>		//GossAccuracy = GossAccuracy * AtkusReq / 100;
</span></span><span id="line3305"><span>    GossAccuracy = Math.min(GossAccuracy, Math.max(AccuracyReq - Accuracy, 0));
</span></span><span id="line3306"><span>	}
</span></span><span id="line3307"><span>	else if(Weapon == 98 &amp;&amp; Subclass == 2) {
</span></span><span id="line3308"><span>    // Goss Studied bonus
</span></span><span id="line3309"><span>    
</span></span><span id="line3310"><span>		GossAccuracy = 32*TGoss;
</span></span><span id="line3311"><span>		GossDamage = 12*TGoss;
</span></span><span id="line3312"><span>    
</span></span><span id="line3313"><span>		//GossAccuracy = GossAccuracy * AtkusReq / 100;
</span></span><span id="line3314"><span>    GossAccuracy = Math.min(GossAccuracy, Math.max(AccuracyReq - Accuracy, 0));
</span></span><span id="line3315"><span>	}
</span></span><span id="line3316"><span>	else if(Weapon == 101) {
</span></span><span id="line3317"><span>    // Fell Angled
</span></span><span id="line3318"><span>    
</span></span><span id="line3319"><span>    FellAccuracy = 16*EFell;
</span></span><span id="line3320"><span>    
</span></span><span id="line3321"><span>    FellAccuracy = Math.min(FellAccuracy, Math.max(AccuracyReq - Accuracy, 0));
</span></span><span id="line3322"><span>  }
</span></span><span id="line3323"><span>	else if(Weapon == 102) {
</span></span><span id="line3324"><span>    // Fell Backstab
</span></span><span id="line3325"><span>    
</span></span><span id="line3326"><span>    FellAccuracy = 32*EFell;
</span></span><span id="line3327"><span>    
</span></span><span id="line3328"><span>    FellAccuracy = Math.min(FellAccuracy, Math.max(AccuracyReq - Accuracy, 0));
</span></span><span id="line3329"><span>  }
</span></span><span id="line3330"><span>  else if(Weapon == 103 &amp;&amp; Subclass == 1) {
</span></span><span id="line3331"><span>    // Tell
</span></span><span id="line3332"><span>    
</span></span><span id="line3333"><span>    TellAccuracy = -32*TFell;
</span></span><span id="line3334"><span>    
</span></span><span id="line3335"><span>    TellAccuracy = Math.max(TellAccuracy, Math.min(AccuracyReq - Accuracy, 0));
</span></span><span id="line3336"><span>  }
</span></span><span id="line3337"><span>  Accuracy = Accuracy + GossAccuracy;
</span></span><span id="line3338"><span>  Accuracy = Accuracy + FellAccuracy;
</span></span><span id="line3339"><span>  Accuracy = Accuracy + TellAccuracy;
</span></span><span id="line3340"><span>  
</span></span><span id="line3341"><span>	var ShowVal = Accuracy;
</span></span><span id="line3342"><span>	Accuracy = Accuracy + races[Race][0];
</span></span><span id="line3343"><span>	Accuracy = Accuracy + weapons[Weapon][0];
</span></span><span id="line3344"><span>	Accuracy = Accuracy + lefts[Left][0];
</span></span><span id="line3345"><span>	Accuracy = Accuracy + shoulders[Shoulder][0];
</span></span><span id="line3346"><span>  AccuracyReq = AccuracyReq + races[Race][0];
</span></span><span id="line3347"><span>  AccuracyReq = AccuracyReq + weapons[Weapon][0];
</span></span><span id="line3348"><span>  AccuracyReq = AccuracyReq + lefts[Left][0];
</span></span><span id="line3349"><span>  AccuracyReq = AccuracyReq + shoulders[Shoulder][0];
</span></span><span id="line3350"><span>  
</span></span><span id="line3351"><span>  var AccuracyBuff = 0;
</span></span><span id="line3352"><span>  if(Weapon == 89) {
</span></span><span id="line3353"><span>    // Ethereal Sword
</span></span><span id="line3354"><span>    
</span></span><span id="line3355"><span>    AccuracyBuff = 0.2 * (Accuracy - races[0][0]);
</span></span><span id="line3356"><span>  }
</span></span><span id="line3357"><span>  if(AccuracyBuff != 0) {
</span></span><span id="line3358"><span>    Accuracy += AccuracyBuff;
</span></span><span id="line3359"><span>    ShowVal += AccuracyBuff;
</span></span><span id="line3360"><span>  }
</span></span><span id="line3361"><span>  
</span></span><span id="line3362"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = Accuracy;
</span></span><span id="line3363"><span>	data.Atkus.value = AccuracyToAtkus(ShowVal);
</span></span><span id="line3364"><span>	data.Aktur.value = AccuracyToAktur(ShowVal);
</span></span><span id="line3365"><span>	
</span></span><span id="line3366"><span>	GraphStatAcc = Accuracy;
</span></span><span id="line3367"><span>  GraphStatAccMin = Accuracy;
</span></span><span id="line3368"><span>  GraphStatAccMax = -1;
</span></span><span id="line3369"><span>  if(Weapon == 103 &amp;&amp; Subclass == 1) {
</span></span><span id="line3370"><span>    GraphStatAcc = Accuracy - TellAccuracy;
</span></span><span id="line3371"><span>    GraphStatAccMin = GraphStatAcc - (32*TFell);
</span></span><span id="line3372"><span>    GraphStatAccMax = AccuracyReq;
</span></span><span id="line3373"><span>  }
</span></span><span id="line3374"><span>  if(Weapon == 101 || Weapon == 102) {
</span></span><span id="line3375"><span>    GraphStatAccMin = Accuracy - FellAccuracy;
</span></span><span id="line3376"><span>    GraphStatAccMax = Math.max(Accuracy, AccuracyReq);
</span></span><span id="line3377"><span>  }
</span></span><span id="line3378"><span>  else if(Weapon &gt;= 93 &amp;&amp; Weapon </span><span>&lt;=</span><span> 98 &amp;&amp; Subclass == 2) {
</span></span><span id="line3379"><span>    GraphStatAccMin = Accuracy - GossAccuracy;
</span></span><span id="line3380"><span>    GraphStatAccMax = Math.max(Accuracy, AccuracyReq);
</span></span><span id="line3381"><span>	}
</span></span><span id="line3382"><span>  
</span></span><span id="line3383"><span>	var AccuracyNoIte = Accuracy - shoulders[Shoulder][0] - TellAccuracy;
</span></span><span id="line3384"><span>	if((Left == 101 || Left == 105) &amp;&amp; !IsDoubleIte) AccuracyNoIte = AccuracyNoIte - lefts[Left][0];
</span></span><span id="line3385"><span>  if((Left == 101 || Left == 105) &amp;&amp; !IsDoubleIte) AccuracyNoIte = AccuracyNoIte - CMToAccuracy(Math.floor(AtkiteStr * ChanMult));
</span></span><span id="line3386"><span>	if(Left == 105 &amp;&amp; !IsDoubleIte) AccuracyNoIte = AccuracyNoIte - CMToAccuracy(IteBoostStrength(Chan));
</span></span><span id="line3387"><span>	if(Shoulder == 101 || Shoulder == 105) AccuracyNoIte = AccuracyNoIte - CMToAccuracy(Math.floor(AtkiteStr * ChanMult));
</span></span><span id="line3388"><span>	if(Shoulder == 105) AccuracyNoIte = AccuracyNoIte - CMToAccuracy(IteBoostStrength(Chan));
</span></span><span id="line3389"><span>
</span></span><span id="line3390"><span>	// Darkus
</span></span><span id="line3391"><span>  var ShowDmgType;
</span></span><span id="line3392"><span>	var MaxDamage = EDarkus + TDarkus;
</span></span><span id="line3393"><span>	MaxDamage = DarkusToDamage(MaxDamage);
</span></span><span id="line3394"><span>	MaxDamage = MaxDamage + TEvus*1;
</span></span><span id="line3395"><span>	MaxDamage = MaxDamage + TBodrus*1;
</span></span><span id="line3396"><span>	MaxDamage = MaxDamage + TKnox*11;
</span></span><span id="line3397"><span>	MaxDamage = MaxDamage - TAngilsa*1;
</span></span><span id="line3398"><span>	MaxDamage = MaxDamage + TErthron*1;
</span></span><span id="line3399"><span>	MaxDamage = MaxDamage + TErthronNew*1;
</span></span><span id="line3400"><span>	MaxDamage = MaxDamage + TAtkia*3;
</span></span><span id="line3401"><span>	MaxDamage = MaxDamage + DarkturToDamage(TDarktur);
</span></span><span id="line3402"><span>	var MinDamage = MaxDamage;
</span></span><span id="line3403"><span>	MaxDamage = MaxDamage + THardia*1;
</span></span><span id="line3404"><span>	MaxDamage = MaxDamage + TBangus*3;
</span></span><span id="line3405"><span>	MinDamage = MinDamage + TBangus*2;
</span></span><span id="line3406"><span>	var SKnox = MaxDamage / 11;
</span></span><span id="line3407"><span>	if(MinDamage / 11 </span><span>&lt; </span><span>SKnox) SKnox = MinDamage / 11;
</span></span><span id="line3408"><span>	if(MaxDamage </span><span>&lt; </span><span>SEvus) SEvus = MaxDamage;
</span></span><span id="line3409"><span>	if(MinDamage </span><span>&lt; </span><span>SEvus) SEvus = MinDamage;
</span></span><span id="line3410"><span>	if(MaxDamage </span><span>&lt; </span><span>SBodrus) SBodrus = MaxDamage;
</span></span><span id="line3411"><span>	if(MinDamage </span><span>&lt; </span><span>SBodrus) SBodrus = MinDamage;
</span></span><span id="line3412"><span>	if(MaxDamage </span><span>&lt; </span><span>SHardia) SHardia = MaxDamage;
</span></span><span id="line3413"><span>	if(MaxDamage / 3 </span><span>&lt; </span><span>SBangus) SBangus = MaxDamage / 3;
</span></span><span id="line3414"><span>	if(MinDamage / 2 </span><span>&lt; </span><span>SBangus) SBangus = MinDamage / 2;
</span></span><span id="line3415"><span>	if(MaxDamage </span><span>&lt; </span><span>SErthron) SErthron = MaxDamage;
</span></span><span id="line3416"><span>	if(MinDamage </span><span>&lt; </span><span>SErthron) SErthron = MinDamage;
</span></span><span id="line3417"><span>	if(MaxDamage </span><span>&lt; </span><span>SErthronNew) SErthronNew = MaxDamage;
</span></span><span id="line3418"><span>	if(MinDamage </span><span>&lt; </span><span>SErthronNew) SErthronNew = MinDamage;
</span></span><span id="line3419"><span>	if(MaxDamage / 3 </span><span>&lt; </span><span>SAtkia) SAtkia = MaxDamage / 3;
</span></span><span id="line3420"><span>	if(MinDamage / 3 </span><span>&lt; </span><span>SAtkia) SAtkia = MinDamage / 3;
</span></span><span id="line3421"><span>	if(Weapon == 101)	MaxDamage = MaxDamage + 6*EFell;
</span></span><span id="line3422"><span>	if(Weapon == 101)	MinDamage = MinDamage + 6*EFell;
</span></span><span id="line3423"><span>	if(Weapon == 102)	MaxDamage = MaxDamage + 12*EFell;
</span></span><span id="line3424"><span>	if(Weapon == 102)	MinDamage = MinDamage + 12*EFell;
</span></span><span id="line3425"><span>	if(Left == 102 || Left == 106) MaxDamage = MaxDamage + CMToMaxDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3426"><span>	if(Left == 102 || Left == 106) MinDamage = MinDamage + CMToMinDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3427"><span>	if(Left == 106) MaxDamage = MaxDamage + CMToMaxDamage(IteBoostStrength(Chan));
</span></span><span id="line3428"><span>	if(Left == 106) MinDamage = MinDamage + CMToMinDamage(IteBoostStrength(Chan));
</span></span><span id="line3429"><span>	if(Shoulder == 102 || Shoulder == 106) MaxDamage = MaxDamage + CMToMaxDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3430"><span>	if(Shoulder == 102 || Shoulder == 106) MinDamage = MinDamage + CMToMinDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3431"><span>	if(Shoulder == 106) MaxDamage = MaxDamage + CMToMaxDamage(IteBoostStrength(Chan));
</span></span><span id="line3432"><span>	if(Shoulder == 106) MinDamage = MinDamage + CMToMinDamage(IteBoostStrength(Chan));
</span></span><span id="line3433"><span>	MaxDamage = MaxDamage + GossDamage;
</span></span><span id="line3434"><span>	MinDamage = MinDamage + GossDamage;
</span></span><span id="line3435"><span>	if(MinDamage </span><span>&lt;=</span><span> MaxDamage) {
</span></span><span id="line3436"><span>    ShowVal = MinDamage;
</span></span><span id="line3437"><span>    ShowDmgType = "MIN";
</span></span><span id="line3438"><span>  }
</span></span><span id="line3439"><span>  else {
</span></span><span id="line3440"><span>	  ShowVal = MaxDamage;
</span></span><span id="line3441"><span>    ShowDmgType = "MAX";
</span></span><span id="line3442"><span>  }
</span></span><span id="line3443"><span>	var ShowValMin = MinDamage;
</span></span><span id="line3444"><span>	var ShowValMax = MaxDamage;
</span></span><span id="line3445"><span>	var ShowValAvg = (MinDamage + MaxDamage*3) / 4;
</span></span><span id="line3446"><span>	MinDamage = MinDamage + races[Race][1];
</span></span><span id="line3447"><span>	MaxDamage = MaxDamage + races[Race][2];
</span></span><span id="line3448"><span>	MinDamage = MinDamage + weapons[Weapon][1];
</span></span><span id="line3449"><span>	MaxDamage = MaxDamage + weapons[Weapon][2];
</span></span><span id="line3450"><span>	MinDamage = MinDamage + lefts[Left][1];
</span></span><span id="line3451"><span>	MaxDamage = MaxDamage + lefts[Left][2];
</span></span><span id="line3452"><span>	MinDamage = MinDamage + shoulders[Shoulder][1];
</span></span><span id="line3453"><span>	MaxDamage = MaxDamage + shoulders[Shoulder][2];
</span></span><span id="line3454"><span>	
</span></span><span id="line3455"><span>	var MinDamageNoIte = MinDamage - shoulders[Shoulder][1];
</span></span><span id="line3456"><span>	var MaxDamageNoIte = MaxDamage - shoulders[Shoulder][1];
</span></span><span id="line3457"><span>	if((Left == 102 || Left == 106) &amp;&amp; !IsDoubleIte) MinDamageNoIte = MinDamageNoIte - lefts[Left][1];
</span></span><span id="line3458"><span>	if((Left == 102 || Left == 106) &amp;&amp; !IsDoubleIte) MaxDamageNoIte = MaxDamageNoIte - lefts[Left][2];
</span></span><span id="line3459"><span>	if((Left == 102 || Left == 106) &amp;&amp; !IsDoubleIte) MinDamageNoIte = MinDamageNoIte - CMToMinDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3460"><span>	if((Left == 102 || Left == 106) &amp;&amp; !IsDoubleIte) MaxDamageNoIte = MaxDamageNoIte - CMToMaxDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3461"><span>	if(Left == 106 &amp;&amp; !IsDoubleIte) MinDamageNoIte = MinDamageNoIte - CMToMinDamage(IteBoostStrength(Chan));
</span></span><span id="line3462"><span>	if(Left == 106 &amp;&amp; !IsDoubleIte) MaxDamageNoIte = MaxDamageNoIte - CMToMaxDamage(IteBoostStrength(Chan));
</span></span><span id="line3463"><span>	if(Shoulder == 102 || Shoulder == 106) MinDamageNoIte = MinDamageNoIte - CMToMinDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3464"><span>	if(Shoulder == 102 || Shoulder == 106) MaxDamageNoIte = MaxDamageNoIte - CMToMaxDamage(Math.floor(DarkiteStr * ChanMult));
</span></span><span id="line3465"><span>	if(Shoulder == 106) MinDamageNoIte = MinDamageNoIte - CMToMinDamage(IteBoostStrength(Chan));
</span></span><span id="line3466"><span>	if(Shoulder == 106) MaxDamageNoIte = MaxDamageNoIte - CMToMaxDamage(IteBoostStrength(Chan));
</span></span><span id="line3467"><span>	
</span></span><span id="line3468"><span>  var MinDamageBuff = 0;
</span></span><span id="line3469"><span>  var MaxDamageBuff = 0;
</span></span><span id="line3470"><span>  if(Weapon == 89) {
</span></span><span id="line3471"><span>    // Ethereal Sword
</span></span><span id="line3472"><span>    
</span></span><span id="line3473"><span>    MinDamageBuff = 0.15 * (MinDamage - races[0][1]);
</span></span><span id="line3474"><span>    MaxDamageBuff = 0.15 * (MaxDamage - races[0][2]);
</span></span><span id="line3475"><span>  }
</span></span><span id="line3476"><span>  if(MinDamageBuff != 0) {
</span></span><span id="line3477"><span>    MinDamage += MinDamageBuff;
</span></span><span id="line3478"><span>    ShowValMin += MinDamageBuff;
</span></span><span id="line3479"><span>    ShowValAvg += MinDamageBuff / 4;
</span></span><span id="line3480"><span>    
</span></span><span id="line3481"><span>    if(ShowDmgType == "MIN")
</span></span><span id="line3482"><span>      ShowVal += MinDamageBuff;
</span></span><span id="line3483"><span>  }
</span></span><span id="line3484"><span>  if(MaxDamageBuff != 0) {
</span></span><span id="line3485"><span>    MaxDamage += MaxDamageBuff;
</span></span><span id="line3486"><span>    ShowValMax += MaxDamageBuff;
</span></span><span id="line3487"><span>    ShowValAvg += 3 * MaxDamageBuff / 4;
</span></span><span id="line3488"><span>    
</span></span><span id="line3489"><span>    if(ShowDmgType == "MAX")
</span></span><span id="line3490"><span>      ShowVal += MaxDamageBuff;
</span></span><span id="line3491"><span>  }
</span></span><span id="line3492"><span>  
</span></span><span id="line3493"><span>  MinDamageBuff = 0;
</span></span><span id="line3494"><span>  MaxDamageBuff = 0;
</span></span><span id="line3495"><span>  if(Weapon == 89) {
</span></span><span id="line3496"><span>    // Ethereal Sword
</span></span><span id="line3497"><span>    
</span></span><span id="line3498"><span>    MinDamageBuff = 0.15 * (MinDamageNoIte - races[0][1]);
</span></span><span id="line3499"><span>    MaxDamageBuff = 0.15 * (MaxDamageNoIte - races[0][2]);
</span></span><span id="line3500"><span>  }
</span></span><span id="line3501"><span>  if(MinDamageBuff != 0) {
</span></span><span id="line3502"><span>    MinDamageNoIte += MinDamageBuff;
</span></span><span id="line3503"><span>  }
</span></span><span id="line3504"><span>  if(MaxDamageBuff != 0) {
</span></span><span id="line3505"><span>    MaxDamageNoIte += MaxDamageBuff;
</span></span><span id="line3506"><span>  }
</span></span><span id="line3507"><span>  
</span></span><span id="line3508"><span>  var LabrysDamage;
</span></span><span id="line3509"><span>  if(Weapon == 110 &amp;&amp; Subclass == 1) {
</span></span><span id="line3510"><span>    // Labrys
</span></span><span id="line3511"><span>    
</span></span><span id="line3512"><span>    LabrysDamage = GetLabrysDamage(MinDamage, MaxDamage, TFell, LabrysTargets);
</span></span><span id="line3513"><span>    
</span></span><span id="line3514"><span>    ShowValMin = LabrysDamage[0] - (MinDamage - ShowValMin);
</span></span><span id="line3515"><span>    ShowValMax = LabrysDamage[1] - (MaxDamage - ShowValMax);
</span></span><span id="line3516"><span>    ShowValAvg = (ShowValMin + ShowValMax*3) / 4;
</span></span><span id="line3517"><span>    
</span></span><span id="line3518"><span>    /*
</span></span><span id="line3519"><span>    if(MinDamage </span><span>&lt;=</span><span> MaxDamage) {
</span></span><span id="line3520"><span>      ShowVal = ShowValMin;
</span></span><span id="line3521"><span>      ShowDmgType = "MIN";
</span></span><span id="line3522"><span>    }
</span></span><span id="line3523"><span>    else {
</span></span><span id="line3524"><span>      ShowVal = ShowValMax;
</span></span><span id="line3525"><span>      ShowDmgType = "MAX";
</span></span><span id="line3526"><span>    }
</span></span><span id="line3527"><span>    */
</span></span><span id="line3528"><span>    ShowVal = ShowValAvg;
</span></span><span id="line3529"><span>    ShowDmgType = "AVG";
</span></span><span id="line3530"><span>  }
</span></span><span id="line3531"><span>  
</span></span><span id="line3532"><span>	GraphStatMinDmg = MinDamage;
</span></span><span id="line3533"><span>	GraphStatMaxDmg = MaxDamage;
</span></span><span id="line3534"><span>  GraphStatFell = TFell;
</span></span><span id="line3535"><span>	
</span></span><span id="line3536"><span>  if(Weapon == 110 &amp;&amp; Subclass == 1) {
</span></span><span id="line3537"><span>    HitMin = LabrysDamage[0];
</span></span><span id="line3538"><span>    HitMax = LabrysDamage[1];
</span></span><span id="line3539"><span>  }
</span></span><span id="line3540"><span>  else {
</span></span><span id="line3541"><span>    HitMin = MinDamage;
</span></span><span id="line3542"><span>    HitMax = MaxDamage;
</span></span><span id="line3543"><span>  }
</span></span><span id="line3544"><span>	HitMax = HitMax * 3;
</span></span><span id="line3545"><span>	if(HitMin </span><span>&lt; </span><span>0) HitMin = 0;
</span></span><span id="line3546"><span>	HitMin = HitMin + 100;
</span></span><span id="line3547"><span>	if(HitMax </span><span>&lt; </span><span>0) HitMax = 0;
</span></span><span id="line3548"><span>	HitMax = HitMax + 100;
</span></span><span id="line3549"><span>	if(HitMax </span><span>&lt; </span><span>HitMin) HitMax = HitMin;
</span></span><span id="line3550"><span>	HitAvg = (HitMin + HitMax) / 2;
</span></span><span id="line3551"><span>  
</span></span><span id="line3552"><span>  var UMinDamage, UMaxDamage;
</span></span><span id="line3553"><span>  if(Weapon == 110 &amp;&amp; Subclass == 1) {
</span></span><span id="line3554"><span>    UMinDamage = LabrysDamage[0];
</span></span><span id="line3555"><span>    UMaxDamage = LabrysDamage[1];
</span></span><span id="line3556"><span>  }
</span></span><span id="line3557"><span>  else {
</span></span><span id="line3558"><span>    UMinDamage = MinDamage;
</span></span><span id="line3559"><span>    UMaxDamage = MaxDamage;
</span></span><span id="line3560"><span>  }
</span></span><span id="line3561"><span>	if(UMinDamage </span><span>&lt; </span><span>0) UMinDamage = 0;
</span></span><span id="line3562"><span>	if(UMaxDamage </span><span>&lt; </span><span>0) UMaxDamage = 0;
</span></span><span id="line3563"><span>	if(UMaxDamage </span><span>&lt; </span><span>UMinDamage / 3) UMaxDamage = UMinDamage / 3;
</span></span><span id="line3564"><span>
</span></span><span id="line3565"><span>	if(data.toggleShowBonusesInput.value == "Y")
</span></span><span id="line3566"><span>	{
</span></span><span id="line3567"><span>    if(Weapon == 110 &amp;&amp; Subclass == 1) {
</span></span><span id="line3568"><span>      ShowVal = LabrysDamage[1] + (100/3);
</span></span><span id="line3569"><span>      if(LabrysDamage[0] </span><span>&lt; </span><span>LabrysDamage[1]) ShowVal = LabrysDamage[0] + 100;
</span></span><span id="line3570"><span>      ShowValMin = LabrysDamage[0] + 100;
</span></span><span id="line3571"><span>      ShowValMax = LabrysDamage[1] + 100/3;
</span></span><span id="line3572"><span>    }
</span></span><span id="line3573"><span>    else {
</span></span><span id="line3574"><span>      ShowVal = MaxDamage + (100/3);
</span></span><span id="line3575"><span>      if(MinDamage </span><span>&lt; </span><span>MaxDamage) ShowVal = MinDamage + 100;
</span></span><span id="line3576"><span>      ShowValMin = MinDamage + 100;
</span></span><span id="line3577"><span>      ShowValMax = MaxDamage + 100/3;
</span></span><span id="line3578"><span>    }
</span></span><span id="line3579"><span>		ShowValAvg = (ShowValMin + ShowValMax*3) / 4;
</span></span><span id="line3580"><span>	}
</span></span><span id="line3581"><span>	data.Darkus.value = DamageToDarkus(ShowVal);
</span></span><span id="line3582"><span>	data.Darktur.value = DamageToDarktur(ShowVal);
</span></span><span id="line3583"><span>	data.MinDarkus.value = DamageToDarkus(ShowValMin);
</span></span><span id="line3584"><span>	data.MaxDarkus.value = DamageToDarkus(ShowValMax);
</span></span><span id="line3585"><span>	data.AvgDarkus.value = DamageToDarkus(ShowValAvg);
</span></span><span id="line3586"><span>
</span></span><span id="line3587"><span>	// Balthus
</span></span><span id="line3588"><span>	var Balance = EBalthus + TBalthus;
</span></span><span id="line3589"><span>	Balance = BalthusToBalance(Balance);
</span></span><span id="line3590"><span>	Balance = Balance + TEvus*18;
</span></span><span id="line3591"><span>	Balance = Balance + TBodrus*9;
</span></span><span id="line3592"><span>	Balance = Balance + THardia*9;
</span></span><span id="line3593"><span>	Balance = Balance + TAtkus*15;
</span></span><span id="line3594"><span>	Balance = Balance + TDarkus*18;
</span></span><span id="line3595"><span>	Balance = Balance + TSwengus*30;
</span></span><span id="line3596"><span>	Balance = Balance + TKnox*18;
</span></span><span id="line3597"><span>	Balance = Balance - TAngilsa*18;
</span></span><span id="line3598"><span>	Balance = Balance + TBangus*21;
</span></span><span id="line3599"><span>	Balance = Balance + TErthron*15;
</span></span><span id="line3600"><span>	Balance = Balance + TErthronNew*15;
</span></span><span id="line3601"><span>	if(Balance / 18 </span><span>&lt; </span><span>SEvus) SEvus = Balance / 18;
</span></span><span id="line3602"><span>	if(Balance / 15 </span><span>&lt; </span><span>SErthron) SErthron = Balance / 15;
</span></span><span id="line3603"><span>	if(Balance / 15 </span><span>&lt; </span><span>SErthronNew) SErthronNew = Balance / 15;
</span></span><span id="line3604"><span>	if(Balance / 9 </span><span>&lt; </span><span>SBodrus) SBodrus = Balance / 9;
</span></span><span id="line3605"><span>	if(Balance / 9 </span><span>&lt; </span><span>SHardia) SHardia = Balance / 9;
</span></span><span id="line3606"><span>	if(Balance / 21 </span><span>&lt; </span><span>SBangus) SBangus = Balance / 21;
</span></span><span id="line3607"><span>	SSwengus = Balance / 30;
</span></span><span id="line3608"><span>	if(Left == 103 || Left == 107) Balance = Balance + CMToBalance(Math.floor(BalthiteStr * ChanMult));
</span></span><span id="line3609"><span>	if(Left == 107) Balance = Balance + CMToBalance(IteBoostStrength(Chan));
</span></span><span id="line3610"><span>	if(Shoulder == 103 || Shoulder == 107) Balance = Balance + CMToBalance(Math.floor(BalthiteStr * ChanMult));
</span></span><span id="line3611"><span>	if(Shoulder == 107) Balance = Balance + CMToBalance(IteBoostStrength(Chan));
</span></span><span id="line3612"><span>	ShowVal = Balance;
</span></span><span id="line3613"><span>	Balance = Balance + races[Race][3];
</span></span><span id="line3614"><span>	Balance = Balance + weapons[Weapon][3];
</span></span><span id="line3615"><span>	Balance = Balance + lefts[Left][3];
</span></span><span id="line3616"><span>	Balance = Balance + shoulders[Shoulder][3];
</span></span><span id="line3617"><span>  
</span></span><span id="line3618"><span>  var BalanceBuff = 0;
</span></span><span id="line3619"><span>  if(Weapon == 89) {
</span></span><span id="line3620"><span>    // Ethereal Sword
</span></span><span id="line3621"><span>    
</span></span><span id="line3622"><span>    BalanceBuff = 0.1 * (Balance - races[0][3]);
</span></span><span id="line3623"><span>  }
</span></span><span id="line3624"><span>  if(BalanceBuff != 0) {
</span></span><span id="line3625"><span>    Balance += BalanceBuff;
</span></span><span id="line3626"><span>    ShowVal += BalanceBuff;
</span></span><span id="line3627"><span>  }
</span></span><span id="line3628"><span>  
</span></span><span id="line3629"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = Balance;
</span></span><span id="line3630"><span>  var ShowValBalance = ShowVal;
</span></span><span id="line3631"><span>	data.Balthus.value = BalanceToBalthus(ShowVal);
</span></span><span id="line3632"><span>	
</span></span><span id="line3633"><span>	var BalanceNoIte = Balance - shoulders[Shoulder][3];
</span></span><span id="line3634"><span>	if((Left == 103 || Left == 107) &amp;&amp; !IsDoubleIte) BalanceNoIte = BalanceNoIte - lefts[Left][3];
</span></span><span id="line3635"><span>	if((Left == 103 || Left == 107) &amp;&amp; !IsDoubleIte) BalanceNoIte = BalanceNoIte - CMToBalance(Math.floor(BalthiteStr * ChanMult));
</span></span><span id="line3636"><span>	if(Left == 107 &amp;&amp; !IsDoubleIte) BalanceNoIte = BalanceNoIte - CMToBalance(IteBoostStrength(Chan));
</span></span><span id="line3637"><span>	if(Shoulder == 103 || Shoulder == 107) BalanceNoIte = BalanceNoIte - CMToBalance(Math.floor(BalthiteStr * ChanMult));
</span></span><span id="line3638"><span>	if(Shoulder == 107) BalanceNoIte = BalanceNoIte - CMToBalance(IteBoostStrength(Chan));
</span></span><span id="line3639"><span>
</span></span><span id="line3640"><span>	// Regia
</span></span><span id="line3641"><span>	var Regen = ERegia + TRegia;
</span></span><span id="line3642"><span>	Regen = RegiaToRegen(Regen);
</span></span><span id="line3643"><span>	Regen = Regen + TEvus*4;
</span></span><span id="line3644"><span>	Regen = Regen + TBodrus*3;
</span></span><span id="line3645"><span>	Regen = Regen + THardia*1;
</span></span><span id="line3646"><span>	Regen = Regen + TAtkus*1;
</span></span><span id="line3647"><span>	Regen = Regen + TDarkus*1;
</span></span><span id="line3648"><span>	Regen = Regen + TSwengus*7;
</span></span><span id="line3649"><span>	Regen = Regen - TKnox*2;
</span></span><span id="line3650"><span>	Regen = Regen + TAngilsa*26;
</span></span><span id="line3651"><span>	Regen = Regen + TForvyola*8;
</span></span><span id="line3652"><span>	Regen = Regen + TBangus*5;
</span></span><span id="line3653"><span>	Regen = Regen + TErthron*3;
</span></span><span id="line3654"><span>	Regen = Regen + TErthronNew*2;
</span></span><span id="line3655"><span>	Regen = Regen + TAtkia*3;
</span></span><span id="line3656"><span>	Regen = Regen + TStedfustus*6;
</span></span><span id="line3657"><span>	Regen = Regen + TAnemia*8;
</span></span><span id="line3658"><span>	var SAngilsa = Regen / 26;
</span></span><span id="line3659"><span>	var SForvyola = Regen / 8;
</span></span><span id="line3660"><span>	var SStedfustus = Regen / 6;
</span></span><span id="line3661"><span>	var SAnemia = Regen / 8;
</span></span><span id="line3662"><span>	if(Regen / 4 </span><span>&lt; </span><span>SEvus) SEvus = Regen / 4;
</span></span><span id="line3663"><span>	if(Regen / 3 </span><span>&lt; </span><span>SErthron) SErthron = Regen / 3;
</span></span><span id="line3664"><span>	if(Regen / 2 </span><span>&lt; </span><span>SErthronNew) SErthronNew = Regen / 2;
</span></span><span id="line3665"><span>	if(Regen / 3 </span><span>&lt; </span><span>SBodrus) SBodrus = Regen / 3;
</span></span><span id="line3666"><span>	if(Regen / 1 </span><span>&lt; </span><span>SHardia) SHardia = Regen / 1;
</span></span><span id="line3667"><span>	if(Regen / 7 </span><span>&lt; </span><span>SSwengus) SSwengus = Regen / 7;
</span></span><span id="line3668"><span>	if(Regen / 5 </span><span>&lt; </span><span>SBangus) SBangus = Regen / 5;
</span></span><span id="line3669"><span>	if(Regen / 3 </span><span>&lt; </span><span>SAtkia) SAtkia = Regen / 3;
</span></span><span id="line3670"><span>	ShowVal = Regen;
</span></span><span id="line3671"><span>	Regen = Regen + races[Race][4];
</span></span><span id="line3672"><span>	Regen = Regen + weapons[Weapon][4];
</span></span><span id="line3673"><span>	Regen = Regen + lefts[Left][4];
</span></span><span id="line3674"><span>	Regen = Regen + shoulders[Shoulder][4];
</span></span><span id="line3675"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = Regen;
</span></span><span id="line3676"><span>	data.Regia.value = RegenToRegia(ShowVal);
</span></span><span id="line3677"><span>	
</span></span><span id="line3678"><span>	GraphStatReg = Regen;
</span></span><span id="line3679"><span>	
</span></span><span id="line3680"><span>	var RegenNoIte = Regen - shoulders[Shoulder][4];
</span></span><span id="line3681"><span>  if(!IsDoubleIte) RegenNoIte = RegenNoIte - lefts[Left][4];
</span></span><span id="line3682"><span>
</span></span><span id="line3683"><span>	// Histia
</span></span><span id="line3684"><span>	var Health = EHistia + THistia;
</span></span><span id="line3685"><span>	Health = HistiaToHealth(Health);
</span></span><span id="line3686"><span>	Health = Health + TEvus*24;
</span></span><span id="line3687"><span>	Health = Health + TBodrus*24;
</span></span><span id="line3688"><span>	Health = Health + THardia*21;
</span></span><span id="line3689"><span>	Health = Health + TDetha*3;
</span></span><span id="line3690"><span>	Health = Health + TRodnus*36;
</span></span><span id="line3691"><span>	Health = Health + TFarly*48;
</span></span><span id="line3692"><span>	Health = Health - TKnox*24;
</span></span><span id="line3693"><span>	Health = Health - TAngilsa*24;
</span></span><span id="line3694"><span>	Health = Health + TForvyola*54;
</span></span><span id="line3695"><span>	Health = Health + TBangus*6;
</span></span><span id="line3696"><span>	Health = Health + TErthron*24;
</span></span><span id="line3697"><span>	Health = Health + TErthronNew*21;
</span></span><span id="line3698"><span>	Health = Health + TSpiritus*21;
</span></span><span id="line3699"><span>	Health = Health + TStedfustus*54;
</span></span><span id="line3700"><span>	Health = Health + TAnemia*69;
</span></span><span id="line3701"><span>	var SFarly = Health / 48;
</span></span><span id="line3702"><span>	if(Health / 24 </span><span>&lt; </span><span>SEvus) SEvus = Health / 24;
</span></span><span id="line3703"><span>	if(Health / 24 </span><span>&lt; </span><span>SErthron) SErthron = Health / 24;
</span></span><span id="line3704"><span>	if(Health / 21 </span><span>&lt; </span><span>SErthronNew) SErthronNew = Health / 21;
</span></span><span id="line3705"><span>	if(Health / 24 </span><span>&lt; </span><span>SBodrus) SBodrus = Health / 24;
</span></span><span id="line3706"><span>	if(Health / 21 </span><span>&lt; </span><span>SHardia) SHardia = Health / 21;
</span></span><span id="line3707"><span>	if(Health / 54 </span><span>&lt; </span><span>SForvyola) SForvyola = Health / 54;
</span></span><span id="line3708"><span>	if(Health / 6 </span><span>&lt; </span><span>SBangus) SBangus = Health / 6;
</span></span><span id="line3709"><span>	if(Health / 54 </span><span>&lt; </span><span>SStedfustus) SStedfustus = Health / 54;
</span></span><span id="line3710"><span>	if(Health / 69 </span><span>&lt; </span><span>SAnemia) SAnemia = Health / 69;
</span></span><span id="line3711"><span>	ShowVal = Health;
</span></span><span id="line3712"><span>	Health = Health + races[Race][5];
</span></span><span id="line3713"><span>	Health = Health + weapons[Weapon][5];
</span></span><span id="line3714"><span>	Health = Health + lefts[Left][5];
</span></span><span id="line3715"><span>	Health = Health + shoulders[Shoulder][5];
</span></span><span id="line3716"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = Health;
</span></span><span id="line3717"><span>	data.Histia.value = HealthToHistia(ShowVal);
</span></span><span id="line3718"><span>
</span></span><span id="line3719"><span>	// Detha
</span></span><span id="line3720"><span>	var Defense = EDetha + TDetha;
</span></span><span id="line3721"><span>	Defense = DethaToDefense(Defense);
</span></span><span id="line3722"><span>	Defense = Defense + TEvus*1;
</span></span><span id="line3723"><span>	Defense = Defense + TBodrus*1;
</span></span><span id="line3724"><span>	Defense = Defense + THardia*1;
</span></span><span id="line3725"><span>	Defense = Defense + TFarly*2;
</span></span><span id="line3726"><span>	Defense = Defense - TKnox*1;
</span></span><span id="line3727"><span>	Defense = Defense - TAngilsa*1;
</span></span><span id="line3728"><span>	Defense = Defense + TErthron*7;
</span></span><span id="line3729"><span>	Defense = Defense + TErthronNew*7;
</span></span><span id="line3730"><span>	if(Defense </span><span>&lt; </span><span>SEvus) SEvus = Defense;
</span></span><span id="line3731"><span>	if(Defense / 7 </span><span>&lt; </span><span>SErthron) SErthron = Defense / 7;
</span></span><span id="line3732"><span>	if(Defense / 7 </span><span>&lt; </span><span>SErthronNew) SErthronNew = Defense / 7;
</span></span><span id="line3733"><span>	if(Defense </span><span>&lt; </span><span>SBodrus) SBodrus = Defense;
</span></span><span id="line3734"><span>	if(Defense </span><span>&lt; </span><span>SHardia) SHardia = Defense;
</span></span><span id="line3735"><span>	if(Defense / 2 </span><span>&lt; </span><span>SFarly) SFarly = Defense / 2;
</span></span><span id="line3736"><span>	if(Left == 104 || Left == 108) Defense = Defense + CMToDefense(Math.floor(DethiteStr * ChanMult));
</span></span><span id="line3737"><span>	if(Left == 108) Defense = Defense + CMToDefense(IteBoostStrength(Chan));
</span></span><span id="line3738"><span>	if(Shoulder == 104 || Shoulder == 108) Defense = Defense + CMToDefense(Math.floor(DethiteStr * ChanMult));
</span></span><span id="line3739"><span>	if(Shoulder == 108) Defense = Defense + CMToDefense(IteBoostStrength(Chan));
</span></span><span id="line3740"><span>	ShowVal = Defense;
</span></span><span id="line3741"><span>	Defense = Defense + races[Race][6];
</span></span><span id="line3742"><span>	Defense = Defense + weapons[Weapon][6];
</span></span><span id="line3743"><span>	Defense = Defense + lefts[Left][6];
</span></span><span id="line3744"><span>	Defense = Defense + shoulders[Shoulder][6];
</span></span><span id="line3745"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = Defense;
</span></span><span id="line3746"><span>  if(data.toggleTotalDefInput.value == "Y") ShowVal += BalanceToDefense(ShowValBalance);
</span></span><span id="line3747"><span>	data.Detha.value = DefenseToDetha(ShowVal);
</span></span><span id="line3748"><span>
</span></span><span id="line3749"><span>	// Troilus
</span></span><span id="line3750"><span>	var Regeneration = ETroilus + TTroilus;
</span></span><span id="line3751"><span>	Regeneration = TroilusToRegeneration(Regeneration);
</span></span><span id="line3752"><span>	Regeneration = Regeneration + TFarly*4;
</span></span><span id="line3753"><span>	Regeneration = Regeneration + TBangus*1;
</span></span><span id="line3754"><span>	Regeneration = Regeneration + TStedfustus*1;
</span></span><span id="line3755"><span>	Regeneration = Regeneration - TAnemia*1;
</span></span><span id="line3756"><span>	if(Regeneration / 4 </span><span>&lt; </span><span>SFarly) SFarly = Regeneration / 4;
</span></span><span id="line3757"><span>	if(Regeneration </span><span>&lt; </span><span>SBangus) SBangus = Regeneration;
</span></span><span id="line3758"><span>	if(Regeneration </span><span>&lt; </span><span>SStedfustus) SStedfustus = Regeneration;
</span></span><span id="line3759"><span>	ShowVal = Regeneration;
</span></span><span id="line3760"><span>	Regeneration = Regeneration + races[Race][7];
</span></span><span id="line3761"><span>	Regeneration = Regeneration + weapons[Weapon][7];
</span></span><span id="line3762"><span>	Regeneration = Regeneration + lefts[Left][7];
</span></span><span id="line3763"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = Regeneration;
</span></span><span id="line3764"><span>	data.Troilus.value = RegenerationToTroilus(ShowVal);
</span></span><span id="line3765"><span>
</span></span><span id="line3766"><span>	// Toomeria/Splash/Crato/Speisha
</span></span><span id="line3767"><span>	var Spirit = ToomeriaToSpirit(TToomeria);
</span></span><span id="line3768"><span>	Spirit = Spirit + SplashToSpirit(TSplash);
</span></span><span id="line3769"><span>	Spirit = Spirit + OldSplashToSpirit(TSplashOld);
</span></span><span id="line3770"><span>	Spirit = Spirit + CratoToSpirit(TCrato);
</span></span><span id="line3771"><span>	Spirit = Spirit + SpleishaToSpirit(TSpleisha);
</span></span><span id="line3772"><span>	Spirit = Spirit + OldSplashToSpirit(TSpleishaOld);
</span></span><span id="line3773"><span>	Spirit = Spirit + 9*TSpiritus;
</span></span><span id="line3774"><span>	//if(Spirit </span><span>&lt; </span><span>0) Spirit = 0;
</span></span><span id="line3775"><span>	ShowVal = Spirit;
</span></span><span id="line3776"><span>	Spirit = Spirit + races[Race][8];
</span></span><span id="line3777"><span>	Spirit = Spirit + weapons[Weapon][8];
</span></span><span id="line3778"><span>	Spirit = Spirit + lefts[Left][8];
</span></span><span id="line3779"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = Spirit;
</span></span><span id="line3780"><span>	data.Toomeria.value = SpiritToToomeria(ShowVal);
</span></span><span id="line3781"><span>	data.Splash.value = SpiritToSplash(ShowVal);
</span></span><span id="line3782"><span>	data.SplashOld.value = SpiritToOldSplash(ShowVal);
</span></span><span id="line3783"><span>	data.Crato.value = SpiritToCrato(ShowVal);
</span></span><span id="line3784"><span>	data.Spleisha.value = SpiritToSpleisha(ShowVal);
</span></span><span id="line3785"><span>	data.SpleishaOld.value = SpiritToOldSplash(ShowVal);
</span></span><span id="line3786"><span>
</span></span><span id="line3787"><span>	// Respin/ChampReg
</span></span><span id="line3788"><span>	var SpiritRegen = RespinToSpiritRegen(TRespin);
</span></span><span id="line3789"><span>	SpiritRegen = SpiritRegen + TChampReg*20;
</span></span><span id="line3790"><span>	if(Subclass == 1) SpiritRegen = SpiritRegen + 4;
</span></span><span id="line3791"><span>	if(Subclass == 3) SpiritRegen = 25;
</span></span><span id="line3792"><span>	ShowVal = SpiritRegen;
</span></span><span id="line3793"><span>	SpiritRegen = SpiritRegen + races[Race][9];
</span></span><span id="line3794"><span>	SpiritRegen = SpiritRegen + weapons[Weapon][9];
</span></span><span id="line3795"><span>	SpiritRegen = SpiritRegen + lefts[Left][9];
</span></span><span id="line3796"><span>	if(Subclass == 3) SpiritRegen = 25;
</span></span><span id="line3797"><span>	if(data.toggleShowBonusesInput.value == "Y") ShowVal = SpiritRegen;
</span></span><span id="line3798"><span>	data.Respin.value = SpiritRegenToRespin(ShowVal);
</span></span><span id="line3799"><span>	data.ChampReg.value = ShowVal/20;
</span></span><span id="line3800"><span>	
</span></span><span id="line3801"><span>	var SpiritRegenES = SpiritRegen - lefts[Left][9] + lefts[101][9];
</span></span><span id="line3802"><span>	
</span></span><span id="line3803"><span>	// Rodnus
</span></span><span id="line3804"><span>	var HealingReceptivity = 2 * (ERodnus + TRodnus);
</span></span><span id="line3805"><span>	HealingReceptivity = HealingReceptivity + TSpiritus;
</span></span><span id="line3806"><span>	HealingReceptivity = HealingReceptivity + ESpiritus;
</span></span><span id="line3807"><span>	
</span></span><span id="line3808"><span>	// Combo Trainers
</span></span><span id="line3809"><span>	data.Evus.value = SEvus;
</span></span><span id="line3810"><span>	data.Swengus.value = SSwengus;
</span></span><span id="line3811"><span>	data.Farly.value = SFarly;
</span></span><span id="line3812"><span>	data.Rodnus.value = HealingReceptivity / 2;
</span></span><span id="line3813"><span>	data.Spiritus.value = HealingReceptivity;
</span></span><span id="line3814"><span>	data.Knox.value = SKnox;
</span></span><span id="line3815"><span>	data.Angilsa.value = SAngilsa;
</span></span><span id="line3816"><span>	data.Bodrus.value = SBodrus;
</span></span><span id="line3817"><span>	data.Hardia.value = SHardia;
</span></span><span id="line3818"><span>	data.Forvyola.value = SForvyola;
</span></span><span id="line3819"><span>	data.Bangus.value = SBangus;
</span></span><span id="line3820"><span>	data.Erthron.value = SErthron;
</span></span><span id="line3821"><span>	data.ErthronNew.value = SErthronNew;
</span></span><span id="line3822"><span>	data.Atkia.value = SAtkia;
</span></span><span id="line3823"><span>	data.Stedfustus.value = SStedfustus;
</span></span><span id="line3824"><span>	data.Anemia.value = SAnemia;
</span></span><span id="line3825"><span>	
</span></span><span id="line3826"><span>	// Spirit Abilities
</span></span><span id="line3827"><span>	var BaseShieldstoneDrain;
</span></span><span id="line3828"><span>	var ShieldstoneDrain;
</span></span><span id="line3829"><span>	if(THeen </span><span>&lt; </span><span>0) THeen = 0;
</span></span><span id="line3830"><span>  
</span></span><span id="line3831"><span>  if(Subclass == 3) {
</span></span><span id="line3832"><span>    BaseShieldstoneDrain = 333;
</span></span><span id="line3833"><span>  	if(THeen </span><span>&lt; </span><span>25) ShieldstoneDrain = BaseShieldstoneDrain - (134*THeen)/24;
</span></span><span id="line3834"><span>	  else ShieldstoneDrain = (196*25)/THeen;
</span></span><span id="line3835"><span>  }
</span></span><span id="line3836"><span>  else {
</span></span><span id="line3837"><span>    BaseShieldstoneDrain = 1066;
</span></span><span id="line3838"><span>  	if(THeen </span><span>&lt; </span><span>50) ShieldstoneDrain = BaseShieldstoneDrain - (436*THeen)/49;
</span></span><span id="line3839"><span>	  else ShieldstoneDrain = (628*50)/THeen;
</span></span><span id="line3840"><span>  }
</span></span><span id="line3841"><span>  ShieldstoneDrain = Math.round(ShieldstoneDrain);
</span></span><span id="line3842"><span>  
</span></span><span id="line3843"><span>  var ShieldstoneDrainInc10 = Math.floor(60 * ShieldstoneDrain / BaseShieldstoneDrain);
</span></span><span id="line3844"><span>  
</span></span><span id="line3845"><span>	// Offense Total
</span></span><span id="line3846"><span>	var Offense = Accuracy + (3*MaxDamage + MinDamage)/4;
</span></span><span id="line3847"><span>  var OffenseUncapped = Offense;
</span></span><span id="line3848"><span>	if(Offense </span><span>&lt; </span><span>200)
</span></span><span id="line3849"><span>	{
</span></span><span id="line3850"><span>		//if(Race != 7)
</span></span><span id="line3851"><span>		//{
</span></span><span id="line3852"><span>		Offense = 200;
</span></span><span id="line3853"><span>		//}
</span></span><span id="line3854"><span>	}
</span></span><span id="line3855"><span>	var BalanceCost = (5/3) * Offense;
</span></span><span id="line3856"><span>  BalanceCost = RoundDown(BalanceCost);
</span></span><span id="line3857"><span>	var BalanceCostUncapped = (5/3) * OffenseUncapped;
</span></span><span id="line3858"><span>  BalanceCostUncapped = RoundDown(BalanceCostUncapped);
</span></span><span id="line3859"><span>
</span></span><span id="line3860"><span>	var OffenseNoIte = AccuracyNoIte + (3*MaxDamageNoIte + MinDamageNoIte)/4;
</span></span><span id="line3861"><span>	
</span></span><span id="line3862"><span>	// Goss Spirit cost
</span></span><span id="line3863"><span>	var GossSpiritCost = 0;
</span></span><span id="line3864"><span>	if(Weapon &gt;= 93 &amp;&amp; Weapon </span><span>&lt;=</span><span> 98)
</span></span><span id="line3865"><span>	{
</span></span><span id="line3866"><span>		GossSpiritCost = GossDamage/5 + (GossAccuracy*7)/80;
</span></span><span id="line3867"><span>	}
</span></span><span id="line3868"><span>
</span></span><span id="line3869"><span>	// *********  Results output.  ****************
</span></span><span id="line3870"><span>	var results = data.ResultsSelect.value;
</span></span><span id="line3871"><span>	var time_type = "second";
</span></span><span id="line3872"><span>	var time_type_capital = "Second";
</span></span><span id="line3873"><span>	if(FPS == 1)
</span></span><span id="line3874"><span>	{
</span></span><span id="line3875"><span>		time_type = "frame";
</span></span><span id="line3876"><span>		time_type_capital = "Frame";
</span></span><span id="line3877"><span>	}
</span></span><span id="line3878"><span>	
</span></span><span id="line3879"><span>	if(results == 5)
</span></span><span id="line3880"><span>	{
</span></span><span id="line3881"><span>		if(Subclass == 1)
</span></span><span id="line3882"><span>			results = 5;
</span></span><span id="line3883"><span>		else if(Subclass == 2)
</span></span><span id="line3884"><span>			results = 6;
</span></span><span id="line3885"><span>		else if(Subclass == 3)
</span></span><span id="line3886"><span>			results = 7;
</span></span><span id="line3887"><span>		else
</span></span><span id="line3888"><span>			results = 8;
</span></span><span id="line3889"><span>	}
</span></span><span id="line3890"><span>	
</span></span><span id="line3891"><span>	if(results == 0)	// Swings
</span></span><span id="line3892"><span>	{
</span></span><span id="line3893"><span>		msg = "***Swing Cost stats***\n";
</span></span><span id="line3894"><span>		msg += "Balthus consumed per swing: " + Round( BalanceToBalthus(BalanceCost) );
</span></span><span id="line3895"><span>    if(BalanceCostUncapped </span><span>&lt; </span><span>BalanceCost) {
</span></span><span id="line3896"><span>      msg += " (" + Round( BalanceToBalthus(BalanceCostUncapped) ) + " before minimum balance cost is applied)"
</span></span><span id="line3897"><span>    }
</span></span><span id="line3898"><span>    msg += ".\n";
</span></span><span id="line3899"><span>		msg += "Percent of balance consumed per swing: " + Round( 100*BalanceCost/Balance ) + "%.\n";
</span></span><span id="line3900"><span>		msg += "\n";
</span></span><span id="line3901"><span>
</span></span><span id="line3902"><span>		msg += "***Swing-out stats***\n";
</span></span><span id="line3903"><span>		msg += "Total swings w/ frozen Regia: " + Round( Balance/BalanceCost ) + ".\n";
</span></span><span id="line3904"><span>		
</span></span><span id="line3905"><span>		// Swings w/ Regen
</span></span><span id="line3906"><span>		if(4*BalancePerTick(Regen) &gt;= BalanceCost)
</span></span><span id="line3907"><span>		{
</span></span><span id="line3908"><span>			msg += "Total swings w/ Regia: Infinite.\n";
</span></span><span id="line3909"><span>		}
</span></span><span id="line3910"><span>		else
</span></span><span id="line3911"><span>		{
</span></span><span id="line3912"><span>			var BalLeft = Balance;
</span></span><span id="line3913"><span>			var FullSwings = 0;
</span></span><span id="line3914"><span>			var StopCount = 0;
</span></span><span id="line3915"><span>			while(BalLeft &gt;= BalanceCost &amp;&amp; StopCount == 0)
</span></span><span id="line3916"><span>			{
</span></span><span id="line3917"><span>				FullSwings++;
</span></span><span id="line3918"><span>				BalLeft = BalLeft - BalanceCost;
</span></span><span id="line3919"><span>				BalLeft = BalLeft + 4*BalancePerTick(Regen);
</span></span><span id="line3920"><span>				if(FullSwings &gt; 200) StopCount = 1;
</span></span><span id="line3921"><span>			}
</span></span><span id="line3922"><span>			if(StopCount == 0)
</span></span><span id="line3923"><span>			{
</span></span><span id="line3924"><span>				var BalNeeded = BalanceCost - 4*BalancePerTick(Regen);
</span></span><span id="line3925"><span>				BalLeft = BalLeft - 4*BalancePerTick(Regen);
</span></span><span id="line3926"><span>				BalLeft = BalLeft + (BalLeft/BalNeeded)*(4*BalancePerTick(Regen));
</span></span><span id="line3927"><span>				FullSwings = FullSwings + BalLeft/BalanceCost;
</span></span><span id="line3928"><span>				msg += "Total swings w/ Regia: " + Round( FullSwings ) + ".\n";
</span></span><span id="line3929"><span>			}
</span></span><span id="line3930"><span>			else
</span></span><span id="line3931"><span>			{
</span></span><span id="line3932"><span>				msg += "Total swings w/ Regia: OVER 200.\n";
</span></span><span id="line3933"><span>			}
</span></span><span id="line3934"><span>		}
</span></span><span id="line3935"><span>		msg += "\n";
</span></span><span id="line3936"><span>
</span></span><span id="line3937"><span>		// Regia
</span></span><span id="line3938"><span>		msg += "***Balance Recovery stats***\n";
</span></span><span id="line3939"><span>		msg += "Balthus recovered per " + time_type + ": " + Round( FPS*BalanceToBalthus(BalancePerTick(Regen)) ) + ".\n";
</span></span><span id="line3940"><span>		msg += time_type_capital + "s to recover 1 swing: " + Round( (BalanceCost / BalancePerTick(Regen)) / FPS ) + ".\n";
</span></span><span id="line3941"><span>		msg += time_type_capital + "s from 0 to full balance: " + Round( (Balance / BalancePerTick(Regen)) / FPS ) + ".\n";
</span></span><span id="line3942"><span>		msg += "\n";
</span></span><span id="line3943"><span>
</span></span><span id="line3944"><span>		// Balance Maintenance
</span></span><span id="line3945"><span>		msg += "***Balance Maintenance stats***\n";
</span></span><span id="line3946"><span>    
</span></span><span id="line3947"><span>		// Trained Atkus maintenance
</span></span><span id="line3948"><span>		msg += "To maintain these swings, for every additional TRAINED ATKUS rank, you must train:\n";
</span></span><span id="line3949"><span>		var ABalthusRatio = ( BalanceToBalthus(Balance) ) / AccuracyToAtkus(Offense);
</span></span><span id="line3950"><span>		var ARegiaRatio = ( RegenToRegia(Regen) ) / AccuracyToAtkus(Offense);
</span></span><span id="line3951"><span>		msg += RoundLong( ABalthusRatio - BalanceToBalthus(15) ) + " Balthus and " + RoundLong( ARegiaRatio - RegenToRegia(1) ) + " Regia, or...\n";
</span></span><span id="line3952"><span>
</span></span><span id="line3953"><span>		var SwengusRatioBalthus = (ABalthusRatio - BalanceToBalthus(15)) / BalanceToBalthus(30);	// Swengus needed to gain the necessary Balthus alone.
</span></span><span id="line3954"><span>		var SwengusRatioRegia = (ARegiaRatio - RegenToRegia(1)) / RegenToRegia(7); // Swengus needed to gain the necessary Regia alone.
</span></span><span id="line3955"><span>		if(SwengusRatioBalthus </span><span>&lt; </span><span>SwengusRatioRegia)
</span></span><span id="line3956"><span>		{
</span></span><span id="line3957"><span>			msg += RoundLong( SwengusRatioBalthus ) + " Swengus and ";
</span></span><span id="line3958"><span>			msg += RoundLong( ARegiaRatio - RegenToRegia(1) - RegenToRegia( SwengusRatioBalthus * 7 ) ) + " Regia.\n";
</span></span><span id="line3959"><span>		}
</span></span><span id="line3960"><span>		else
</span></span><span id="line3961"><span>		{
</span></span><span id="line3962"><span>			msg += RoundLong( SwengusRatioRegia ) + " Swengus and ";
</span></span><span id="line3963"><span>			msg += RoundLong( ABalthusRatio - BalanceToBalthus(15) - BalanceToBalthus( SwengusRatioRegia * 30 ) ) + " Balthus.\n";
</span></span><span id="line3964"><span>		}
</span></span><span id="line3965"><span>    
</span></span><span id="line3966"><span>		// Trained Aktur maintenance
</span></span><span id="line3967"><span>		msg += "For every additional AKTUR rank, you must gain:\n";
</span></span><span id="line3968"><span>		ABalthusRatio = ( BalanceToBalthus(Balance) ) / AccuracyToAktur(Offense);
</span></span><span id="line3969"><span>		ARegiaRatio = ( RegenToRegia(Regen) ) / AccuracyToAktur(Offense);
</span></span><span id="line3970"><span>		msg += RoundLong( ABalthusRatio ) + " Balthus and " + RoundLong( ARegiaRatio ) + " Regia, or...\n";
</span></span><span id="line3971"><span>
</span></span><span id="line3972"><span>		var SwengusRatioBalthus = (ABalthusRatio) / BalanceToBalthus(30);	// Swengus needed to gain the necessary Balthus alone.
</span></span><span id="line3973"><span>		var SwengusRatioRegia = (ARegiaRatio) / RegenToRegia(7); // Swengus needed to gain the necessary Regia alone.
</span></span><span id="line3974"><span>		if(SwengusRatioBalthus </span><span>&lt; </span><span>SwengusRatioRegia)
</span></span><span id="line3975"><span>		{
</span></span><span id="line3976"><span>			msg += RoundLong( SwengusRatioBalthus ) + " Swengus and ";
</span></span><span id="line3977"><span>			msg += RoundLong( ARegiaRatio - RegenToRegia( SwengusRatioBalthus * 7 ) ) + " Regia.\n";
</span></span><span id="line3978"><span>		}
</span></span><span id="line3979"><span>		else
</span></span><span id="line3980"><span>		{
</span></span><span id="line3981"><span>			msg += RoundLong( SwengusRatioRegia ) + " Swengus and ";
</span></span><span id="line3982"><span>			msg += RoundLong( ABalthusRatio - BalanceToBalthus( SwengusRatioRegia * 30 ) ) + " Balthus.\n";
</span></span><span id="line3983"><span>		}
</span></span><span id="line3984"><span>    
</span></span><span id="line3985"><span>		// Trained Darkus maintenance
</span></span><span id="line3986"><span>		msg += "For every additional TRAINED DARKUS rank, you must train:\n";
</span></span><span id="line3987"><span>		DBalthusRatio = ( BalanceToBalthus(Balance) ) / DamageToDarkus(Offense);
</span></span><span id="line3988"><span>		DRegiaRatio = ( RegenToRegia(Regen) ) / DamageToDarkus(Offense);
</span></span><span id="line3989"><span>		msg += RoundLong( DBalthusRatio - BalanceToBalthus(18) ) + " Balthus and " + RoundLong( DRegiaRatio - RegenToRegia(1) ) + " Regia, or...\n";
</span></span><span id="line3990"><span>
</span></span><span id="line3991"><span>		SwengusRatioBalthus = (DBalthusRatio - BalanceToBalthus(18)) / BalanceToBalthus(30);	// Swengus needed to gain the necessary Balthus alone.
</span></span><span id="line3992"><span>		SwengusRatioRegia = (DRegiaRatio - RegenToRegia(1)) / RegenToRegia(7); // Swengus needed to gain the necessary Regia alone.
</span></span><span id="line3993"><span>		if(SwengusRatioBalthus </span><span>&lt; </span><span>SwengusRatioRegia)
</span></span><span id="line3994"><span>		{
</span></span><span id="line3995"><span>			msg += RoundLong( SwengusRatioBalthus ) + " Swengus and ";
</span></span><span id="line3996"><span>			msg += RoundLong( DRegiaRatio - RegenToRegia(1) - RegenToRegia( SwengusRatioBalthus * 7 ) ) + " Regia.\n";
</span></span><span id="line3997"><span>		}
</span></span><span id="line3998"><span>		else
</span></span><span id="line3999"><span>		{
</span></span><span id="line4000"><span>			msg += RoundLong( SwengusRatioRegia ) + " Swengus and ";
</span></span><span id="line4001"><span>			msg += RoundLong( DBalthusRatio - BalanceToBalthus(18) - BalanceToBalthus( SwengusRatioRegia * 30 ) ) + " Balthus.\n";
</span></span><span id="line4002"><span>		}
</span></span><span id="line4003"><span>    
</span></span><span id="line4004"><span>		// Trained Darktur maintenance
</span></span><span id="line4005"><span>		msg += "For every additional DARKTUR rank, you must gain:\n";
</span></span><span id="line4006"><span>		DBalthusRatio = ( BalanceToBalthus(Balance) ) / DamageToDarktur(Offense);
</span></span><span id="line4007"><span>		DRegiaRatio = ( RegenToRegia(Regen) ) / DamageToDarktur(Offense);
</span></span><span id="line4008"><span>		msg += RoundLong( DBalthusRatio ) + " Balthus and " + RoundLong( DRegiaRatio ) + " Regia, or...\n";
</span></span><span id="line4009"><span>
</span></span><span id="line4010"><span>		SwengusRatioBalthus = (DBalthusRatio) / BalanceToBalthus(30);	// Swengus needed to gain the necessary Balthus alone.
</span></span><span id="line4011"><span>		SwengusRatioRegia = (DRegiaRatio) / RegenToRegia(7); // Swengus needed to gain the necessary Regia alone.
</span></span><span id="line4012"><span>		if(SwengusRatioBalthus </span><span>&lt; </span><span>SwengusRatioRegia)
</span></span><span id="line4013"><span>		{
</span></span><span id="line4014"><span>			msg += RoundLong( SwengusRatioBalthus ) + " Swengus and ";
</span></span><span id="line4015"><span>			msg += RoundLong( DRegiaRatio - RegenToRegia( SwengusRatioBalthus * 7 ) ) + " Regia.\n";
</span></span><span id="line4016"><span>		}
</span></span><span id="line4017"><span>		else
</span></span><span id="line4018"><span>		{
</span></span><span id="line4019"><span>			msg += RoundLong( SwengusRatioRegia ) + " Swengus and ";
</span></span><span id="line4020"><span>			msg += RoundLong( DBalthusRatio - BalanceToBalthus( SwengusRatioRegia * 30 ) ) + " Balthus.\n";
</span></span><span id="line4021"><span>		}
</span></span><span id="line4022"><span>		msg += "\n";
</span></span><span id="line4023"><span>    
</span></span><span id="line4024"><span>		// Trained Evus maintenance
</span></span><span id="line4025"><span>		msg += "For every additional TRAINED EVUS rank, you must train:\n";
</span></span><span id="line4026"><span>		ABalthusRatio = ( BalanceToBalthus(Balance) ) / (Offense/5);
</span></span><span id="line4027"><span>		ARegiaRatio = ( RegenToRegia(Regen) ) / (Offense/5);
</span></span><span id="line4028"><span>		msg += RoundLong( ABalthusRatio - BalanceToBalthus(18) ) + " Balthus and " + RoundLong( ARegiaRatio - RegenToRegia(4) ) + " Regia, or...\n";
</span></span><span id="line4029"><span>
</span></span><span id="line4030"><span>		SwengusRatioBalthus = (ABalthusRatio - BalanceToBalthus(18)) / BalanceToBalthus(30);	// Swengus needed to gain the necessary Balthus alone.
</span></span><span id="line4031"><span>		SwengusRatioRegia = (ARegiaRatio - RegenToRegia(4)) / RegenToRegia(7); // Swengus needed to gain the necessary Regia alone.
</span></span><span id="line4032"><span>		if(SwengusRatioBalthus </span><span>&lt; </span><span>SwengusRatioRegia)
</span></span><span id="line4033"><span>		{
</span></span><span id="line4034"><span>			msg += RoundLong( SwengusRatioBalthus ) + " Swengus and ";
</span></span><span id="line4035"><span>			msg += RoundLong( ARegiaRatio - RegenToRegia(4) - RegenToRegia( SwengusRatioBalthus * 7 ) ) + " Regia.\n";
</span></span><span id="line4036"><span>		}
</span></span><span id="line4037"><span>		else
</span></span><span id="line4038"><span>		{
</span></span><span id="line4039"><span>			msg += RoundLong( SwengusRatioRegia ) + " Swengus and ";
</span></span><span id="line4040"><span>			msg += RoundLong( ABalthusRatio - BalanceToBalthus(18) - BalanceToBalthus( SwengusRatioRegia * 30 ) ) + " Balthus.\n";
</span></span><span id="line4041"><span>		}
</span></span><span id="line4042"><span>		msg += "(If you see negative values above, it means your swings will actually improve when training Evus alone)\n";
</span></span><span id="line4043"><span>		msg += "\n";
</span></span><span id="line4044"><span>    
</span></span><span id="line4045"><span>/*
</span></span><span id="line4046"><span>		// Effective Atkus maintenance
</span></span><span id="line4047"><span>		msg += "Or, for every additional EFFECTIVE ATKUS rank, you must gain:\n";
</span></span><span id="line4048"><span>		ABalthusRatio = ( BalanceToBalthus(Balance) ) / AccuracyToAtkus(Offense);
</span></span><span id="line4049"><span>		ARegiaRatio = ( RegenToRegia(Regen) ) / AccuracyToAtkus(Offense);
</span></span><span id="line4050"><span>		msg += RoundLong( ABalthusRatio ) + " Balthus and " + RoundLong( ARegiaRatio ) + " Regia, or...\n";
</span></span><span id="line4051"><span>
</span></span><span id="line4052"><span>		var SwengusRatioBalthus = (ABalthusRatio) / BalanceToBalthus(30);	// Swengus needed to gain the necessary Balthus alone.
</span></span><span id="line4053"><span>		var SwengusRatioRegia = (ARegiaRatio) / RegenToRegia(7); // Swengus needed to gain the necessary Regia alone.
</span></span><span id="line4054"><span>		if(SwengusRatioBalthus </span><span>&lt; </span><span>SwengusRatioRegia)
</span></span><span id="line4055"><span>		{
</span></span><span id="line4056"><span>			msg += RoundLong( SwengusRatioBalthus ) + " Swengus and ";
</span></span><span id="line4057"><span>			msg += RoundLong( ARegiaRatio - RegenToRegia( SwengusRatioBalthus * 7 ) ) + " Regia.\n";
</span></span><span id="line4058"><span>		}
</span></span><span id="line4059"><span>		else
</span></span><span id="line4060"><span>		{
</span></span><span id="line4061"><span>			msg += RoundLong( SwengusRatioRegia ) + " Swengus and ";
</span></span><span id="line4062"><span>			msg += RoundLong( ABalthusRatio - BalanceToBalthus( SwengusRatioRegia * 30 ) ) + " Balthus.\n";
</span></span><span id="line4063"><span>		}
</span></span><span id="line4064"><span>    
</span></span><span id="line4065"><span>		// Trained Darkus maintenance
</span></span><span id="line4066"><span>		msg += "For every additional EFFECTIVE DARKUS rank, you must gain:\n";
</span></span><span id="line4067"><span>		DBalthusRatio = ( BalanceToBalthus(Balance) ) / DamageToDarkus(Offense);
</span></span><span id="line4068"><span>		DRegiaRatio = ( RegenToRegia(Regen) ) / DamageToDarkus(Offense);
</span></span><span id="line4069"><span>		msg += RoundLong( DBalthusRatio ) + " Balthus and " + RoundLong( DRegiaRatio ) + " Regia, or...\n";
</span></span><span id="line4070"><span>
</span></span><span id="line4071"><span>		SwengusRatioBalthus = (DBalthusRatio) / BalanceToBalthus(30);	// Swengus needed to gain the necessary Balthus alone.
</span></span><span id="line4072"><span>		SwengusRatioRegia = (DRegiaRatio) / RegenToRegia(7); // Swengus needed to gain the necessary Regia alone.
</span></span><span id="line4073"><span>		if(SwengusRatioBalthus </span><span>&lt; </span><span>SwengusRatioRegia)
</span></span><span id="line4074"><span>		{
</span></span><span id="line4075"><span>			msg += RoundLong( SwengusRatioBalthus ) + " Swengus and ";
</span></span><span id="line4076"><span>			msg += RoundLong( DRegiaRatio - RegenToRegia( SwengusRatioBalthus * 7 ) ) + " Regia.\n";
</span></span><span id="line4077"><span>		}
</span></span><span id="line4078"><span>		else
</span></span><span id="line4079"><span>		{
</span></span><span id="line4080"><span>			msg += RoundLong( SwengusRatioRegia ) + " Swengus and ";
</span></span><span id="line4081"><span>			msg += RoundLong( DBalthusRatio - BalanceToBalthus( SwengusRatioRegia * 30 ) ) + " Balthus.\n";
</span></span><span id="line4082"><span>		}
</span></span><span id="line4083"><span>		msg += "\n";
</span></span><span id="line4084"><span>*/
</span></span><span id="line4085"><span>	}
</span></span><span id="line4086"><span>	else if(results == 1)	// Damage
</span></span><span id="line4087"><span>	{	
</span></span><span id="line4088"><span>		// Damage per Hit
</span></span><span id="line4089"><span>		msg = "***Damage per Hit***\n";
</span></span><span id="line4090"><span>		msg += "Minimum: " + Round( DamageToMinHistia(UMinDamage) ) + ".\n";
</span></span><span id="line4091"><span>		msg += "Average: " + Round( DamageToAvgHistia(UMinDamage, UMaxDamage) ) + ".\n";
</span></span><span id="line4092"><span>		msg += "Maximum: " + Round( DamageToMaxHistia(UMaxDamage) ) + ".\n";
</span></span><span id="line4093"><span>		msg += "\n";
</span></span><span id="line4094"><span>    
</span></span><span id="line4095"><span>		// Burst Damage w/ Regen
</span></span><span id="line4096"><span>		msg += "***Swing-out Burst Damage***\n";
</span></span><span id="line4097"><span>		if(4*BalancePerTick(Regen) &gt;= BalanceCost)
</span></span><span id="line4098"><span>		{
</span></span><span id="line4099"><span>			msg += "Infinite.\n";
</span></span><span id="line4100"><span>		}
</span></span><span id="line4101"><span>		else
</span></span><span id="line4102"><span>		{
</span></span><span id="line4103"><span>			var BalLeft = Balance;
</span></span><span id="line4104"><span>			var FullSwings = 0;
</span></span><span id="line4105"><span>			var StopCount = 0;
</span></span><span id="line4106"><span>			while(BalLeft &gt;= BalanceCost &amp;&amp; StopCount == 0)
</span></span><span id="line4107"><span>			{
</span></span><span id="line4108"><span>				FullSwings++;
</span></span><span id="line4109"><span>				BalLeft = BalLeft - BalanceCost;
</span></span><span id="line4110"><span>				BalLeft = BalLeft + 4*BalancePerTick(Regen);
</span></span><span id="line4111"><span>				if(FullSwings &gt; 200) StopCount = 1;
</span></span><span id="line4112"><span>			}
</span></span><span id="line4113"><span>			if(StopCount == 0)
</span></span><span id="line4114"><span>			{
</span></span><span id="line4115"><span>				var BalNeeded = BalanceCost - 4*BalancePerTick(Regen);
</span></span><span id="line4116"><span>				BalLeft = BalLeft - 4*BalancePerTick(Regen);
</span></span><span id="line4117"><span>				BalLeft = BalLeft + (BalLeft/BalNeeded)*(4*BalancePerTick(Regen));
</span></span><span id="line4118"><span>				msg += "Minimum: " + Round( FullSwings * DamageToMinHistia(UMinDamage) ) + ".\n";
</span></span><span id="line4119"><span>				msg += "Average: " + Round( FullSwings * DamageToAvgHistia(UMinDamage, UMaxDamage) ) + ".\n";
</span></span><span id="line4120"><span>				msg += "Maximum: " + Round( FullSwings * DamageToMaxHistia(UMaxDamage) ) + ".\n";
</span></span><span id="line4121"><span>			}
</span></span><span id="line4122"><span>			else
</span></span><span id="line4123"><span>			{
</span></span><span id="line4124"><span>				msg += "Near Infinite.\n";
</span></span><span id="line4125"><span>			}
</span></span><span id="line4126"><span>		}
</span></span><span id="line4127"><span>		msg += "\n";
</span></span><span id="line4128"><span>		
</span></span><span id="line4129"><span>		// Burst damage
</span></span><span id="line4130"><span>		msg += "***Burst Damage From Balthus***\n";
</span></span><span id="line4131"><span>		msg += "Minimum: " + Round( (Balance/BalanceCost)*DamageToMinHistia(UMinDamage) ) + ".\n";
</span></span><span id="line4132"><span>		msg += "Average: " + Round( (Balance/BalanceCost)*DamageToAvgHistia(UMinDamage, UMaxDamage) ) + ".\n";
</span></span><span id="line4133"><span>		msg += "Maximum: " + Round( (Balance/BalanceCost)*DamageToMaxHistia(UMaxDamage) ) + ".\n";
</span></span><span id="line4134"><span>		msg += "\n";
</span></span><span id="line4135"><span>    
</span></span><span id="line4136"><span>		// DPS
</span></span><span id="line4137"><span>		msg += "***Damage per " + time_type_capital + "***\n";
</span></span><span id="line4138"><span>		var SwingsPerFrame = BalancePerTick(Regen) / BalanceCost;
</span></span><span id="line4139"><span>		if(SwingsPerFrame &gt; 0.25) SwingsPerFrame = 0.25;
</span></span><span id="line4140"><span>		
</span></span><span id="line4141"><span>		msg += "Minimum: " + Round( FPS*SwingsPerFrame*DamageToMinHistia(UMinDamage) ) + ".\n";
</span></span><span id="line4142"><span>		msg += "Average: " + Round( FPS*SwingsPerFrame*DamageToAvgHistia(UMinDamage, UMaxDamage) ) + ".\n";
</span></span><span id="line4143"><span>		msg += "Maximum: " + Round( FPS*SwingsPerFrame*DamageToMaxHistia(UMaxDamage) ) + ".\n";
</span></span><span id="line4144"><span>		msg += "\n";
</span></span><span id="line4145"><span>		
</span></span><span id="line4146"><span>		msg += "-All values are in terms of Histia damaged.\n";
</span></span><span id="line4147"><span>		msg += "-Swing-out Burst Damage is the amount of damage you can inflict by continuously swinging from full balance until you don't have enough balance remaining to swing again, NOT counting the last fraction of a swing.\n";
</span></span><span id="line4148"><span>		msg += "-Burst Damage From Balthus is the amount of damage you can inflict by swinging out with frozen balance recovery, counting the last fraction of a swing.\n";
</span></span><span id="line4149"><span>		msg += "-Damage per second is how much damage you can inflict per second when your balance bar is empty and you swing each time you recover enough balance to swing again.\n";
</span></span><span id="line4150"><span>	}
</span></span><span id="line4151"><span>	else if(results == 2)	// Spirit
</span></span><span id="line4152"><span>	{
</span></span><span id="line4153"><span>		// Basic spirit stats.
</span></span><span id="line4154"><span>		msg = "***Spirit stats***\n";
</span></span><span id="line4155"><span>		if(Subclass == 1)
</span></span><span id="line4156"><span>			msg += "Toomeria recovered per " + time_type + ": " + RoundLong( FPS*SpiritToToomeria(SpiritRegen/100) ) + ".\n";
</span></span><span id="line4157"><span>		else if(Subclass == 2)
</span></span><span id="line4158"><span>			msg += "Splash recovered per " + time_type + ": " + RoundLong( FPS*SpiritToSplash(SpiritRegen/100) ) + ".\n";
</span></span><span id="line4159"><span>		else if(Subclass == 3)
</span></span><span id="line4160"><span>			msg += "Crato recovered per " + time_type + ": " + RoundLong( FPS*SpiritToCrato(SpiritRegen/100) ) + ".\n";
</span></span><span id="line4161"><span>		else
</span></span><span id="line4162"><span>			msg += "Spleisha recovered per " + time_type + ": " + RoundLong( FPS*SpiritToSpleisha(SpiritRegen/100) ) + ".\n";
</span></span><span id="line4163"><span>		if(FPS == 1)
</span></span><span id="line4164"><span>			msg += "Frames to recover full spirit: " + Round( Spirit / (SpiritRegen/100) ) + ".\n";
</span></span><span id="line4165"><span>		else
</span></span><span id="line4166"><span>			msg += "Time to recover full spirit: " + framesToMinutes(Spirit / (SpiritRegen/100), FPS) + ".\n";
</span></span><span id="line4167"><span>		msg += "\n";
</span></span><span id="line4168"><span>		
</span></span><span id="line4169"><span>		// Shieldstone
</span></span><span id="line4170"><span>		msg += "***Shieldstone stats***\n";
</span></span><span id="line4171"><span>		if(Subclass == 1)
</span></span><span id="line4172"><span>			msg += "Initial Toomeria drain per " + time_type + ": " + Round( SpiritToToomeria(ShieldstoneDrain * FPS) ) + ".\n";
</span></span><span id="line4173"><span>		else if(Subclass == 2)
</span></span><span id="line4174"><span>			msg += "Initial Splash drain per " + time_type + ": " + Round( SpiritToSplash(ShieldstoneDrain * FPS) ) + ".\n";
</span></span><span id="line4175"><span>		else if(Subclass == 3)
</span></span><span id="line4176"><span>			msg += "Initial Crato drain per " + time_type + ": " + Round( SpiritToCrato(ShieldstoneDrain * FPS) ) + ".\n";
</span></span><span id="line4177"><span>		else
</span></span><span id="line4178"><span>			msg += "Initial Spleisha drain per " + time_type + ": " + Round( SpiritToSpleisha(ShieldstoneDrain * FPS) ) + ".\n";
</span></span><span id="line4179"><span>
</span></span><span id="line4180"><span>		msg += "Efficiency compared to 0 Heen: " + Round( (BaseShieldstoneDrain / ShieldstoneDrain) * 100 ) + "%.\n";
</span></span><span id="line4181"><span>		msg += "Average efficiency per Heen rank: ";
</span></span><span id="line4182"><span>		if(THeen &gt; 0)
</span></span><span id="line4183"><span>		{
</span></span><span id="line4184"><span>			msg += Round( (((BaseShieldstoneDrain / ShieldstoneDrain) - 1) / THeen) * 100 );
</span></span><span id="line4185"><span>		}
</span></span><span id="line4186"><span>		else
</span></span><span id="line4187"><span>		{
</span></span><span id="line4188"><span>			msg += "0";
</span></span><span id="line4189"><span>		}
</span></span><span id="line4190"><span>		msg += "%.\n";
</span></span><span id="line4191"><span>
</span></span><span id="line4192"><span>		// Shieldstone duration w/o increasing drain.
</span></span><span id="line4193"><span>		msg += time_type_capital + "s of duration w/o increasing drain: ";
</span></span><span id="line4194"><span>		var SPLeft = Spirit;
</span></span><span id="line4195"><span>		var ShieldstoneFrames = 0;
</span></span><span id="line4196"><span>		if(SpiritRegen / 100 &gt;= ShieldstoneDrain)
</span></span><span id="line4197"><span>		{
</span></span><span id="line4198"><span>			msg += "Infinite";
</span></span><span id="line4199"><span>		}
</span></span><span id="line4200"><span>		else
</span></span><span id="line4201"><span>		{
</span></span><span id="line4202"><span>			ShieldstoneFrames = 0;
</span></span><span id="line4203"><span>			SPLeft = Spirit;
</span></span><span id="line4204"><span>			while(SPLeft &gt;= ShieldstoneDrain)
</span></span><span id="line4205"><span>			{
</span></span><span id="line4206"><span>				SPLeft = SPLeft - ShieldstoneDrain;
</span></span><span id="line4207"><span>				SPLeft = SPLeft + (SpiritRegen / 100);
</span></span><span id="line4208"><span>				ShieldstoneFrames = ShieldstoneFrames + 1;
</span></span><span id="line4209"><span>				if(ShieldstoneFrames &gt; 16000) break;
</span></span><span id="line4210"><span>			}
</span></span><span id="line4211"><span>			if(ShieldstoneFrames </span><span>&lt;=</span><span> 16000)
</span></span><span id="line4212"><span>			{
</span></span><span id="line4213"><span>				if(FPS == 1)
</span></span><span id="line4214"><span>				{
</span></span><span id="line4215"><span>					if(SPLeft &gt; 0 &amp;&amp; SPLeft </span><span>&lt; </span><span>ShieldstoneDrain)
</span></span><span id="line4216"><span>						ShieldstoneFrames = ShieldstoneFrames + (SPLeft/ShieldstoneDrain);
</span></span><span id="line4217"><span>					msg += Round( ShieldstoneFrames );
</span></span><span id="line4218"><span>				}
</span></span><span id="line4219"><span>				else
</span></span><span id="line4220"><span>				{
</span></span><span id="line4221"><span>					msg += Round( ShieldstoneFrames/FPS );
</span></span><span id="line4222"><span>				}
</span></span><span id="line4223"><span>			}
</span></span><span id="line4224"><span>			else
</span></span><span id="line4225"><span>			{
</span></span><span id="line4226"><span>				msg += "OVER " + Round( 16000/FPS );
</span></span><span id="line4227"><span>			}
</span></span><span id="line4228"><span>		}
</span></span><span id="line4229"><span>		msg += ".\n";
</span></span><span id="line4230"><span>
</span></span><span id="line4231"><span>		// Shieldstone duration w/ increasing drain.
</span></span><span id="line4232"><span>		msg += time_type_capital + "s of duration w/ increasing drain rate (rough estimate): ";
</span></span><span id="line4233"><span>		var ShieldstoneCurr = ShieldstoneDrain;
</span></span><span id="line4234"><span>		SPLeft = Spirit;
</span></span><span id="line4235"><span>		ShieldstoneFrames = 0;
</span></span><span id="line4236"><span>		while(SPLeft &gt;= ShieldstoneCurr)
</span></span><span id="line4237"><span>		{
</span></span><span id="line4238"><span>			ShieldstoneFrames = ShieldstoneFrames + 1;
</span></span><span id="line4239"><span>      
</span></span><span id="line4240"><span>      if(ShieldstoneFrames % 10 == 0)
</span></span><span id="line4241"><span>        ShieldstoneCurr += ShieldstoneDrainInc10;
</span></span><span id="line4242"><span>      
</span></span><span id="line4243"><span>			SPLeft = SPLeft - ShieldstoneCurr;
</span></span><span id="line4244"><span>      
</span></span><span id="line4245"><span>			ShieldstoneCurr = ShieldstoneCurr + (1/3);
</span></span><span id="line4246"><span>      
</span></span><span id="line4247"><span>			SPLeft = SPLeft + (SpiritRegen/100);
</span></span><span id="line4248"><span>			if(SPLeft &gt; Spirit) SPLeft = Spirit;
</span></span><span id="line4249"><span>			if(ShieldstoneFrames &gt; 16000) break;
</span></span><span id="line4250"><span>		}
</span></span><span id="line4251"><span>		if(ShieldstoneFrames </span><span>&lt;=</span><span> 16000)
</span></span><span id="line4252"><span>		{
</span></span><span id="line4253"><span>			if(FPS == 1)
</span></span><span id="line4254"><span>			{
</span></span><span id="line4255"><span>				if(SPLeft &gt; 0 &amp;&amp; SPLeft </span><span>&lt; </span><span>ShieldstoneCurr)
</span></span><span id="line4256"><span>					ShieldstoneFrames = ShieldstoneFrames + (SPLeft/ShieldstoneCurr);
</span></span><span id="line4257"><span>				msg += Round( ShieldstoneFrames );
</span></span><span id="line4258"><span>			}
</span></span><span id="line4259"><span>			else
</span></span><span id="line4260"><span>			{
</span></span><span id="line4261"><span>				msg += Round( ShieldstoneFrames/FPS );
</span></span><span id="line4262"><span>			}
</span></span><span id="line4263"><span>		}
</span></span><span id="line4264"><span>		else
</span></span><span id="line4265"><span>		{
</span></span><span id="line4266"><span>			msg += "OVER " + Round(16000/FPS);
</span></span><span id="line4267"><span>		}
</span></span><span id="line4268"><span>		msg += ".\n";
</span></span><span id="line4269"><span>
</span></span><span id="line4270"><span>		msg += time_type_capital + "s to recover 1 frame of use: " + Round( (ShieldstoneDrain / (SpiritRegen/100)) / FPS ) + ".\n";
</span></span><span id="line4271"><span>		if(FPS != 1)
</span></span><span id="line4272"><span>			msg += "Seconds to recover 1 second of use: " + Round( (ShieldstoneDrain / (SpiritRegen/100)) ) + ".\n";
</span></span><span id="line4273"><span>		msg += "\n";
</span></span><span id="line4274"><span>	}
</span></span><span id="line4275"><span>	else if(results == 5)	// Champion abilities
</span></span><span id="line4276"><span>	{
</span></span><span id="line4277"><span>    msg = "";
</span></span><span id="line4278"><span>    
</span></span><span id="line4279"><span>    // Tell Blade
</span></span><span id="line4280"><span>		msg += "***Tell Blade stats***\n";
</span></span><span id="line4281"><span>		if(Weapon != 103 || Subclass != 1) {
</span></span><span id="line4282"><span>			msg += "To see Tell Blade effects, select the Tell Blade as your equipped weapon.\n";
</span></span><span id="line4283"><span>    }
</span></span><span id="line4284"><span>    else {
</span></span><span id="line4285"><span>      var OffenseNoTell = Math.max(Offense - TellAccuracy, 200);
</span></span><span id="line4286"><span>      var BalanceCostNoTell = (5/3) * OffenseNoTell;
</span></span><span id="line4287"><span>      BalanceCostNoTell = RoundDown(BalanceCostNoTell);
</span></span><span id="line4288"><span>      var RegenInc = (Regen * BalanceCostNoTell / Math.max(BalanceCost,1)) - Regen;
</span></span><span id="line4289"><span>      
</span></span><span id="line4290"><span>      msg += "When swinging at an enemy that requires " + AtkusReq + " Atkus to hit:\n";
</span></span><span id="line4291"><span>      msg += "Effective Atkus is reduced by " + Round( AccuracyToAtkus(-TellAccuracy) ) + ".\r";
</span></span><span id="line4292"><span>      msg += "Balance cost is reduced by " + Round( BalanceToBalthus(BalanceCostNoTell - BalanceCost) ) + " Balthus.\r";
</span></span><span id="line4293"><span>      msg += "Without the Atkus conservation you would need to train " + Round( RegenToRegia(RegenInc) ) + " Regia to recover swings as quickly.\n";
</span></span><span id="line4294"><span>    }
</span></span><span id="line4295"><span>		msg += "\n";
</span></span><span id="line4296"><span>    
</span></span><span id="line4297"><span>    // Labrys
</span></span><span id="line4298"><span>		msg += "***Labrys stats***\n";
</span></span><span id="line4299"><span>		if(Weapon != 110 || Subclass != 1) {
</span></span><span id="line4300"><span>			msg += "To see Labrys effects, select the Labrys as your equipped weapon.\n";
</span></span><span id="line4301"><span>    }
</span></span><span id="line4302"><span>    else {
</span></span><span id="line4303"><span>      msg += paddedOutput("Number of", 13, "left");
</span></span><span id="line4304"><span>      msg += paddedOutput("Avg Damage", 14, "left");
</span></span><span id="line4305"><span>      msg += paddedOutput("Damage Relative", 19, "left");
</span></span><span id="line4306"><span>      msg += paddedOutput("Damage Relative", 19, "left");
</span></span><span id="line4307"><span>      msg += "\n";
</span></span><span id="line4308"><span>      
</span></span><span id="line4309"><span>      msg += paddedOutput("Targets", 13, "left");
</span></span><span id="line4310"><span>      msg += paddedOutput("Per Hit", 14, "left");
</span></span><span id="line4311"><span>      msg += paddedOutput("to Tell Blade", 19, "left");
</span></span><span id="line4312"><span>      msg += paddedOutput("to Labrys 1 Target", 19, "left");
</span></span><span id="line4313"><span>      msg += "\n";
</span></span><span id="line4314"><span>      
</span></span><span id="line4315"><span>      var LabrysDamageSingle = GetLabrysDamage(MinDamage, MaxDamage, TFell, 1);
</span></span><span id="line4316"><span>      LabrysDamageSingle = DamageToAvgHistia(LabrysDamageSingle[0], LabrysDamageSingle[1]);
</span></span><span id="line4317"><span>      
</span></span><span id="line4318"><span>      var TellDamage = [ MinDamage, MaxDamage ];
</span></span><span id="line4319"><span>      TellDamage[0] -= weapons[Weapon][1];
</span></span><span id="line4320"><span>      TellDamage[1] -= weapons[Weapon][2];
</span></span><span id="line4321"><span>      TellDamage[0] += weapons[103][1];
</span></span><span id="line4322"><span>      TellDamage[1] += weapons[103][2];
</span></span><span id="line4323"><span>      TellDamage = DamageToAvgHistia(TellDamage[0], TellDamage[1]);
</span></span><span id="line4324"><span>      
</span></span><span id="line4325"><span>      for(var t=1; t</span><span>&lt;=</span><span>Math.min(Math.max(10, LabrysTargets), 100); t++) {
</span></span><span id="line4326"><span>        LabrysDamage = GetLabrysDamage(MinDamage, MaxDamage, TFell, t);
</span></span><span id="line4327"><span>        LabrysDamage = DamageToAvgHistia(LabrysDamage[0], LabrysDamage[1]);
</span></span><span id="line4328"><span>        
</span></span><span id="line4329"><span>        msg += paddedOutput(t, 13, "left");
</span></span><span id="line4330"><span>        msg += paddedOutput(Round(LabrysDamage), 14, "left");
</span></span><span id="line4331"><span>        msg += paddedOutput(Round(100 * LabrysDamage / TellDamage) + "%", 19, "left");
</span></span><span id="line4332"><span>        msg += paddedOutput(Round(100 * LabrysDamage / LabrysDamageSingle) + "%", 19, "left");
</span></span><span id="line4333"><span>        
</span></span><span id="line4334"><span>        msg += "\n";
</span></span><span id="line4335"><span>      }
</span></span><span id="line4336"><span>    }
</span></span><span id="line4337"><span>    msg += "\n";
</span></span><span id="line4338"><span>    
</span></span><span id="line4339"><span>		// Earth Minerals
</span></span><span id="line4340"><span>		msg += "***Earth Mineral stats***\n";
</span></span><span id="line4341"><span>    
</span></span><span id="line4342"><span>		for(var i=0; i</span><span>&lt;4</span><span>; i++) {
</span></span><span id="line4343"><span>			var iteName = "";
</span></span><span id="line4344"><span>			var iteStr = 0;
</span></span><span id="line4345"><span>			if(i == 0) {
</span></span><span id="line4346"><span>				iteName = "Atkite";
</span></span><span id="line4347"><span>				iteStr = AtkiteStr;
</span></span><span id="line4348"><span>			}
</span></span><span id="line4349"><span>			else if(i == 1) {
</span></span><span id="line4350"><span>				iteName = "Darkite";
</span></span><span id="line4351"><span>				iteStr = DarkiteStr;
</span></span><span id="line4352"><span>			}
</span></span><span id="line4353"><span>			else if(i == 2) {
</span></span><span id="line4354"><span>				iteName = "Balthite";
</span></span><span id="line4355"><span>				iteStr = BalthiteStr;
</span></span><span id="line4356"><span>			}
</span></span><span id="line4357"><span>			else {
</span></span><span id="line4358"><span>				iteName = "Dethite";
</span></span><span id="line4359"><span>				iteStr = DethiteStr;
</span></span><span id="line4360"><span>			}
</span></span><span id="line4361"><span>			var SPCost = IteCost(iteStr);
</span></span><span id="line4362"><span>			
</span></span><span id="line4363"><span>			msg += iteName + ":\n";
</span></span><span id="line4364"><span>			msg += "Toomeria consumed per boost: " + Round(SPCost / 500) + ".\n";
</span></span><span id="line4365"><span>			msg += "Total boosts from full spirit: ";
</span></span><span id="line4366"><span>			if(68 * (SpiritRegenES / 100) &gt;= SPCost)
</span></span><span id="line4367"><span>			{
</span></span><span id="line4368"><span>				msg += "Infinite";
</span></span><span id="line4369"><span>			}
</span></span><span id="line4370"><span>			else
</span></span><span id="line4371"><span>			{
</span></span><span id="line4372"><span>				var IteBoosts = 0;
</span></span><span id="line4373"><span>				SPLeft = Spirit;
</span></span><span id="line4374"><span>				while(SPLeft &gt;= SPCost)
</span></span><span id="line4375"><span>				{
</span></span><span id="line4376"><span>					SPLeft = SPLeft - SPCost;
</span></span><span id="line4377"><span>					SPLeft = SPLeft + (68*(SpiritRegenES / 100));
</span></span><span id="line4378"><span>					IteBoosts = IteBoosts + 1;
</span></span><span id="line4379"><span>					if(IteBoosts &gt; 1000) break;
</span></span><span id="line4380"><span>				}
</span></span><span id="line4381"><span>				if(IteBoosts </span><span>&lt;=</span><span> 1000)
</span></span><span id="line4382"><span>				{
</span></span><span id="line4383"><span>					if(SPLeft &gt; 0 &amp;&amp; SPLeft </span><span>&lt; </span><span>SPCost)
</span></span><span id="line4384"><span>						IteBoosts = IteBoosts + (SPLeft/SPCost);
</span></span><span id="line4385"><span>					msg += Round(IteBoosts);
</span></span><span id="line4386"><span>				}
</span></span><span id="line4387"><span>				else
</span></span><span id="line4388"><span>				{
</span></span><span id="line4389"><span>					msg += "OVER 1000";
</span></span><span id="line4390"><span>				}
</span></span><span id="line4391"><span>			}
</span></span><span id="line4392"><span>			msg += ".\n";
</span></span><span id="line4393"><span>			if(FPS == 1)
</span></span><span id="line4394"><span>				msg += "Frames to recover 1 boost: " + Round(SPCost / (SpiritRegen/100));
</span></span><span id="line4395"><span>			else
</span></span><span id="line4396"><span>				msg += "Time to recover 1 boost: " + framesToMinutes(SPCost / (SpiritRegen/100), FPS);
</span></span><span id="line4397"><span>			msg += ".\n";
</span></span><span id="line4398"><span>			
</span></span><span id="line4399"><span>			if(i == 0 || i == 1) {
</span></span><span id="line4400"><span>				var boostStr = 0;
</span></span><span id="line4401"><span>				if(i == 0) {
</span></span><span id="line4402"><span>					boostStr = CMToAccuracy(Math.floor(AtkiteStr * ChanMult)) + CMToAccuracy(IteBoostStrength(Chan));
</span></span><span id="line4403"><span>          if(Weapon == 89)
</span></span><span id="line4404"><span>            boostStr = boostStr * 1.2;
</span></span><span id="line4405"><span>				}
</span></span><span id="line4406"><span>				else {
</span></span><span id="line4407"><span>					boostStr = CMToAvgDamage(Math.floor(DarkiteStr * ChanMult)) + CMToAvgDamage(IteBoostStrength(Chan));
</span></span><span id="line4408"><span>          if(Weapon == 89)
</span></span><span id="line4409"><span>            boostStr = boostStr * 1.15;
</span></span><span id="line4410"><span>				}
</span></span><span id="line4411"><span>				
</span></span><span id="line4412"><span>				// Atkite/Darkite swings during duration
</span></span><span id="line4413"><span>				msg += "Total swings during boost duration: ";
</span></span><span id="line4414"><span>				var OffenseBoosted = OffenseNoIte + boostStr;
</span></span><span id="line4415"><span>				if(OffenseBoosted </span><span>&lt; </span><span>200)
</span></span><span id="line4416"><span>				{
</span></span><span id="line4417"><span>					//if(Race != 7)
</span></span><span id="line4418"><span>					//{
</span></span><span id="line4419"><span>					OffenseBoosted = 200;
</span></span><span id="line4420"><span>					//}
</span></span><span id="line4421"><span>				}
</span></span><span id="line4422"><span>				var BalanceCostBoosted = (5/3) * OffenseBoosted;
</span></span><span id="line4423"><span>        BalanceCostBoosted = RoundDown(BalanceCostBoosted);
</span></span><span id="line4424"><span>				var IteDuration = 68;
</span></span><span id="line4425"><span>				var BalLeft = BalanceNoIte;
</span></span><span id="line4426"><span>				var BoostedSwings = 0;
</span></span><span id="line4427"><span>				var SwingWait = 0;
</span></span><span id="line4428"><span>				while(IteDuration &gt; 0)
</span></span><span id="line4429"><span>				{
</span></span><span id="line4430"><span>					IteDuration--;
</span></span><span id="line4431"><span>
</span></span><span id="line4432"><span>					if(SwingWait &gt; 0)
</span></span><span id="line4433"><span>					{
</span></span><span id="line4434"><span>						SwingWait--;
</span></span><span id="line4435"><span>					}
</span></span><span id="line4436"><span>					else if(BalLeft &gt;= BalanceCostBoosted)
</span></span><span id="line4437"><span>					{
</span></span><span id="line4438"><span>						BoostedSwings++;
</span></span><span id="line4439"><span>						BalLeft = BalLeft - BalanceCostBoosted;
</span></span><span id="line4440"><span>						SwingWait = 3;
</span></span><span id="line4441"><span>					}
</span></span><span id="line4442"><span>
</span></span><span id="line4443"><span>					if(IteDuration &gt; 0)
</span></span><span id="line4444"><span>						BalLeft = BalLeft + BalancePerTick(RegenNoIte);
</span></span><span id="line4445"><span>					if(BalLeft &gt; BalanceNoIte)
</span></span><span id="line4446"><span>						BalLeft = BalanceNoIte;
</span></span><span id="line4447"><span>
</span></span><span id="line4448"><span>				}
</span></span><span id="line4449"><span>				if(BalLeft </span><span>&lt; </span><span>BalanceCostBoosted &amp;&amp; BalLeft &gt;= 0)
</span></span><span id="line4450"><span>				{
</span></span><span id="line4451"><span>					BoostedSwings = BoostedSwings + BalLeft/BalanceCostBoosted;
</span></span><span id="line4452"><span>				}
</span></span><span id="line4453"><span>				msg += Round(BoostedSwings) + ".\n";
</span></span><span id="line4454"><span>			}
</span></span><span id="line4455"><span>		}
</span></span><span id="line4456"><span>		msg += "\n";
</span></span><span id="line4457"><span>		
</span></span><span id="line4458"><span>		// Lava Cloak
</span></span><span id="line4459"><span>		msg += "***Lava Cloak stats***\n";
</span></span><span id="line4460"><span>		msg += "Toomeria consumed per use: " + Round(12000 / 500) + ".\n";
</span></span><span id="line4461"><span>		msg += "Total uses from full spirit: " + Round(Spirit / 12000) + ".\n";
</span></span><span id="line4462"><span>		if(FPS == 1)
</span></span><span id="line4463"><span>			msg += "Frames to recover 1 use: " + Round(12000 / (SpiritRegen/100));
</span></span><span id="line4464"><span>		else
</span></span><span id="line4465"><span>			msg += "Time to recover 1 use: " + framesToMinutes(12000 / (SpiritRegen/100), FPS);
</span></span><span id="line4466"><span>		msg += ".\n";
</span></span><span id="line4467"><span>		msg += "\n";
</span></span><span id="line4468"><span>		
</span></span><span id="line4469"><span>		// Stone Girdle
</span></span><span id="line4470"><span>		msg += "***Stone Girdle stats***\n";
</span></span><span id="line4471"><span>		msg += "Toomeria consumed per use: " + Round(10000 / 500) + ".\n";
</span></span><span id="line4472"><span>		msg += "Total uses from full spirit: " + Round(Spirit / 10000) + ".\n";
</span></span><span id="line4473"><span>		if(FPS == 1)
</span></span><span id="line4474"><span>			msg += "Frames to recover 1 use: " + Round(10000 / (SpiritRegen/100));
</span></span><span id="line4475"><span>		else
</span></span><span id="line4476"><span>			msg += "Time to recover 1 use: " + framesToMinutes(10000 / (SpiritRegen/100), FPS);
</span></span><span id="line4477"><span>		msg += ".\n";
</span></span><span id="line4478"><span>    
</span></span><span id="line4479"><span>    var GirdleDur = 4 + (TGirdle * 2);
</span></span><span id="line4480"><span>    msg += "Duration: ";
</span></span><span id="line4481"><span>    if(TGirdle </span><span>&lt; </span><span>30)
</span></span><span id="line4482"><span>      msg += "N/A (30 ranks required)";
</span></span><span id="line4483"><span>    else if(FPS == 1)
</span></span><span id="line4484"><span>      msg += Math.floor(GirdleDur) + " frames";
</span></span><span id="line4485"><span>    else
</span></span><span id="line4486"><span>      msg += framesToMinutes(GirdleDur, FPS);
</span></span><span id="line4487"><span>		msg += ".\n";
</span></span><span id="line4488"><span>    
</span></span><span id="line4489"><span>    msg += "Unstone Self Damage: ";
</span></span><span id="line4490"><span>    if(TGirdle </span><span>&lt; </span><span>30) {
</span></span><span id="line4491"><span>      msg += "N/A (30 ranks required)";
</span></span><span id="line4492"><span>    }
</span></span><span id="line4493"><span>    else {
</span></span><span id="line4494"><span>      var divisor = (0.1 * TGirdle) - 1.8;
</span></span><span id="line4495"><span>      var dmg = Math.floor(Health / (divisor));
</span></span><span id="line4496"><span>      
</span></span><span id="line4497"><span>      msg += Round(HealthToHistia(dmg)) + " Histia (" + Round(100 / divisor) + "%)";
</span></span><span id="line4498"><span>    }
</span></span><span id="line4499"><span>		msg += ".\n";
</span></span><span id="line4500"><span>    
</span></span><span id="line4501"><span>    msg += "Current Health Increase: ";
</span></span><span id="line4502"><span>    if(TGirdle </span><span>&lt; </span><span>30) {
</span></span><span id="line4503"><span>      msg += "N/A (30 ranks required)";
</span></span><span id="line4504"><span>    }
</span></span><span id="line4505"><span>    else {
</span></span><span id="line4506"><span>      var m = 0.1 * (TGirdle-30);
</span></span><span id="line4507"><span>      var tempHP = Math.floor(Health * m);
</span></span><span id="line4508"><span>      
</span></span><span id="line4509"><span>      msg += Round(HealthToHistia(tempHP)) + " Histia (" + Round(100 * m) + "% of Max Health)";
</span></span><span id="line4510"><span>    }
</span></span><span id="line4511"><span>		msg += ".\n";
</span></span><span id="line4512"><span>    
</span></span><span id="line4513"><span>    msg += "Max Health in Stoneform: ";
</span></span><span id="line4514"><span>    if(TGirdle </span><span>&lt; </span><span>30) {
</span></span><span id="line4515"><span>      msg += "N/A (30 ranks required)";
</span></span><span id="line4516"><span>    }
</span></span><span id="line4517"><span>    else {
</span></span><span id="line4518"><span>      var m = 0.2 * (TGirdle-30);
</span></span><span id="line4519"><span>      var tempHP = Math.floor((Health - races[0][5]) * m);
</span></span><span id="line4520"><span>      
</span></span><span id="line4521"><span>      msg += Round(HealthToHistia(Health + tempHP)) + " Histia";
</span></span><span id="line4522"><span>      msg += " (Irrelevant unless getting healed in Stoneform)";
</span></span><span id="line4523"><span>    }
</span></span><span id="line4524"><span>		msg += ".\n";
</span></span><span id="line4525"><span>    
</span></span><span id="line4526"><span>    msg += "\n";
</span></span><span id="line4527"><span>    
</span></span><span id="line4528"><span>		msg += "-Total swings with boosted Atkite/Darkite assume you start from full balance and are swinging through the entire duration.\n";
</span></span><span id="line4529"><span>	}
</span></span><span id="line4530"><span>	else if(results == 6)	// Ranger abilities
</span></span><span id="line4531"><span>	{
</span></span><span id="line4532"><span>		msg = "***Goss stats***\n";
</span></span><span id="line4533"><span>		if(Weapon </span><span>&lt; </span><span>93 || Weapon &gt; 98)
</span></span><span id="line4534"><span>		{
</span></span><span id="line4535"><span>			msg += "To see Goss Spirit costs, select a Gossamer with studied bonuses.\n";
</span></span><span id="line4536"><span>		}
</span></span><span id="line4537"><span>		else 
</span></span><span id="line4538"><span>		{
</span></span><span id="line4539"><span>			if(Weapon != 98)
</span></span><span id="line4540"><span>			{
</span></span><span id="line4541"><span>				msg += "With a " + ((Weapon - 92)*10) + "% Family Bonus and " + AtkusReq + " Atkus needed to hit:\n";
</span></span><span id="line4542"><span>			}
</span></span><span id="line4543"><span>			else
</span></span><span id="line4544"><span>			{
</span></span><span id="line4545"><span>				msg += "With a full Studied Bonus and " + AtkusReq + " Atkus needed to hit:\n";			
</span></span><span id="line4546"><span>			}
</span></span><span id="line4547"><span>			msg += "Splash consumed per swing: " + Round( SpiritToSplash(GossSpiritCost) ) + ".\n";
</span></span><span id="line4548"><span>			msg += time_type_capital + "s to recover enough Spirit for 1 swing: " + Round( (GossSpiritCost / (SpiritRegen / 100) ) / FPS ) + ".\n";
</span></span><span id="line4549"><span>			msg += "Total swings before running out of Spirit if swinging every time you recover enough balance to swing: ";
</span></span><span id="line4550"><span>
</span></span><span id="line4551"><span>			if( BalanceCost &gt; Balance )
</span></span><span id="line4552"><span>			{
</span></span><span id="line4553"><span>				msg += "0 (Not enough Balthus).\n";
</span></span><span id="line4554"><span>			}
</span></span><span id="line4555"><span>			else if( Regen &gt; 0 &amp;&amp; ( BalanceCost / BalancePerTick(Regen) ) &gt;= (GossSpiritCost / (SpiritRegen / 100) ) )
</span></span><span id="line4556"><span>			{
</span></span><span id="line4557"><span>				msg += "Infinite.\n";
</span></span><span id="line4558"><span>			}
</span></span><span id="line4559"><span>			else
</span></span><span id="line4560"><span>			{
</span></span><span id="line4561"><span>				var BalLeft = Balance;
</span></span><span id="line4562"><span>				var SpiritLeft = Spirit;
</span></span><span id="line4563"><span>				var GossSwings = 0;
</span></span><span id="line4564"><span>				var WaitFrames = 1;
</span></span><span id="line4565"><span>				var NumFramesPrev = 0;
</span></span><span id="line4566"><span>				var NumFramesCurr = 0;
</span></span><span id="line4567"><span>				while( GossSwings </span><span>&lt;=</span><span> 200 )
</span></span><span id="line4568"><span>				{
</span></span><span id="line4569"><span>					WaitFrames = 1;
</span></span><span id="line4570"><span>
</span></span><span id="line4571"><span>					if(BalLeft </span><span>&lt; </span><span>0)
</span></span><span id="line4572"><span>					{
</span></span><span id="line4573"><span>						break;
</span></span><span id="line4574"><span>					}
</span></span><span id="line4575"><span>					else if(BalLeft &gt;= BalanceCost)
</span></span><span id="line4576"><span>					{
</span></span><span id="line4577"><span>						if(SpiritLeft </span><span>&lt; </span><span>GossSpiritCost)
</span></span><span id="line4578"><span>						{
</span></span><span id="line4579"><span>							break;
</span></span><span id="line4580"><span>						}
</span></span><span id="line4581"><span>						else
</span></span><span id="line4582"><span>						{
</span></span><span id="line4583"><span>							GossSwings++;
</span></span><span id="line4584"><span>							NumFramesPrev = NumFramesCurr;
</span></span><span id="line4585"><span>							BalLeft = BalLeft - BalanceCost;
</span></span><span id="line4586"><span>							SpiritLeft = SpiritLeft - GossSpiritCost;
</span></span><span id="line4587"><span>							WaitFrames = 4;
</span></span><span id="line4588"><span>						}
</span></span><span id="line4589"><span>					}
</span></span><span id="line4590"><span>					else if(Regen == 0)
</span></span><span id="line4591"><span>					{
</span></span><span id="line4592"><span>						break;
</span></span><span id="line4593"><span>					}
</span></span><span id="line4594"><span>					else
</span></span><span id="line4595"><span>					{
</span></span><span id="line4596"><span>						WaitFrames = Math.ceil( (BalanceCost - BalLeft) / BalancePerTick(Regen) );
</span></span><span id="line4597"><span>						if(WaitFrames </span><span>&lt; </span><span>1)
</span></span><span id="line4598"><span>							WaitFrames = 1;
</span></span><span id="line4599"><span>					}
</span></span><span id="line4600"><span>					
</span></span><span id="line4601"><span>					NumFramesCurr = NumFramesCurr + WaitFrames;
</span></span><span id="line4602"><span>					BalLeft = BalLeft + WaitFrames*BalancePerTick(Regen);
</span></span><span id="line4603"><span>					SpiritLeft = SpiritLeft + WaitFrames*(SpiritRegen / 100);
</span></span><span id="line4604"><span>					if(BalLeft &gt; Balance)
</span></span><span id="line4605"><span>						BalLeft = Balance;
</span></span><span id="line4606"><span>					if(SpiritLeft &gt; Spirit)
</span></span><span id="line4607"><span>						SpiritLeft = Spirit;
</span></span><span id="line4608"><span>				}
</span></span><span id="line4609"><span>				if(GossSwings &gt; 200)
</span></span><span id="line4610"><span>					msg += "OVER 200.\n";
</span></span><span id="line4611"><span>				else
</span></span><span id="line4612"><span>				{
</span></span><span id="line4613"><span>					msg += GossSwings + ".\n";
</span></span><span id="line4614"><span>					msg += "This would take " + Round(NumFramesPrev/FPS) + " " + time_type + "s.\n";
</span></span><span id="line4615"><span>				}
</span></span><span id="line4616"><span>			}
</span></span><span id="line4617"><span>			
</span></span><span id="line4618"><span>		}
</span></span><span id="line4619"><span>		msg += "\n";
</span></span><span id="line4620"><span>
</span></span><span id="line4621"><span>
</span></span><span id="line4622"><span>		msg += "***Morph stats***\n";
</span></span><span id="line4623"><span>		if(FPS == 1)
</span></span><span id="line4624"><span>			msg += "Frames of duration when using a morph that initially consumes ";
</span></span><span id="line4625"><span>		else
</span></span><span id="line4626"><span>			msg += "Duration when using a morph that initially consumes ";
</span></span><span id="line4627"><span>		var morphCost = parseFloat(data.MorphConsume.value);
</span></span><span id="line4628"><span>		if(!morphCost)
</span></span><span id="line4629"><span>			morphCost = 0;
</span></span><span id="line4630"><span>		msg += morphCost + " Splash: ";
</span></span><span id="line4631"><span>		morphCost = SplashToSpirit(morphCost);
</span></span><span id="line4632"><span>		if(Spirit </span><span>&lt; </span><span>morphCost)
</span></span><span id="line4633"><span>		{
</span></span><span id="line4634"><span>			msg += "0 (Not enough Splash)";
</span></span><span id="line4635"><span>		}
</span></span><span id="line4636"><span>		else
</span></span><span id="line4637"><span>		{
</span></span><span id="line4638"><span>			var SpiritLeft = Spirit - morphCost + (SpiritRegen/100); // !!! 1 Frame delay?
</span></span><span id="line4639"><span>			if(SpiritLeft &gt; Spirit)
</span></span><span id="line4640"><span>				SpiritLeft = Spirit;
</span></span><span id="line4641"><span>			var NumFrames = 1;
</span></span><span id="line4642"><span>			var WaitIncrease = 1;
</span></span><span id="line4643"><span>			var DrainRate = 16;
</span></span><span id="line4644"><span>			while(SpiritLeft &gt; 0)	//!!! Drops below 0 w/ all or just Heartwood?
</span></span><span id="line4645"><span>			{
</span></span><span id="line4646"><span>				SpiritLeft = SpiritLeft - DrainRate;
</span></span><span id="line4647"><span>				SpiritLeft = SpiritLeft + (SpiritRegen/100)
</span></span><span id="line4648"><span>				if(SpiritLeft &gt; Spirit)
</span></span><span id="line4649"><span>					SpiritLeft = Spirit;
</span></span><span id="line4650"><span>				
</span></span><span id="line4651"><span>				NumFrames++;
</span></span><span id="line4652"><span>				if(NumFrames &gt; 16000) break;
</span></span><span id="line4653"><span>				
</span></span><span id="line4654"><span>				WaitIncrease--;
</span></span><span id="line4655"><span>				if(WaitIncrease </span><span>&lt;=</span><span> 0)
</span></span><span id="line4656"><span>				{
</span></span><span id="line4657"><span>					DrainRate = DrainRate + 1;
</span></span><span id="line4658"><span>					WaitIncrease = 14;
</span></span><span id="line4659"><span>				}
</span></span><span id="line4660"><span>			}
</span></span><span id="line4661"><span>			if(NumFrames &gt; 16000) {
</span></span><span id="line4662"><span>				if(FPS == 1)
</span></span><span id="line4663"><span>					msg += "OVER 16000";
</span></span><span id="line4664"><span>				else
</span></span><span id="line4665"><span>					msg += "OVER " + framesToMinutes(16000, FPS);
</span></span><span id="line4666"><span>			}
</span></span><span id="line4667"><span>			else {
</span></span><span id="line4668"><span>				if(FPS == 1)
</span></span><span id="line4669"><span>					msg += NumFrames;
</span></span><span id="line4670"><span>				else
</span></span><span id="line4671"><span>					msg += framesToMinutes(NumFrames, FPS);
</span></span><span id="line4672"><span>			}
</span></span><span id="line4673"><span>		}
</span></span><span id="line4674"><span>		msg += ".\n";
</span></span><span id="line4675"><span>    /*
</span></span><span id="line4676"><span>		msg += "For morph Troilus stats, select the Health stats section.\n";
</span></span><span id="line4677"><span>		msg += "\n";
</span></span><span id="line4678"><span>    */
</span></span><span id="line4679"><span>    
</span></span><span id="line4680"><span>		msg += "***Befriend stats***\n";
</span></span><span id="line4681"><span>		if(FPS == 1)
</span></span><span id="line4682"><span>			msg += "Frames of duration when using a befriend that initially consumes ";
</span></span><span id="line4683"><span>		else
</span></span><span id="line4684"><span>			msg += "Duration when using a befriend that initially consumes ";
</span></span><span id="line4685"><span>		var befriendCost = parseFloat(data.BefriendConsume.value);
</span></span><span id="line4686"><span>		if(!befriendCost)
</span></span><span id="line4687"><span>			befriendCost = 0;
</span></span><span id="line4688"><span>		msg += befriendCost + " Splash: ";
</span></span><span id="line4689"><span>		befriendCost = SplashToSpirit(befriendCost);
</span></span><span id="line4690"><span>		if(Spirit </span><span>&lt; </span><span>befriendCost)
</span></span><span id="line4691"><span>		{
</span></span><span id="line4692"><span>			msg += "0 (Not enough Splash)";
</span></span><span id="line4693"><span>		}
</span></span><span id="line4694"><span>		else
</span></span><span id="line4695"><span>		{
</span></span><span id="line4696"><span>			var SpiritLeft = Spirit - befriendCost + 4*(SpiritRegen/100);	// 4 frame delay.
</span></span><span id="line4697"><span>			if(SpiritLeft &gt; Spirit)
</span></span><span id="line4698"><span>				SpiritLeft = Spirit;
</span></span><span id="line4699"><span>			var NumFrames = 0;
</span></span><span id="line4700"><span>			var WaitIncrease = 1;
</span></span><span id="line4701"><span>			var DrainRate = 30;
</span></span><span id="line4702"><span>			while(SpiritLeft &gt; 0)	//!!! Drops below 0 w/ all or just Heartwood?
</span></span><span id="line4703"><span>			{
</span></span><span id="line4704"><span>				SpiritLeft = SpiritLeft - DrainRate;
</span></span><span id="line4705"><span>				SpiritLeft = SpiritLeft + (SpiritRegen/100)
</span></span><span id="line4706"><span>				if(SpiritLeft &gt; Spirit)
</span></span><span id="line4707"><span>					SpiritLeft = Spirit;
</span></span><span id="line4708"><span>				
</span></span><span id="line4709"><span>				NumFrames++;
</span></span><span id="line4710"><span>				if(NumFrames &gt; 16000) break;
</span></span><span id="line4711"><span>				
</span></span><span id="line4712"><span>				WaitIncrease--;
</span></span><span id="line4713"><span>				if(WaitIncrease </span><span>&lt;=</span><span> 0)
</span></span><span id="line4714"><span>				{
</span></span><span id="line4715"><span>					DrainRate = DrainRate + 2;
</span></span><span id="line4716"><span>					WaitIncrease = 11;
</span></span><span id="line4717"><span>				}
</span></span><span id="line4718"><span>			}
</span></span><span id="line4719"><span>			if(NumFrames &gt; 16000) {
</span></span><span id="line4720"><span>				if(FPS == 1)
</span></span><span id="line4721"><span>					msg += "OVER 16000";
</span></span><span id="line4722"><span>				else
</span></span><span id="line4723"><span>					msg += "OVER " + framesToMinutes(16000, FPS);
</span></span><span id="line4724"><span>			}
</span></span><span id="line4725"><span>			else {
</span></span><span id="line4726"><span>				if(FPS == 1)
</span></span><span id="line4727"><span>					msg += NumFrames;
</span></span><span id="line4728"><span>				else
</span></span><span id="line4729"><span>					msg += framesToMinutes(NumFrames, FPS);
</span></span><span id="line4730"><span>			}
</span></span><span id="line4731"><span>		}
</span></span><span id="line4732"><span>		msg += ".\n";
</span></span><span id="line4733"><span>		msg += "\n";
</span></span><span id="line4734"><span>
</span></span><span id="line4735"><span>		
</span></span><span id="line4736"><span>		msg += "***Heartwood Charm stats***\n";
</span></span><span id="line4737"><span>		msg += "Initially consumes " + Round( SpiritToSplash(2550) ) + " Splash.\n";
</span></span><span id="line4738"><span>		if(FPS == 1)
</span></span><span id="line4739"><span>			msg += "Frames of duration: ";
</span></span><span id="line4740"><span>		else
</span></span><span id="line4741"><span>			msg += "Duration: ";
</span></span><span id="line4742"><span>		if(Spirit </span><span>&lt; </span><span>2550)
</span></span><span id="line4743"><span>		{
</span></span><span id="line4744"><span>			msg += "0 (Not enough Splash)";
</span></span><span id="line4745"><span>		}
</span></span><span id="line4746"><span>		else
</span></span><span id="line4747"><span>		{
</span></span><span id="line4748"><span>			var SpiritLeft = Spirit - 2550 + 13*(SpiritRegen/100);	// 4 frame delay.
</span></span><span id="line4749"><span>			if(SpiritLeft &gt; Spirit)
</span></span><span id="line4750"><span>				SpiritLeft = Spirit;
</span></span><span id="line4751"><span>			var NumFrames = 0;
</span></span><span id="line4752"><span>			var WaitIncrease = 1;
</span></span><span id="line4753"><span>			var DrainRate = 12;
</span></span><span id="line4754"><span>			while(SpiritLeft &gt; 0)	//!!! Drops below 0 w/ all or just Heartwood?
</span></span><span id="line4755"><span>			{
</span></span><span id="line4756"><span>				SpiritLeft = SpiritLeft - DrainRate;
</span></span><span id="line4757"><span>				SpiritLeft = SpiritLeft + (SpiritRegen/100)
</span></span><span id="line4758"><span>				if(SpiritLeft &gt; Spirit)
</span></span><span id="line4759"><span>					SpiritLeft = Spirit;
</span></span><span id="line4760"><span>				
</span></span><span id="line4761"><span>				NumFrames++;
</span></span><span id="line4762"><span>				if(NumFrames &gt; 16000) break;
</span></span><span id="line4763"><span>				
</span></span><span id="line4764"><span>				WaitIncrease--;
</span></span><span id="line4765"><span>				if(WaitIncrease </span><span>&lt;=</span><span> 0)
</span></span><span id="line4766"><span>				{
</span></span><span id="line4767"><span>					DrainRate = DrainRate + 3;
</span></span><span id="line4768"><span>					WaitIncrease = 18;
</span></span><span id="line4769"><span>				}
</span></span><span id="line4770"><span>			}
</span></span><span id="line4771"><span>			if(NumFrames &gt; 16000) {
</span></span><span id="line4772"><span>				if(FPS == 1)
</span></span><span id="line4773"><span>					msg += "OVER 16000";
</span></span><span id="line4774"><span>				else
</span></span><span id="line4775"><span>					msg += "OVER " + framesToMinutes(16000, FPS);
</span></span><span id="line4776"><span>			}
</span></span><span id="line4777"><span>			else {
</span></span><span id="line4778"><span>				if(FPS == 1)
</span></span><span id="line4779"><span>					msg += NumFrames;
</span></span><span id="line4780"><span>				else
</span></span><span id="line4781"><span>					msg += framesToMinutes(NumFrames, FPS);
</span></span><span id="line4782"><span>			}
</span></span><span id="line4783"><span>		}
</span></span><span id="line4784"><span>		msg += ".\n";
</span></span><span id="line4785"><span>		msg += "\n";
</span></span><span id="line4786"><span>		
</span></span><span id="line4787"><span>		
</span></span><span id="line4788"><span>		msg += "***Tracking stats***\n";
</span></span><span id="line4789"><span>		msg += "(Placeholder)\n";
</span></span><span id="line4790"><span>		msg += "\n";
</span></span><span id="line4791"><span>
</span></span><span id="line4792"><span>		msg += "-Set the initial amount of Spirit consumed by morphs and befriends in the Spirit Simulator below.\n";
</span></span><span id="line4793"><span>		msg += "-The initial amount of Spirit consumed by the Heartwood Charm is constant.\n";
</span></span><span id="line4794"><span>	}
</span></span><span id="line4795"><span>	else if(results == 7)	// Bloodmage abilities
</span></span><span id="line4796"><span>	{
</span></span><span id="line4797"><span>		msg = "(Placeholder)\n";
</span></span><span id="line4798"><span>	}
</span></span><span id="line4799"><span>	else if(results == 8)	// No Subclass
</span></span><span id="line4800"><span>	{
</span></span><span id="line4801"><span>		msg = "You have no subclass selected.\n";
</span></span><span id="line4802"><span>	}
</span></span><span id="line4803"><span>	else if(results == 3)	// Health
</span></span><span id="line4804"><span>	{
</span></span><span id="line4805"><span>		// Troilus
</span></span><span id="line4806"><span>		msg = "***Troilus stats***\n";
</span></span><span id="line4807"><span>		msg += "Histia regenerated per " + time_type + ": " + RoundLong( FPS*HealthToHistia(Regeneration/100) ) + ".\n";
</span></span><span id="line4808"><span>		if(FPS == 1)
</span></span><span id="line4809"><span>			msg += "Frames to recover full health: " + Round( Health / (Regeneration/100) ) + ".\n";
</span></span><span id="line4810"><span>		else
</span></span><span id="line4811"><span>			msg += "Time to recover full health: " + framesToMinutes(Health / (Regeneration/100), FPS) + ".\n";
</span></span><span id="line4812"><span>		msg += "\n";
</span></span><span id="line4813"><span>		
</span></span><span id="line4814"><span>		// Morph Troilus
</span></span><span id="line4815"><span>    /*
</span></span><span id="line4816"><span>		msg += "***Morph Troilus stats***\n";
</span></span><span id="line4817"><span>		var morphRegeneration = 100 + (6 * (Regeneration-100));
</span></span><span id="line4818"><span>		msg += "Maximum effective Troilus when morphed (race/item stats included): " + Round( RegenerationToTroilus(morphRegeneration) ) + ".\n";
</span></span><span id="line4819"><span>		msg += "Histia regenerated per " + time_type + ": " + RoundLong( FPS*HealthToHistia(morphRegeneration/100) ) + ".\n";
</span></span><span id="line4820"><span>		if(FPS == 1)
</span></span><span id="line4821"><span>			msg += "Frames to recover full health (if morph has more Histia than you): " + Round( Health / (morphRegeneration/100) ) + ".\n";
</span></span><span id="line4822"><span>		else
</span></span><span id="line4823"><span>			msg += "Time to recover your normal full health (if morph has more Histia than you): " + framesToMinutes(Health / (morphRegeneration/100), FPS) + ".\n";
</span></span><span id="line4824"><span>		msg += "\n";
</span></span><span id="line4825"><span>    */
</span></span><span id="line4826"><span>    
</span></span><span id="line4827"><span>		// Rodnus
</span></span><span id="line4828"><span>		var HealIncrease = Math.floor(HealingReceptivity / 4);
</span></span><span id="line4829"><span>		var DrainIncrease = HealIncrease / 2;	// Don't round off because the healer's heal rate would need to be added in first.
</span></span><span id="line4830"><span>		msg += "***Rodnus/Spirtus stats***\n";
</span></span><span id="line4831"><span>		msg += "Extra Histia/" + time_type + " healed from each healer: " + RoundLong( FPS*HealthToHistia(HealIncrease) ) + ".\n";
</span></span><span id="line4832"><span>		msg += "Equivalent to increasing their Faustus by: " + Round( HealIncrease / 0.33 ) + ".\n";
</span></span><span id="line4833"><span>		msg += "Equivalent to increasing your Troilus by " + Round( HealIncrease / 0.06 ) + " for each healer on you.\n";
</span></span><span id="line4834"><span>		msg += "Healers are drained of an extra " + Round( FPS*(DrainIncrease / 120) ) + " Higgrus per " + time_type + ".\n";
</span></span><span id="line4835"><span>		msg += "\n";
</span></span><span id="line4836"><span>		
</span></span><span id="line4837"><span>		// Armor
</span></span><span id="line4838"><span>		msg += "***Armor stats***\n";
</span></span><span id="line4839"><span>		msg += "Total amount of damage (in terms of Histia) you're able to take before falling, without any healing:\n";
</span></span><span id="line4840"><span>		msg += "With no armor: " + Round( HealthToHistia(Health) ) + ".\n";
</span></span><span id="line4841"><span>		var damageReduction = 0.03;
</span></span><span id="line4842"><span>		msg += "With Bronze Helmet (3% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4843"><span>		var damageReduction = 0.04;
</span></span><span id="line4844"><span>		msg += "With Rockodile Breastplate (4% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4845"><span>		var damageReduction = 0.05;
</span></span><span id="line4846"><span>		msg += "With Iron Helmet (5% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4847"><span>		var damageReduction = 0.07;
</span></span><span id="line4848"><span>		msg += "With Bronze Shield (7% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4849"><span>		var damageReduction = 0.08;
</span></span><span id="line4850"><span>		msg += "With Iron Shield (8% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4851"><span>		var damageReduction = 0.09;
</span></span><span id="line4852"><span>		msg += "With Bronze BP (9% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4853"><span>		var damageReduction = 0.09;
</span></span><span id="line4854"><span>		msg += "With Iron Helmet + Rockodile BP (9% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4855"><span>		var damageReduction = 0.11;
</span></span><span id="line4856"><span>		msg += "With Iron Breastplate (11% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4857"><span>		var damageReduction = 0.09;
</span></span><span id="line4858"><span>		msg += "With Iron Helmet + Iron Shield (13% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4859"><span>		var damageReduction = 0.16;
</span></span><span id="line4860"><span>		msg += "With Iron Helmet + Iron BP (16% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4861"><span>		var damageReduction = 0.19;
</span></span><span id="line4862"><span>		msg += "With full Bronze set (19% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4863"><span>		var damageReduction = 0.19;
</span></span><span id="line4864"><span>		msg += "With Iron Shield + Iron BP (19% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4865"><span>		var damageReduction = 0.24;
</span></span><span id="line4866"><span>		msg += "With full Iron set (24% protection): " + Round( HealthToHistia( Health*( 1/(1-damageReduction) ) ) ) + ".\n";
</span></span><span id="line4867"><span>		msg += "\n";
</span></span><span id="line4868"><span>
</span></span><span id="line4869"><span>
</span></span><span id="line4870"><span>	}
</span></span><span id="line4871"><span>	else if(results == 100)	// Personal Notes
</span></span><span id="line4872"><span>	{
</span></span><span id="line4873"><span>		msg = CurrNotes;
</span></span><span id="line4874"><span>	}
</span></span><span id="line4875"><span>	else	// Integer Values
</span></span><span id="line4876"><span>	{
</span></span><span id="line4877"><span>    msg = "";
</span></span><span id="line4878"><span>    
</span></span><span id="line4879"><span>    var o = CalculateTotalRanks();
</span></span><span id="line4880"><span>    
</span></span><span id="line4881"><span>    msg += o[0];
</span></span><span id="line4882"><span>    if(o[2])
</span></span><span id="line4883"><span>      msg += " ESTIMATED";
</span></span><span id="line4884"><span>    msg += " Trained Ranks.\n";
</span></span><span id="line4885"><span>    
</span></span><span id="line4886"><span>    msg += o[1] + " Effective Ranks.\n";
</span></span><span id="line4887"><span>    
</span></span><span id="line4888"><span>    msg += CalculateSlaughter() + " ESTIMATED Slaughter Points.\n";
</span></span><span id="line4889"><span>		msg += "\n";
</span></span><span id="line4890"><span>    
</span></span><span id="line4891"><span>		msg += Math.floor(Health) + " Max Health.\n";
</span></span><span id="line4892"><span>		msg += Math.floor(Balance) + " Max Balance.\n";
</span></span><span id="line4893"><span>		msg += Math.floor(Spirit) + " Max Spirit.\n";
</span></span><span id="line4894"><span>		msg += Math.floor(Regeneration) + " Health Regen stat.\n";
</span></span><span id="line4895"><span>		msg += Math.floor(Regen) + " Balance Regen stat.\n";
</span></span><span id="line4896"><span>		msg += Math.floor(SpiritRegen) + " Spirit Regen stat.\n";
</span></span><span id="line4897"><span>		msg += Math.floor(HealingReceptivity) + " Healing Receptivity stat.\n";
</span></span><span id="line4898"><span>		msg += Math.floor(Accuracy) + " Accuracy stat.\n";
</span></span><span id="line4899"><span>		msg += Math.floor(Defense) + " Defense stat.\n";
</span></span><span id="line4900"><span>		msg += Math.floor(MinDamage) + " Minimum Damage stat.\n";
</span></span><span id="line4901"><span>		msg += Math.floor(MaxDamage) + " Maximum Damage stat.\n";
</span></span><span id="line4902"><span>		msg += "\n";
</span></span><span id="line4903"><span>		
</span></span><span id="line4904"><span>		msg += Math.floor((UMinDamage+100)) + "-" + Math.floor(((UMaxDamage*3)+100)) + " random damage range.\n";
</span></span><span id="line4905"><span>		msg += Math.floor(BalanceCost) + " Balance consumed per swing";
</span></span><span id="line4906"><span>    if(BalanceCostUncapped </span><span>&lt; </span><span>BalanceCost)
</span></span><span id="line4907"><span>   		msg += " (" + Math.floor(BalanceCostUncapped) + " before minimum balance cost is applied)";
</span></span><span id="line4908"><span>    msg += ".\n";
</span></span><span id="line4909"><span>		msg += Math.floor(ShieldstoneDrain) + " initial Spirit drained per frame by Shieldstone.\n";
</span></span><span id="line4910"><span>		msg += (Math.floor(Regeneration)/100) + " Health recovered per frame on average.\n"
</span></span><span id="line4911"><span>		msg += Round(BalancePerTick(Regen)) + " Balance recovered per frame on average.\n"
</span></span><span id="line4912"><span>		msg += (Math.floor(SpiritRegen)/100) + " Spirit recovered per frame on average.\n"
</span></span><span id="line4913"><span>    msg += "\n";
</span></span><span id="line4914"><span>    
</span></span><span id="line4915"><span>	}
</span></span><span id="line4916"><span>	data.ResultsText.value = msg;
</span></span><span id="line4917"><span>	
</span></span><span id="line4918"><span>	if(Bal &gt; Balance || Bal == BalMax)
</span></span><span id="line4919"><span>		Bal = Balance;
</span></span><span id="line4920"><span>	BalMax = Balance;
</span></span><span id="line4921"><span>	BalReg = BalancePerTick(Regen);
</span></span><span id="line4922"><span>	BalUse = BalanceCost;
</span></span><span id="line4923"><span>	//BalSwing = 0;
</span></span><span id="line4924"><span>	//BalSwung = 0;
</span></span><span id="line4925"><span>	//SwingForever = 0;
</span></span><span id="line4926"><span>
</span></span><span id="line4927"><span>	RangerDrain[0] = 0;
</span></span><span id="line4928"><span>	RangerDrain[1] = 0;
</span></span><span id="line4929"><span>	RangerDrain[2] = 0;
</span></span><span id="line4930"><span>	SSOn = 0;
</span></span><span id="line4931"><span>	ESTimer = 0;
</span></span><span id="line4932"><span>	data.IteButton.disabled = 0;
</span></span><span id="line4933"><span>
</span></span><span id="line4934"><span>	SwingDrain = GossSpiritCost;
</span></span><span id="line4935"><span>
</span></span><span id="line4936"><span>	if(HP &gt; Health || HP == HPMax)
</span></span><span id="line4937"><span>		HP = Health;
</span></span><span id="line4938"><span>	HPMax = Health;
</span></span><span id="line4939"><span>	HPReg = Regeneration / 100;
</span></span><span id="line4940"><span>
</span></span><span id="line4941"><span>	if(SP &gt; Spirit || SP == SPMax)
</span></span><span id="line4942"><span>		SP = Spirit;
</span></span><span id="line4943"><span>	SPMax = Spirit;
</span></span><span id="line4944"><span>	SPReg = SpiritRegen / 100;
</span></span><span id="line4945"><span>
</span></span><span id="line4946"><span>	SSDrain = ShieldstoneDrain;
</span></span><span id="line4947"><span>  SSDrainInc10 = ShieldstoneDrainInc10;
</span></span><span id="line4948"><span>
</span></span><span id="line4949"><span>	setEnemyStats();
</span></span><span id="line4950"><span>}
</span></span><span id="line4951"><span>
</span></span><span id="line4952"><span>function CalculateSlaughter() {
</span></span><span id="line4953"><span>	var data = document.getElementById("data");
</span></span><span id="line4954"><span>
</span></span><span id="line4955"><span>	var EAtkus = parseFloat(data.EAtkus.value);
</span></span><span id="line4956"><span>	if(!EAtkus) EAtkus = 0;
</span></span><span id="line4957"><span>	var TAtkus = parseFloat(data.TAtkus.value);
</span></span><span id="line4958"><span>	if(!TAtkus) TAtkus = 0;
</span></span><span id="line4959"><span>	var EDarkus = parseFloat(data.EDarkus.value);
</span></span><span id="line4960"><span>	if(!EDarkus) EDarkus = 0;
</span></span><span id="line4961"><span>	var TDarkus = parseFloat(data.TDarkus.value);
</span></span><span id="line4962"><span>	if(!TDarkus) TDarkus = 0;
</span></span><span id="line4963"><span>	var TDarktur = parseFloat(data.TDarktur.value);
</span></span><span id="line4964"><span>	if(!TDarktur) TDarktur = 0;
</span></span><span id="line4965"><span>	var EBalthus = parseFloat(data.EBalthus.value);
</span></span><span id="line4966"><span>	if(!EBalthus) EBalthus = 0;
</span></span><span id="line4967"><span>	var TBalthus = parseFloat(data.TBalthus.value);
</span></span><span id="line4968"><span>	if(!TBalthus) TBalthus = 0;
</span></span><span id="line4969"><span>	var ERegia = parseFloat(data.ERegia.value);
</span></span><span id="line4970"><span>	if(!ERegia) ERegia = 0;
</span></span><span id="line4971"><span>	var TRegia = parseFloat(data.TRegia.value);
</span></span><span id="line4972"><span>	if(!TRegia) TRegia = 0;
</span></span><span id="line4973"><span>	var TEvus = parseFloat(data.TEvus.value);
</span></span><span id="line4974"><span>	if(!TEvus) TEvus = 0;
</span></span><span id="line4975"><span>	var TSwengus = parseFloat(data.TSwengus.value);
</span></span><span id="line4976"><span>	if(!TSwengus) TSwengus = 0;
</span></span><span id="line4977"><span>	var EHistia = parseFloat(data.EHistia.value);
</span></span><span id="line4978"><span>	if(!EHistia) EHistia = 0;
</span></span><span id="line4979"><span>	var THistia = parseFloat(data.THistia.value);
</span></span><span id="line4980"><span>	if(!THistia) THistia = 0;
</span></span><span id="line4981"><span>	var EDetha = parseFloat(data.EDetha.value);
</span></span><span id="line4982"><span>	if(!EDetha) EDetha = 0;
</span></span><span id="line4983"><span>	var TDetha = parseFloat(data.TDetha.value);
</span></span><span id="line4984"><span>	if(!TDetha) TDetha = 0;
</span></span><span id="line4985"><span>  
</span></span><span id="line4986"><span>	var TBodrus = parseFloat(data.TBodrus.value);
</span></span><span id="line4987"><span>	if(!TBodrus) TBodrus = 0;
</span></span><span id="line4988"><span>	var THardia = parseFloat(data.THardia.value);
</span></span><span id="line4989"><span>	if(!THardia) THardia = 0;
</span></span><span id="line4990"><span>	var ETroilus = parseFloat(data.ETroilus.value);
</span></span><span id="line4991"><span>	if(!ETroilus) ETroilus = 0;
</span></span><span id="line4992"><span>	var TTroilus = parseFloat(data.TTroilus.value);
</span></span><span id="line4993"><span>	if(!TTroilus) TTroilus = 0;
</span></span><span id="line4994"><span>	var ERodnus = parseFloat(data.ERodnus.value);
</span></span><span id="line4995"><span>	if(!ERodnus) ERodnus = 0;
</span></span><span id="line4996"><span>	var TRodnus = parseFloat(data.TRodnus.value);
</span></span><span id="line4997"><span>	if(!TRodnus) TRodnus = 0;
</span></span><span id="line4998"><span>	var TKnox = parseFloat(data.TKnox.value);
</span></span><span id="line4999"><span>	if(!TKnox) TKnox = 0;
</span></span><span id="line5000"><span>	var TAngilsa = parseFloat(data.TAngilsa.value);
</span></span><span id="line5001"><span>	if(!TAngilsa) TAngilsa = 0;
</span></span><span id="line5002"><span>  
</span></span><span id="line5003"><span>	var TFell = parseFloat(data.TFell.value);
</span></span><span id="line5004"><span>	if(!TFell) TFell = 0;
</span></span><span id="line5005"><span>	var TChan = parseFloat(data.TChan.value);
</span></span><span id="line5006"><span>	if(!TChan) TChan = 0;
</span></span><span id="line5007"><span>	var TAtkite = parseFloat(data.TAtkite.value);
</span></span><span id="line5008"><span>	if(!TAtkite) TAtkite = 0;
</span></span><span id="line5009"><span>	var TDarkite = parseFloat(data.TDarkite.value);
</span></span><span id="line5010"><span>	if(!TDarkite) TDarkite = 0;
</span></span><span id="line5011"><span>	var TBalthite = parseFloat(data.TBalthite.value);
</span></span><span id="line5012"><span>	if(!TBalthite) TBalthite = 0;
</span></span><span id="line5013"><span>	var TDethite = parseFloat(data.TDethite.value);
</span></span><span id="line5014"><span>	if(!TDethite) TDethite = 0;
</span></span><span id="line5015"><span>
</span></span><span id="line5016"><span>	var TGoss = parseFloat(data.TGoss.value);
</span></span><span id="line5017"><span>	if(!TGoss) TGoss = 0;
</span></span><span id="line5018"><span>
</span></span><span id="line5019"><span>	var TErthron = parseFloat(data.TErthron.value);
</span></span><span id="line5020"><span>	if(!TErthron) TErthron = 0;
</span></span><span id="line5021"><span>	var TErthronNew = parseFloat(data.TErthronNew.value);
</span></span><span id="line5022"><span>	if(!TErthronNew) TErthronNew = 0;
</span></span><span id="line5023"><span>	var TForvyola = parseFloat(data.TForvyola.value);
</span></span><span id="line5024"><span>	if(!TForvyola) TForvyola = 0;
</span></span><span id="line5025"><span>	var TBangus = parseFloat(data.TBangus.value);
</span></span><span id="line5026"><span>	if(!TBangus) TBangus = 0;
</span></span><span id="line5027"><span>	var TFarly = parseFloat(data.TFarly.value);
</span></span><span id="line5028"><span>	if(!TFarly) TFarly = 0;
</span></span><span id="line5029"><span>
</span></span><span id="line5030"><span>	var TToomeria = parseFloat(data.TToomeria.value);
</span></span><span id="line5031"><span>	if(!TToomeria) TToomeria = 0;
</span></span><span id="line5032"><span>	var TSplash = parseFloat(data.TSplash.value);
</span></span><span id="line5033"><span>	if(!TSplash) TSplash = 0;
</span></span><span id="line5034"><span>	var TSplashOld = parseFloat(data.TSplashOld.value);
</span></span><span id="line5035"><span>	if(!TSplashOld) TSplashOld = 0;
</span></span><span id="line5036"><span>	var TRespin = parseFloat(data.TRespin.value);
</span></span><span id="line5037"><span>	if(!TRespin) TRespin = 0;
</span></span><span id="line5038"><span>	var TChampReg = parseFloat(data.TChampReg.value);
</span></span><span id="line5039"><span>	if(!TChampReg) TChampReg = 0;
</span></span><span id="line5040"><span>	var TDuvin = parseFloat(data.TDuvin.value);
</span></span><span id="line5041"><span>	if(!TDuvin) TDuvin = 0;
</span></span><span id="line5042"><span>	var THeen = parseFloat(data.THeen.value);
</span></span><span id="line5043"><span>	if(!THeen) THeen = 0;
</span></span><span id="line5044"><span>
</span></span><span id="line5045"><span>	var TSpiritus = parseFloat(data.TSpiritus.value);
</span></span><span id="line5046"><span>	if(!TSpiritus) TSpiritus = 0;
</span></span><span id="line5047"><span>	var ESpiritus = parseFloat(data.ESpiritus.value);
</span></span><span id="line5048"><span>	if(!ESpiritus) ESpiritus = 0;
</span></span><span id="line5049"><span>	var TTracking = parseFloat(data.TTracking.value);
</span></span><span id="line5050"><span>	if(!TTracking) TTracking = 0;
</span></span><span id="line5051"><span>	var TCrato = parseFloat(data.TCrato.value);
</span></span><span id="line5052"><span>	if(!TCrato) TCrato = 0;
</span></span><span id="line5053"><span>	var TSpleisha = parseFloat(data.TSpleisha.value);
</span></span><span id="line5054"><span>	if(!TSpleisha) TSpleisha = 0;
</span></span><span id="line5055"><span>	var TSpleishaOld = parseFloat(data.TSpleishaOld.value);
</span></span><span id="line5056"><span>	if(!TSpleishaOld) TSpleishaOld = 0;
</span></span><span id="line5057"><span>	var TBB = parseFloat(data.TBB.value);
</span></span><span id="line5058"><span>	if(!TBB) TBB = 0;
</span></span><span id="line5059"><span>
</span></span><span id="line5060"><span>	var TAktur = parseFloat(data.TAktur.value);
</span></span><span id="line5061"><span>	if(!TAktur) TAktur = 0;
</span></span><span id="line5062"><span>	var TAtkia = parseFloat(data.TAtkia.value);
</span></span><span id="line5063"><span>	if(!TAtkia) TAtkia = 0;
</span></span><span id="line5064"><span>	var TCloak = parseFloat(data.TCloak.value);
</span></span><span id="line5065"><span>	if(!TCloak) TCloak = 0;
</span></span><span id="line5066"><span>	var TGirdle = parseFloat(data.TGirdle.value);
</span></span><span id="line5067"><span>	if(!TGirdle) TGirdle = 0;
</span></span><span id="line5068"><span>
</span></span><span id="line5069"><span>	var TCryptus = parseFloat(data.TCryptus.value);
</span></span><span id="line5070"><span>	if(!TCryptus) TCryptus = 0;
</span></span><span id="line5071"><span>	var TDisabla = parseFloat(data.TDisabla.value);
</span></span><span id="line5072"><span>	if(!TDisabla) TDisabla = 0;
</span></span><span id="line5073"><span>	var TDantus = parseFloat(data.TDantus.value);
</span></span><span id="line5074"><span>	if(!TDantus) TDantus = 0;
</span></span><span id="line5075"><span>	var TAneurus = parseFloat(data.TAneurus.value);
</span></span><span id="line5076"><span>	if(!TAneurus) TAneurus = 0;
</span></span><span id="line5077"><span>	var TPosuhm = parseFloat(data.TPosuhm.value);
</span></span><span id="line5078"><span>	if(!TPosuhm) TPosuhm = 0;
</span></span><span id="line5079"><span>	var TAnemia = parseFloat(data.TAnemia.value);
</span></span><span id="line5080"><span>	if(!TAnemia) TAnemia = 0;
</span></span><span id="line5081"><span>	var TStedfustus = parseFloat(data.TStedfustus.value);
</span></span><span id="line5082"><span>	if(!TStedfustus) TStedfustus = 0;
</span></span><span id="line5083"><span>  
</span></span><span id="line5084"><span>  
</span></span><span id="line5085"><span>	var Subclass = data.Subclass.value;
</span></span><span id="line5086"><span>	var Race = parseInt(data.Race.value);
</span></span><span id="line5087"><span>	var Weapon = data.Weapon.value;
</span></span><span id="line5088"><span>	var Left = data.Lefthand.value;
</span></span><span id="line5089"><span>	var Shoulder = data.Shoulder.value;
</span></span><span id="line5090"><span>  
</span></span><span id="line5091"><span>	if(Subclass != 1)	// Not Champion
</span></span><span id="line5092"><span>	{
</span></span><span id="line5093"><span>		//TErthron = 0;
</span></span><span id="line5094"><span>		//TErthronNew = 0;
</span></span><span id="line5095"><span>		//TForvyola = 0;
</span></span><span id="line5096"><span>		TChan = 0;
</span></span><span id="line5097"><span>		TAtkite = 0;
</span></span><span id="line5098"><span>		TDarkite = 0;
</span></span><span id="line5099"><span>		TBalthite = 0;
</span></span><span id="line5100"><span>		TDethite = 0;
</span></span><span id="line5101"><span>		TToomeria = 0;
</span></span><span id="line5102"><span>		TChampReg = 0;
</span></span><span id="line5103"><span>		TCloak = 0;
</span></span><span id="line5104"><span>		TGirdle = 0;
</span></span><span id="line5105"><span>	}
</span></span><span id="line5106"><span>	if(Subclass != 2)	// Not Ranger
</span></span><span id="line5107"><span>	{
</span></span><span id="line5108"><span>		TDuvin = 0;
</span></span><span id="line5109"><span>		TSplash = 0;
</span></span><span id="line5110"><span>		TSplashOld = 0;
</span></span><span id="line5111"><span>		TRespin = 0;
</span></span><span id="line5112"><span>		TTracking = 0;
</span></span><span id="line5113"><span>		//TFarly = 0;
</span></span><span id="line5114"><span>		//TBangus = 0;
</span></span><span id="line5115"><span>	}
</span></span><span id="line5116"><span>	if(Subclass != 3)	// Not Bloodmage
</span></span><span id="line5117"><span>	{
</span></span><span id="line5118"><span>		TCryptus = 0;
</span></span><span id="line5119"><span>		TDisabla = 0;
</span></span><span id="line5120"><span>		TDantus = 0;
</span></span><span id="line5121"><span>		TAneurus = 0;
</span></span><span id="line5122"><span>		TPosuhm = 0;
</span></span><span id="line5123"><span>		//TAnemia = 0;
</span></span><span id="line5124"><span>		//TStedfustus = 0;		
</span></span><span id="line5125"><span>	}
</span></span><span id="line5126"><span>	
</span></span><span id="line5127"><span>  
</span></span><span id="line5128"><span>  var s = 0;
</span></span><span id="line5129"><span>  
</span></span><span id="line5130"><span>  // Known Slaughter
</span></span><span id="line5131"><span>  
</span></span><span id="line5132"><span>  s += TAtkus * 21;
</span></span><span id="line5133"><span>  s += TDarkus * 19;
</span></span><span id="line5134"><span>  s += TBalthus * 18;
</span></span><span id="line5135"><span>  s += TRegia * 18;
</span></span><span id="line5136"><span>  s += TEvus * 24;
</span></span><span id="line5137"><span>  s += TSwengus * 18;
</span></span><span id="line5138"><span>  s += THistia * 29;
</span></span><span id="line5139"><span>  s += TDetha * 22;
</span></span><span id="line5140"><span>  
</span></span><span id="line5141"><span>  s += TBodrus * 24;
</span></span><span id="line5142"><span>  s += THardia * 30;
</span></span><span id="line5143"><span>  s += TTroilus * 20;
</span></span><span id="line5144"><span>  s += TSpiritus * 20;
</span></span><span id="line5145"><span>  s += TAktur * 22;
</span></span><span id="line5146"><span>  s += TAtkia * 21;
</span></span><span id="line5147"><span>  s += TDarktur * 20;
</span></span><span id="line5148"><span>  s += TAngilsa * 10;
</span></span><span id="line5149"><span>  s += TKnox * 12;
</span></span><span id="line5150"><span>  s += THeen * 20;
</span></span><span id="line5151"><span>  s += TSpleisha * 20;
</span></span><span id="line5152"><span>  
</span></span><span id="line5153"><span>  s += TChan * 21;
</span></span><span id="line5154"><span>  s += TErthronNew * 25;
</span></span><span id="line5155"><span>  
</span></span><span id="line5156"><span>  s += TBangus * 23;
</span></span><span id="line5157"><span>  s += TFarly * 22;
</span></span><span id="line5158"><span>  s += TRespin * 20;
</span></span><span id="line5159"><span>  
</span></span><span id="line5160"><span>  s += TStedfustus * 25;
</span></span><span id="line5161"><span>  
</span></span><span id="line5162"><span>  // Trained Ranks (Estimated)
</span></span><span id="line5163"><span>  
</span></span><span id="line5164"><span>  s += TRodnus * 20;
</span></span><span id="line5165"><span>  s += TSpleishaOld * 20;
</span></span><span id="line5166"><span>  
</span></span><span id="line5167"><span>  s += TFell * 20;
</span></span><span id="line5168"><span>  s += TAtkite * 27;
</span></span><span id="line5169"><span>  s += TDarkite * 26;
</span></span><span id="line5170"><span>  s += TBalthite * 25;
</span></span><span id="line5171"><span>  s += TDethite * 28;
</span></span><span id="line5172"><span>  s += TToomeria * 20;
</span></span><span id="line5173"><span>  s += TChampReg * 20;
</span></span><span id="line5174"><span>  s += TCloak * 20;
</span></span><span id="line5175"><span>  s += TGirdle * 20;
</span></span><span id="line5176"><span>  s += TErthron * 29;
</span></span><span id="line5177"><span>  
</span></span><span id="line5178"><span>  s += TGoss * 20;
</span></span><span id="line5179"><span>  s += TDuvin * 18;
</span></span><span id="line5180"><span>  s += TSplashOld * 20;
</span></span><span id="line5181"><span>  s += TSplash * 20;
</span></span><span id="line5182"><span>  s += TTracking * 20;
</span></span><span id="line5183"><span>  
</span></span><span id="line5184"><span>  s += TBB * 20;
</span></span><span id="line5185"><span>  s += TCrato * 20;
</span></span><span id="line5186"><span>  s += TCryptus * 20;
</span></span><span id="line5187"><span>  s += TDisabla * 20;
</span></span><span id="line5188"><span>  s += TDantus * 20;
</span></span><span id="line5189"><span>  s += TAneurus * 20;
</span></span><span id="line5190"><span>  s += TPosuhm * 20;
</span></span><span id="line5191"><span>  
</span></span><span id="line5192"><span>  s += TForvyola * 23;
</span></span><span id="line5193"><span>  s += TAnemia * 24;
</span></span><span id="line5194"><span>  
</span></span><span id="line5195"><span>  // Effective Ranks (Estimated)
</span></span><span id="line5196"><span>  
</span></span><span id="line5197"><span>  s += ETroilus * 20;
</span></span><span id="line5198"><span>  s += ERodnus * 10.6;
</span></span><span id="line5199"><span>  s += ESpiritus * 19.5;
</span></span><span id="line5200"><span>  s += EAtkus * 14.5;
</span></span><span id="line5201"><span>  s += EDarkus * 11.5;
</span></span><span id="line5202"><span>  s += EBalthus * 18;
</span></span><span id="line5203"><span>  s += ERegia * 18;
</span></span><span id="line5204"><span>  s += EHistia * 29;
</span></span><span id="line5205"><span>  s += EDetha * 21.2;
</span></span><span id="line5206"><span>  
</span></span><span id="line5207"><span>  // Race (Estimated)
</span></span><span id="line5208"><span>  
</span></span><span id="line5209"><span>  var r = races[Race];
</span></span><span id="line5210"><span>  for(var i=0; i</span><span>&lt;r</span><span>.length; i++) {
</span></span><span id="line5211"><span>    if(i == 3 || i == 5)
</span></span><span id="line5212"><span>      s += r[i] / 3;
</span></span><span id="line5213"><span>    else
</span></span><span id="line5214"><span>      s += r[i];
</span></span><span id="line5215"><span>  }
</span></span><span id="line5216"><span>  
</span></span><span id="line5217"><span>  if(Race == 4)
</span></span><span id="line5218"><span>    s += -100; // Zo HealSpeed
</span></span><span id="line5219"><span>  
</span></span><span id="line5220"><span>  // Weapon (Estimated)
</span></span><span id="line5221"><span>  
</span></span><span id="line5222"><span>  var w = weapons[Weapon];
</span></span><span id="line5223"><span>  for(var i=0; i</span><span>&lt;w</span><span>.length; i++) {
</span></span><span id="line5224"><span>    if(i == 3 || i == 5)
</span></span><span id="line5225"><span>      s += w[i] / 3;
</span></span><span id="line5226"><span>    else
</span></span><span id="line5227"><span>      s += w[i];
</span></span><span id="line5228"><span>  }
</span></span><span id="line5229"><span>  
</span></span><span id="line5230"><span>  // Left Hand (Estimated)
</span></span><span id="line5231"><span>  
</span></span><span id="line5232"><span>  var l = lefts[Left];
</span></span><span id="line5233"><span>  for(var i=0; i</span><span>&lt;l</span><span>.length; i++) {
</span></span><span id="line5234"><span>    if(i == 3 || i == 5)
</span></span><span id="line5235"><span>      s += l[i] / 3;
</span></span><span id="line5236"><span>    else
</span></span><span id="line5237"><span>      s += l[i];
</span></span><span id="line5238"><span>  }
</span></span><span id="line5239"><span>  
</span></span><span id="line5240"><span>  return Math.round(s);
</span></span><span id="line5241"><span>}
</span></span><span id="line5242"><span>
</span></span><span id="line5243"><span>function CalculateTotalRanks() {
</span></span><span id="line5244"><span>	var data = document.getElementById("data");
</span></span><span id="line5245"><span>
</span></span><span id="line5246"><span>	var EAtkus = parseFloat(data.EAtkus.value);
</span></span><span id="line5247"><span>	if(!EAtkus) EAtkus = 0;
</span></span><span id="line5248"><span>	var TAtkus = parseFloat(data.TAtkus.value);
</span></span><span id="line5249"><span>	if(!TAtkus) TAtkus = 0;
</span></span><span id="line5250"><span>	var EDarkus = parseFloat(data.EDarkus.value);
</span></span><span id="line5251"><span>	if(!EDarkus) EDarkus = 0;
</span></span><span id="line5252"><span>	var TDarkus = parseFloat(data.TDarkus.value);
</span></span><span id="line5253"><span>	if(!TDarkus) TDarkus = 0;
</span></span><span id="line5254"><span>	var TDarktur = parseFloat(data.TDarktur.value);
</span></span><span id="line5255"><span>	if(!TDarktur) TDarktur = 0;
</span></span><span id="line5256"><span>	var EBalthus = parseFloat(data.EBalthus.value);
</span></span><span id="line5257"><span>	if(!EBalthus) EBalthus = 0;
</span></span><span id="line5258"><span>	var TBalthus = parseFloat(data.TBalthus.value);
</span></span><span id="line5259"><span>	if(!TBalthus) TBalthus = 0;
</span></span><span id="line5260"><span>	var ERegia = parseFloat(data.ERegia.value);
</span></span><span id="line5261"><span>	if(!ERegia) ERegia = 0;
</span></span><span id="line5262"><span>	var TRegia = parseFloat(data.TRegia.value);
</span></span><span id="line5263"><span>	if(!TRegia) TRegia = 0;
</span></span><span id="line5264"><span>	var TEvus = parseFloat(data.TEvus.value);
</span></span><span id="line5265"><span>	if(!TEvus) TEvus = 0;
</span></span><span id="line5266"><span>	var TSwengus = parseFloat(data.TSwengus.value);
</span></span><span id="line5267"><span>	if(!TSwengus) TSwengus = 0;
</span></span><span id="line5268"><span>	var EHistia = parseFloat(data.EHistia.value);
</span></span><span id="line5269"><span>	if(!EHistia) EHistia = 0;
</span></span><span id="line5270"><span>	var THistia = parseFloat(data.THistia.value);
</span></span><span id="line5271"><span>	if(!THistia) THistia = 0;
</span></span><span id="line5272"><span>	var EDetha = parseFloat(data.EDetha.value);
</span></span><span id="line5273"><span>	if(!EDetha) EDetha = 0;
</span></span><span id="line5274"><span>	var TDetha = parseFloat(data.TDetha.value);
</span></span><span id="line5275"><span>	if(!TDetha) TDetha = 0;
</span></span><span id="line5276"><span>  
</span></span><span id="line5277"><span>	var TBodrus = parseFloat(data.TBodrus.value);
</span></span><span id="line5278"><span>	if(!TBodrus) TBodrus = 0;
</span></span><span id="line5279"><span>	var THardia = parseFloat(data.THardia.value);
</span></span><span id="line5280"><span>	if(!THardia) THardia = 0;
</span></span><span id="line5281"><span>	var ETroilus = parseFloat(data.ETroilus.value);
</span></span><span id="line5282"><span>	if(!ETroilus) ETroilus = 0;
</span></span><span id="line5283"><span>	var TTroilus = parseFloat(data.TTroilus.value);
</span></span><span id="line5284"><span>	if(!TTroilus) TTroilus = 0;
</span></span><span id="line5285"><span>	var ERodnus = parseFloat(data.ERodnus.value);
</span></span><span id="line5286"><span>	if(!ERodnus) ERodnus = 0;
</span></span><span id="line5287"><span>	var TRodnus = parseFloat(data.TRodnus.value);
</span></span><span id="line5288"><span>	if(!TRodnus) TRodnus = 0;
</span></span><span id="line5289"><span>	var TKnox = parseFloat(data.TKnox.value);
</span></span><span id="line5290"><span>	if(!TKnox) TKnox = 0;
</span></span><span id="line5291"><span>	var TAngilsa = parseFloat(data.TAngilsa.value);
</span></span><span id="line5292"><span>	if(!TAngilsa) TAngilsa = 0;
</span></span><span id="line5293"><span>  
</span></span><span id="line5294"><span>	var TFell = parseFloat(data.TFell.value);
</span></span><span id="line5295"><span>	if(!TFell) TFell = 0;
</span></span><span id="line5296"><span>	var TChan = parseFloat(data.TChan.value);
</span></span><span id="line5297"><span>	if(!TChan) TChan = 0;
</span></span><span id="line5298"><span>	var TAtkite = parseFloat(data.TAtkite.value);
</span></span><span id="line5299"><span>	if(!TAtkite) TAtkite = 0;
</span></span><span id="line5300"><span>	var TDarkite = parseFloat(data.TDarkite.value);
</span></span><span id="line5301"><span>	if(!TDarkite) TDarkite = 0;
</span></span><span id="line5302"><span>	var TBalthite = parseFloat(data.TBalthite.value);
</span></span><span id="line5303"><span>	if(!TBalthite) TBalthite = 0;
</span></span><span id="line5304"><span>	var TDethite = parseFloat(data.TDethite.value);
</span></span><span id="line5305"><span>	if(!TDethite) TDethite = 0;
</span></span><span id="line5306"><span>
</span></span><span id="line5307"><span>	var TGoss = parseFloat(data.TGoss.value);
</span></span><span id="line5308"><span>	if(!TGoss) TGoss = 0;
</span></span><span id="line5309"><span>
</span></span><span id="line5310"><span>	var TErthron = parseFloat(data.TErthron.value);
</span></span><span id="line5311"><span>	if(!TErthron) TErthron = 0;
</span></span><span id="line5312"><span>	var TErthronNew = parseFloat(data.TErthronNew.value);
</span></span><span id="line5313"><span>	if(!TErthronNew) TErthronNew = 0;
</span></span><span id="line5314"><span>	var TForvyola = parseFloat(data.TForvyola.value);
</span></span><span id="line5315"><span>	if(!TForvyola) TForvyola = 0;
</span></span><span id="line5316"><span>	var TBangus = parseFloat(data.TBangus.value);
</span></span><span id="line5317"><span>	if(!TBangus) TBangus = 0;
</span></span><span id="line5318"><span>	var TFarly = parseFloat(data.TFarly.value);
</span></span><span id="line5319"><span>	if(!TFarly) TFarly = 0;
</span></span><span id="line5320"><span>
</span></span><span id="line5321"><span>	var TToomeria = parseFloat(data.TToomeria.value);
</span></span><span id="line5322"><span>	if(!TToomeria) TToomeria = 0;
</span></span><span id="line5323"><span>	var TSplash = parseFloat(data.TSplash.value);
</span></span><span id="line5324"><span>	if(!TSplash) TSplash = 0;
</span></span><span id="line5325"><span>	var TSplashOld = parseFloat(data.TSplashOld.value);
</span></span><span id="line5326"><span>	if(!TSplashOld) TSplashOld = 0;
</span></span><span id="line5327"><span>	var TRespin = parseFloat(data.TRespin.value);
</span></span><span id="line5328"><span>	if(!TRespin) TRespin = 0;
</span></span><span id="line5329"><span>	var TChampReg = parseFloat(data.TChampReg.value);
</span></span><span id="line5330"><span>	if(!TChampReg) TChampReg = 0;
</span></span><span id="line5331"><span>	var TDuvin = parseFloat(data.TDuvin.value);
</span></span><span id="line5332"><span>	if(!TDuvin) TDuvin = 0;
</span></span><span id="line5333"><span>	var THeen = parseFloat(data.THeen.value);
</span></span><span id="line5334"><span>	if(!THeen) THeen = 0;
</span></span><span id="line5335"><span>
</span></span><span id="line5336"><span>	var TSpiritus = parseFloat(data.TSpiritus.value);
</span></span><span id="line5337"><span>	if(!TSpiritus) TSpiritus = 0;
</span></span><span id="line5338"><span>	var ESpiritus = parseFloat(data.ESpiritus.value);
</span></span><span id="line5339"><span>	if(!ESpiritus) ESpiritus = 0;
</span></span><span id="line5340"><span>	var TTracking = parseFloat(data.TTracking.value);
</span></span><span id="line5341"><span>	if(!TTracking) TTracking = 0;
</span></span><span id="line5342"><span>	var TCrato = parseFloat(data.TCrato.value);
</span></span><span id="line5343"><span>	if(!TCrato) TCrato = 0;
</span></span><span id="line5344"><span>	var TSpleisha = parseFloat(data.TSpleisha.value);
</span></span><span id="line5345"><span>	if(!TSpleisha) TSpleisha = 0;
</span></span><span id="line5346"><span>	var TSpleishaOld = parseFloat(data.TSpleishaOld.value);
</span></span><span id="line5347"><span>	if(!TSpleishaOld) TSpleishaOld = 0;
</span></span><span id="line5348"><span>	var TBB = parseFloat(data.TBB.value);
</span></span><span id="line5349"><span>	if(!TBB) TBB = 0;
</span></span><span id="line5350"><span>
</span></span><span id="line5351"><span>	var TAktur = parseFloat(data.TAktur.value);
</span></span><span id="line5352"><span>	if(!TAktur) TAktur = 0;
</span></span><span id="line5353"><span>	var TAtkia = parseFloat(data.TAtkia.value);
</span></span><span id="line5354"><span>	if(!TAtkia) TAtkia = 0;
</span></span><span id="line5355"><span>	var TCloak = parseFloat(data.TCloak.value);
</span></span><span id="line5356"><span>	if(!TCloak) TCloak = 0;
</span></span><span id="line5357"><span>	var TGirdle = parseFloat(data.TGirdle.value);
</span></span><span id="line5358"><span>	if(!TGirdle) TGirdle = 0;
</span></span><span id="line5359"><span>
</span></span><span id="line5360"><span>	var TCryptus = parseFloat(data.TCryptus.value);
</span></span><span id="line5361"><span>	if(!TCryptus) TCryptus = 0;
</span></span><span id="line5362"><span>	var TDisabla = parseFloat(data.TDisabla.value);
</span></span><span id="line5363"><span>	if(!TDisabla) TDisabla = 0;
</span></span><span id="line5364"><span>	var TDantus = parseFloat(data.TDantus.value);
</span></span><span id="line5365"><span>	if(!TDantus) TDantus = 0;
</span></span><span id="line5366"><span>	var TAneurus = parseFloat(data.TAneurus.value);
</span></span><span id="line5367"><span>	if(!TAneurus) TAneurus = 0;
</span></span><span id="line5368"><span>	var TPosuhm = parseFloat(data.TPosuhm.value);
</span></span><span id="line5369"><span>	if(!TPosuhm) TPosuhm = 0;
</span></span><span id="line5370"><span>	var TAnemia = parseFloat(data.TAnemia.value);
</span></span><span id="line5371"><span>	if(!TAnemia) TAnemia = 0;
</span></span><span id="line5372"><span>	var TStedfustus = parseFloat(data.TStedfustus.value);
</span></span><span id="line5373"><span>	if(!TStedfustus) TStedfustus = 0;
</span></span><span id="line5374"><span>  
</span></span><span id="line5375"><span>  
</span></span><span id="line5376"><span>	var Subclass = data.Subclass.value;
</span></span><span id="line5377"><span>	var Race = parseInt(data.Race.value);
</span></span><span id="line5378"><span>	var Weapon = data.Weapon.value;
</span></span><span id="line5379"><span>	var Left = data.Lefthand.value;
</span></span><span id="line5380"><span>	var Shoulder = data.Shoulder.value;
</span></span><span id="line5381"><span>  
</span></span><span id="line5382"><span>	if(Subclass != 1)	// Not Champion
</span></span><span id="line5383"><span>	{
</span></span><span id="line5384"><span>		//TErthron = 0;
</span></span><span id="line5385"><span>		//TErthronNew = 0;
</span></span><span id="line5386"><span>		//TForvyola = 0;
</span></span><span id="line5387"><span>		TChan = 0;
</span></span><span id="line5388"><span>		TAtkite = 0;
</span></span><span id="line5389"><span>		TDarkite = 0;
</span></span><span id="line5390"><span>		TBalthite = 0;
</span></span><span id="line5391"><span>		TDethite = 0;
</span></span><span id="line5392"><span>		TToomeria = 0;
</span></span><span id="line5393"><span>		TChampReg = 0;
</span></span><span id="line5394"><span>		TCloak = 0;
</span></span><span id="line5395"><span>		TGirdle = 0;
</span></span><span id="line5396"><span>	}
</span></span><span id="line5397"><span>	if(Subclass != 2)	// Not Ranger
</span></span><span id="line5398"><span>	{
</span></span><span id="line5399"><span>		TDuvin = 0;
</span></span><span id="line5400"><span>		TSplash = 0;
</span></span><span id="line5401"><span>		TSplashOld = 0;
</span></span><span id="line5402"><span>		TRespin = 0;
</span></span><span id="line5403"><span>		TTracking = 0;
</span></span><span id="line5404"><span>		//TFarly = 0;
</span></span><span id="line5405"><span>		//TBangus = 0;
</span></span><span id="line5406"><span>	}
</span></span><span id="line5407"><span>	if(Subclass != 3)	// Not Bloodmage
</span></span><span id="line5408"><span>	{
</span></span><span id="line5409"><span>		TCryptus = 0;
</span></span><span id="line5410"><span>		TDisabla = 0;
</span></span><span id="line5411"><span>		TDantus = 0;
</span></span><span id="line5412"><span>		TAneurus = 0;
</span></span><span id="line5413"><span>		TPosuhm = 0;
</span></span><span id="line5414"><span>		//TAnemia = 0;
</span></span><span id="line5415"><span>		//TStedfustus = 0;		
</span></span><span id="line5416"><span>	}
</span></span><span id="line5417"><span>	
</span></span><span id="line5418"><span>  
</span></span><span id="line5419"><span>  var tr = 0;
</span></span><span id="line5420"><span>  var er = 0;
</span></span><span id="line5421"><span>  var isApprox = false;
</span></span><span id="line5422"><span>  
</span></span><span id="line5423"><span>  // Trained ranks
</span></span><span id="line5424"><span>  
</span></span><span id="line5425"><span>  tr += TAtkus;
</span></span><span id="line5426"><span>  tr += TDarkus;
</span></span><span id="line5427"><span>  tr += TBalthus;
</span></span><span id="line5428"><span>  tr += TRegia;
</span></span><span id="line5429"><span>  tr += TEvus;
</span></span><span id="line5430"><span>  tr += TSwengus;
</span></span><span id="line5431"><span>  tr += THistia;
</span></span><span id="line5432"><span>  tr += TDetha;
</span></span><span id="line5433"><span>  
</span></span><span id="line5434"><span>  tr += TBodrus;
</span></span><span id="line5435"><span>  tr += THardia;
</span></span><span id="line5436"><span>  tr += TTroilus;
</span></span><span id="line5437"><span>  tr += TRodnus;
</span></span><span id="line5438"><span>  tr += TSpiritus;
</span></span><span id="line5439"><span>  tr += TAktur;
</span></span><span id="line5440"><span>  tr += TAtkia;
</span></span><span id="line5441"><span>  tr += TDarktur;
</span></span><span id="line5442"><span>  tr += TKnox;
</span></span><span id="line5443"><span>  tr += TAngilsa;
</span></span><span id="line5444"><span>  tr += THeen;
</span></span><span id="line5445"><span>  tr += TSpleishaOld;
</span></span><span id="line5446"><span>  tr += TSpleisha;
</span></span><span id="line5447"><span>  
</span></span><span id="line5448"><span>  tr += TFell;
</span></span><span id="line5449"><span>  tr += TChan;
</span></span><span id="line5450"><span>  tr += TAtkite;
</span></span><span id="line5451"><span>  tr += TDarkite;
</span></span><span id="line5452"><span>  tr += TBalthite;
</span></span><span id="line5453"><span>  tr += TDethite;
</span></span><span id="line5454"><span>  tr += TToomeria;
</span></span><span id="line5455"><span>  tr += TChampReg;
</span></span><span id="line5456"><span>  tr += TCloak;
</span></span><span id="line5457"><span>  tr += TGirdle;
</span></span><span id="line5458"><span>  tr += TForvyola;
</span></span><span id="line5459"><span>  tr += TErthron;
</span></span><span id="line5460"><span>  tr += TErthronNew;
</span></span><span id="line5461"><span>  
</span></span><span id="line5462"><span>  tr += TGoss;
</span></span><span id="line5463"><span>  tr += TDuvin;
</span></span><span id="line5464"><span>  tr += TSplashOld;
</span></span><span id="line5465"><span>  tr += TSplash;
</span></span><span id="line5466"><span>  tr += TRespin;
</span></span><span id="line5467"><span>  tr += TTracking;
</span></span><span id="line5468"><span>  tr += TFarly;
</span></span><span id="line5469"><span>  tr += TBangus;
</span></span><span id="line5470"><span>  
</span></span><span id="line5471"><span>  tr += TBB;
</span></span><span id="line5472"><span>  tr += TCrato;
</span></span><span id="line5473"><span>  tr += TCryptus;
</span></span><span id="line5474"><span>  tr += TDisabla;
</span></span><span id="line5475"><span>  tr += TDantus;
</span></span><span id="line5476"><span>  tr += TAneurus;
</span></span><span id="line5477"><span>  tr += TPosuhm;
</span></span><span id="line5478"><span>  tr += TAnemia;
</span></span><span id="line5479"><span>  tr += TStedfustus;
</span></span><span id="line5480"><span>  
</span></span><span id="line5481"><span>  // Effective Ranks from Trained Ranks
</span></span><span id="line5482"><span>  
</span></span><span id="line5483"><span>  er += TAtkus;
</span></span><span id="line5484"><span>  er += TDarkus;
</span></span><span id="line5485"><span>  er += TBalthus;
</span></span><span id="line5486"><span>  er += TRegia;
</span></span><span id="line5487"><span>  er += TEvus * 1.1436;
</span></span><span id="line5488"><span>  er += TSwengus * 1.0549;
</span></span><span id="line5489"><span>  er += THistia;
</span></span><span id="line5490"><span>  er += TDetha;
</span></span><span id="line5491"><span>  
</span></span><span id="line5492"><span>  er += TBodrus * 0.9004;
</span></span><span id="line5493"><span>  er += THardia * 0.7159;
</span></span><span id="line5494"><span>  er += TTroilus;
</span></span><span id="line5495"><span>  er += TRodnus;
</span></span><span id="line5496"><span>  er += TAktur * 0.9988;
</span></span><span id="line5497"><span>  er += TAtkia * 1.0096;
</span></span><span id="line5498"><span>  er += TDarktur * 0.9673;
</span></span><span id="line5499"><span>  er += TKnox * 0.8564;
</span></span><span id="line5500"><span>  er += TAngilsa * 0.8564;
</span></span><span id="line5501"><span>  er += THeen;
</span></span><span id="line5502"><span>  if(Subclass == 1) {
</span></span><span id="line5503"><span>    er += TSpleishaOld * 375 / 500;
</span></span><span id="line5504"><span>    er += TSpleisha * 373 / 500;
</span></span><span id="line5505"><span>  }
</span></span><span id="line5506"><span>  else {
</span></span><span id="line5507"><span>    er += TSpleishaOld * 375 / 373;
</span></span><span id="line5508"><span>    er += TSpleisha;
</span></span><span id="line5509"><span>  }
</span></span><span id="line5510"><span>  
</span></span><span id="line5511"><span>  er += TFell;
</span></span><span id="line5512"><span>  er += TChan;
</span></span><span id="line5513"><span>  er += Math.floor(5 * TAtkite / 4);
</span></span><span id="line5514"><span>  er += Math.floor(5 * TDarkite / 4);
</span></span><span id="line5515"><span>  er += Math.floor(5 * TBalthite / 4);
</span></span><span id="line5516"><span>  er += Math.floor(5 * TDethite / 4);
</span></span><span id="line5517"><span>  er += TToomeria;
</span></span><span id="line5518"><span>  er += TChampReg;
</span></span><span id="line5519"><span>  er += TCloak;
</span></span><span id="line5520"><span>  er += TGirdle;
</span></span><span id="line5521"><span>  er += TForvyola * 1.0198;
</span></span><span id="line5522"><span>  er += TErthron * 1.2854;
</span></span><span id="line5523"><span>  er += TErthronNew * 1.1517;
</span></span><span id="line5524"><span>  
</span></span><span id="line5525"><span>  er += TGoss;
</span></span><span id="line5526"><span>  er += TDuvin;
</span></span><span id="line5527"><span>  er += TSplashOld * 375 / 373;
</span></span><span id="line5528"><span>  er += TSplash;
</span></span><span id="line5529"><span>  er += TRespin;
</span></span><span id="line5530"><span>  er += TTracking;
</span></span><span id="line5531"><span>  er += TFarly * 1.2015;
</span></span><span id="line5532"><span>  er += TBangus * 1.3117;
</span></span><span id="line5533"><span>  
</span></span><span id="line5534"><span>  er += TBB;
</span></span><span id="line5535"><span>  er += TCrato;
</span></span><span id="line5536"><span>  er += TCryptus;
</span></span><span id="line5537"><span>  er += TDisabla;
</span></span><span id="line5538"><span>  er += TDantus;
</span></span><span id="line5539"><span>  er += TAneurus;
</span></span><span id="line5540"><span>  er += TPosuhm;
</span></span><span id="line5541"><span>  er += TAnemia * 0.9883;
</span></span><span id="line5542"><span>  er += TStedfustus * 1.0532;
</span></span><span id="line5543"><span>  
</span></span><span id="line5544"><span>  if(TSpiritus != 0) {
</span></span><span id="line5545"><span>    var BadSpiritus = Math.max(Math.min(2 * (50 - TRodnus - ERodnus), TSpiritus), 0);
</span></span><span id="line5546"><span>    var LessBadSpiritus = TSpiritus - BadSpiritus;
</span></span><span id="line5547"><span>    
</span></span><span id="line5548"><span>    if(Subclass == 1) {
</span></span><span id="line5549"><span>      er += LessBadSpiritus;
</span></span><span id="line5550"><span>      er += BadSpiritus * 0.545027027;
</span></span><span id="line5551"><span>    }
</span></span><span id="line5552"><span>    else {
</span></span><span id="line5553"><span>      er += LessBadSpiritus;
</span></span><span id="line5554"><span>      er += BadSpiritus * 0.5511557133541;
</span></span><span id="line5555"><span>    }
</span></span><span id="line5556"><span>  }
</span></span><span id="line5557"><span>  
</span></span><span id="line5558"><span>  // Effective Ranks
</span></span><span id="line5559"><span>  
</span></span><span id="line5560"><span>  if(ETroilus != 0) {
</span></span><span id="line5561"><span>    tr += ETroilus;
</span></span><span id="line5562"><span>    er += ETroilus;
</span></span><span id="line5563"><span>    isApprox = true;
</span></span><span id="line5564"><span>  }
</span></span><span id="line5565"><span>  if(ERodnus != 0) {
</span></span><span id="line5566"><span>    tr += ERodnus * 0.6756756756756757;
</span></span><span id="line5567"><span>    er += ERodnus * 0.6756756756756757;
</span></span><span id="line5568"><span>    isApprox = true;
</span></span><span id="line5569"><span>  }
</span></span><span id="line5570"><span>  if(ESpiritus != 0) {
</span></span><span id="line5571"><span>    var BadSpiritus = Math.max(Math.min(2 * (50 - TRodnus - ERodnus - (TSpiritus / 2)), ESpiritus), 0);
</span></span><span id="line5572"><span>    var LessBadSpiritus = ESpiritus - BadSpiritus;
</span></span><span id="line5573"><span>    
</span></span><span id="line5574"><span>    if(Subclass == 1) {
</span></span><span id="line5575"><span>      tr += ESpiritus * 0.7928108108108108;
</span></span><span id="line5576"><span>      er += LessBadSpiritus * 0.7928108108108108;
</span></span><span id="line5577"><span>      er += BadSpiritus * 0.3378378380541;
</span></span><span id="line5578"><span>    }
</span></span><span id="line5579"><span>    else {
</span></span><span id="line5580"><span>      tr += ESpiritus * 0.7866821244837331;
</span></span><span id="line5581"><span>      er += LessBadSpiritus * 0.7866821244837331;
</span></span><span id="line5582"><span>      er += BadSpiritus * 0.3378378380541;
</span></span><span id="line5583"><span>    }
</span></span><span id="line5584"><span>    
</span></span><span id="line5585"><span>    isApprox = true;
</span></span><span id="line5586"><span>  }
</span></span><span id="line5587"><span>  if(EAtkus != 0) {
</span></span><span id="line5588"><span>    tr += EAtkus * 0.6392156862745099;
</span></span><span id="line5589"><span>    er += EAtkus * 0.6392156862745099;
</span></span><span id="line5590"><span>    isApprox = true;
</span></span><span id="line5591"><span>  }
</span></span><span id="line5592"><span>  if(EDarkus != 0) {
</span></span><span id="line5593"><span>    tr += EDarkus * 0.5803921568627452;
</span></span><span id="line5594"><span>    er += EDarkus * 0.5803921568627452;
</span></span><span id="line5595"><span>    isApprox = true;
</span></span><span id="line5596"><span>  }
</span></span><span id="line5597"><span>  if(EBalthus != 0) {
</span></span><span id="line5598"><span>    tr += EBalthus;
</span></span><span id="line5599"><span>    er += EBalthus;
</span></span><span id="line5600"><span>    isApprox = true;
</span></span><span id="line5601"><span>  }
</span></span><span id="line5602"><span>  if(ERegia != 0) {
</span></span><span id="line5603"><span>    tr += ERegia;
</span></span><span id="line5604"><span>    er += ERegia;
</span></span><span id="line5605"><span>    isApprox = true;
</span></span><span id="line5606"><span>  }
</span></span><span id="line5607"><span>  if(EHistia != 0) {
</span></span><span id="line5608"><span>    tr += EHistia;
</span></span><span id="line5609"><span>    er += EHistia;
</span></span><span id="line5610"><span>    isApprox = true;
</span></span><span id="line5611"><span>  }
</span></span><span id="line5612"><span>  if(EDetha != 0) {
</span></span><span id="line5613"><span>    tr += EDetha * 0.972972972972973;
</span></span><span id="line5614"><span>    er += EDetha * 0.972972972972973;
</span></span><span id="line5615"><span>    isApprox = true;
</span></span><span id="line5616"><span>  }
</span></span><span id="line5617"><span>  
</span></span><span id="line5618"><span>  return [ Math.round(tr), Math.round(er), isApprox ];
</span></span><span id="line5619"><span>}
</span></span><span id="line5620"><span>
</span></span><span id="line5621"><span>function ShowSubclass()
</span></span><span id="line5622"><span>{
</span></span><span id="line5623"><span>  var data = document.getElementById("data");
</span></span><span id="line5624"><span>	var subId = data.Subclass.value;
</span></span><span id="line5625"><span>  
</span></span><span id="line5626"><span>	var showC = "none";
</span></span><span id="line5627"><span>	var showCC = "none";
</span></span><span id="line5628"><span>	var showR = "none";
</span></span><span id="line5629"><span>	var showRC = "none";
</span></span><span id="line5630"><span>	var showB = "none";
</span></span><span id="line5631"><span>	var showBC = "none";
</span></span><span id="line5632"><span>	var showF = "none";
</span></span><span id="line5633"><span>
</span></span><span id="line5634"><span>	if(subId == 1)	// Champion
</span></span><span id="line5635"><span>	{
</span></span><span id="line5636"><span>		showC = "";
</span></span><span id="line5637"><span>    showCC = "";
</span></span><span id="line5638"><span>		var dropdown = data.ResultsSelect;
</span></span><span id="line5639"><span>		for(var i=0; i</span><span>&lt;d</span><span>ropdown.options.length; i++)
</span></span><span id="line5640"><span>		{
</span></span><span id="line5641"><span>			if(dropdown.options[i].value == 5)
</span></span><span id="line5642"><span>				dropdown.options[i].text = "Champion Abilities";
</span></span><span id="line5643"><span>		}
</span></span><span id="line5644"><span>	}
</span></span><span id="line5645"><span>	else if(subId == 2)	// Ranger
</span></span><span id="line5646"><span>	{
</span></span><span id="line5647"><span>		showR = "";
</span></span><span id="line5648"><span>    showRC = "";
</span></span><span id="line5649"><span>		var dropdown = data.ResultsSelect;
</span></span><span id="line5650"><span>		for(var i=0; i</span><span>&lt;d</span><span>ropdown.options.length; i++)
</span></span><span id="line5651"><span>		{
</span></span><span id="line5652"><span>			if(dropdown.options[i].value == 5)
</span></span><span id="line5653"><span>				dropdown.options[i].text = "Ranger Abilities";
</span></span><span id="line5654"><span>		}
</span></span><span id="line5655"><span>	}
</span></span><span id="line5656"><span>	else if(subId == 3)	// Bloodmage
</span></span><span id="line5657"><span>	{
</span></span><span id="line5658"><span>		showB = "";
</span></span><span id="line5659"><span>    showBC = "";
</span></span><span id="line5660"><span>		var dropdown = data.ResultsSelect;
</span></span><span id="line5661"><span>		for(var i=0; i</span><span>&lt;d</span><span>ropdown.options.length; i++)
</span></span><span id="line5662"><span>		{
</span></span><span id="line5663"><span>			if(dropdown.options[i].value == 5)
</span></span><span id="line5664"><span>				dropdown.options[i].text = "Bloodmage Abilities";
</span></span><span id="line5665"><span>		}
</span></span><span id="line5666"><span>	}
</span></span><span id="line5667"><span>	else
</span></span><span id="line5668"><span>	{
</span></span><span id="line5669"><span>		showF = "";
</span></span><span id="line5670"><span>		var dropdown = data.ResultsSelect;
</span></span><span id="line5671"><span>		for(var i=0; i</span><span>&lt;d</span><span>ropdown.options.length; i++)
</span></span><span id="line5672"><span>		{
</span></span><span id="line5673"><span>			if(dropdown.options[i].value == 5)
</span></span><span id="line5674"><span>				dropdown.options[i].text = "Subclass Abilities";
</span></span><span id="line5675"><span>		}
</span></span><span id="line5676"><span>	}
</span></span><span id="line5677"><span>  
</span></span><span id="line5678"><span>  if(data.TForvyola.value != "" || data.TErthron.value != "" || data.TErthronNew.value != "")
</span></span><span id="line5679"><span>    showCC = "";
</span></span><span id="line5680"><span>  if(data.TBangus.value != "" || data.TFarly.value != "")
</span></span><span id="line5681"><span>    showRC = "";
</span></span><span id="line5682"><span>  if(data.TAnemia.value != "" || data.TStedfustus.value != "")
</span></span><span id="line5683"><span>    showBC = "";
</span></span><span id="line5684"><span>	
</span></span><span id="line5685"><span>	var trainerElement = document.getElementsByName("CTrainer");
</span></span><span id="line5686"><span>	for(var i=0; i</span><span>&lt;t</span><span>rainerElement.length; i++)
</span></span><span id="line5687"><span>		trainerElement[i].style.display = showC;
</span></span><span id="line5688"><span>  
</span></span><span id="line5689"><span>  trainerElement = document.getElementsByName("CTrainerC");
</span></span><span id="line5690"><span>	for(var i=0; i</span><span>&lt;t</span><span>rainerElement.length; i++)
</span></span><span id="line5691"><span>		trainerElement[i].style.display = showCC;
</span></span><span id="line5692"><span>  
</span></span><span id="line5693"><span>	trainerElement = document.getElementsByName("RTrainer");
</span></span><span id="line5694"><span>	for(var i=0; i</span><span>&lt;t</span><span>rainerElement.length; i++)
</span></span><span id="line5695"><span>		trainerElement[i].style.display = showR;
</span></span><span id="line5696"><span>  
</span></span><span id="line5697"><span>	trainerElement = document.getElementsByName("RTrainerC");
</span></span><span id="line5698"><span>	for(var i=0; i</span><span>&lt;t</span><span>rainerElement.length; i++)
</span></span><span id="line5699"><span>		trainerElement[i].style.display = showRC;
</span></span><span id="line5700"><span>  
</span></span><span id="line5701"><span>	trainerElement = document.getElementsByName("BTrainer");
</span></span><span id="line5702"><span>	for(var i=0; i</span><span>&lt;t</span><span>rainerElement.length; i++)
</span></span><span id="line5703"><span>		trainerElement[i].style.display = showB;
</span></span><span id="line5704"><span>  
</span></span><span id="line5705"><span>	trainerElement = document.getElementsByName("BTrainerC");
</span></span><span id="line5706"><span>	for(var i=0; i</span><span>&lt;t</span><span>rainerElement.length; i++)
</span></span><span id="line5707"><span>		trainerElement[i].style.display = showBC;
</span></span><span id="line5708"><span>  
</span></span><span id="line5709"><span>	trainerElement = document.getElementsByName("FTrainer");
</span></span><span id="line5710"><span>	for(var i=0; i</span><span>&lt;t</span><span>rainerElement.length; i++)
</span></span><span id="line5711"><span>		trainerElement[i].style.display = showF;
</span></span><span id="line5712"><span>}
</span></span><span id="line5713"><span>
</span></span><span id="line5714"><span>function Round(value)
</span></span><span id="line5715"><span>{
</span></span><span id="line5716"><span>  value = value * 1000;
</span></span><span id="line5717"><span>  
</span></span><span id="line5718"><span>  var str = value.toString();
</span></span><span id="line5719"><span>  var dot = str.indexOf(".");
</span></span><span id="line5720"><span>  if(dot &gt;= 3) {
</span></span><span id="line5721"><span>    if(str.substring(dot-3, dot) == "999") {
</span></span><span id="line5722"><span>      if(str.length </span><span>&lt;=</span><span> dot + 6 || str.substring(dot+1, dot+7) != "999999") {
</span></span><span id="line5723"><span>        if(value </span><span>&lt; </span><span>0)
</span></span><span id="line5724"><span>          value = Math.ceil(value);
</span></span><span id="line5725"><span>        else
</span></span><span id="line5726"><span>          value = Math.floor(value);
</span></span><span id="line5727"><span>        return value / 1000;
</span></span><span id="line5728"><span>      }
</span></span><span id="line5729"><span>    }
</span></span><span id="line5730"><span>  }
</span></span><span id="line5731"><span>  
</span></span><span id="line5732"><span>  value = Math.round(value);
</span></span><span id="line5733"><span>	return value / 1000;
</span></span><span id="line5734"><span>}
</span></span><span id="line5735"><span>
</span></span><span id="line5736"><span>function RoundLong(value)
</span></span><span id="line5737"><span>{
</span></span><span id="line5738"><span>  value = value * 1000000;
</span></span><span id="line5739"><span>  
</span></span><span id="line5740"><span>  var str = value.toString();
</span></span><span id="line5741"><span>  var dot = str.indexOf(".");
</span></span><span id="line5742"><span>  if(dot &gt;= 6) {
</span></span><span id="line5743"><span>    if(str.substring(dot-6, dot) == "999") {
</span></span><span id="line5744"><span>      if(str.length </span><span>&lt;=</span><span> dot + 6 || str.substring(dot+1, dot+7) != "999999") {
</span></span><span id="line5745"><span>        if(value </span><span>&lt; </span><span>0)
</span></span><span id="line5746"><span>          value = Math.ceil(value);
</span></span><span id="line5747"><span>        else
</span></span><span id="line5748"><span>          value = Math.floor(value);
</span></span><span id="line5749"><span>        return value / 1000000;
</span></span><span id="line5750"><span>      }
</span></span><span id="line5751"><span>    }
</span></span><span id="line5752"><span>  }
</span></span><span id="line5753"><span>  
</span></span><span id="line5754"><span>  value = Math.round(value);
</span></span><span id="line5755"><span>	return value / 1000000;
</span></span><span id="line5756"><span>}
</span></span><span id="line5757"><span>
</span></span><span id="line5758"><span>function RoundDown(value)
</span></span><span id="line5759"><span>{
</span></span><span id="line5760"><span>  return Math.floor(value + 0.00000001);
</span></span><span id="line5761"><span>}
</span></span><span id="line5762"><span>
</span></span><span id="line5763"><span>function onNotesChanged()
</span></span><span id="line5764"><span>{
</span></span><span id="line5765"><span>	var data = document.getElementById("data");
</span></span><span id="line5766"><span>	
</span></span><span id="line5767"><span>	if(data.ResultsSelect.value == 100)
</span></span><span id="line5768"><span>		CurrNotes = data.ResultsText.value;
</span></span><span id="line5769"><span>}
</span></span><span id="line5770"><span>
</span></span><span id="line5771"><span>function fixIteEquipment(inputChanged)
</span></span><span id="line5772"><span>{
</span></span><span id="line5773"><span>	var data = document.getElementById("data");
</span></span><span id="line5774"><span>	var Left = data.Lefthand.value;
</span></span><span id="line5775"><span>	var Shoulder = data.Shoulder.value;
</span></span><span id="line5776"><span>  
</span></span><span id="line5777"><span>  if(Left &gt;= 105 &amp;&amp; Left </span><span>&lt;=</span><span> 108 &amp;&amp; Shoulder &gt;= 101 &amp;&amp; Shoulder </span><span>&lt;=</span><span> 108) {
</span></span><span id="line5778"><span>    if(inputChanged == "lefthand") {
</span></span><span id="line5779"><span>      Left -= 4;
</span></span><span id="line5780"><span>      data.Lefthand.value = Left;
</span></span><span id="line5781"><span>      
</span></span><span id="line5782"><span>      showAlert(null, "</span><span>&lt;b</span><span>&gt;Hand ite cannot be boosted after Pauldron quest is completed.</span><span>&lt;/<span></span>b</span><span>&gt;", 180, 20, 3000);
</span></span><span id="line5783"><span>    }
</span></span><span id="line5784"><span>    else {
</span></span><span id="line5785"><span>      Left -= 4;
</span></span><span id="line5786"><span>      data.Lefthand.value = Left;
</span></span><span id="line5787"><span>    }
</span></span><span id="line5788"><span>    updateAllIconMenus();
</span></span><span id="line5789"><span>  }
</span></span><span id="line5790"><span>}
</span></span><span id="line5791"><span>
</span></span><span id="line5792"><span>function framesToMinutes(frames, FPS)
</span></span><span id="line5793"><span>{
</span></span><span id="line5794"><span>	var MinutesMsg = frames / FPS;
</span></span><span id="line5795"><span>	var SecondsMsg = parseInt( ( (MinutesMsg/60) - parseInt(MinutesMsg/60) ) * 60 );
</span></span><span id="line5796"><span>	if(SecondsMsg </span><span>&lt; </span><span>10) SecondsMsg = ":" + "0" + SecondsMsg;
</span></span><span id="line5797"><span>	else SecondsMsg = ":" + SecondsMsg;
</span></span><span id="line5798"><span>	MinutesMsg = parseInt(MinutesMsg/60) + SecondsMsg;
</span></span><span id="line5799"><span>	return MinutesMsg;
</span></span><span id="line5800"><span>}
</span></span><span id="line5801"><span>
</span></span><span id="line5802"><span>function setFPS(timeType)
</span></span><span id="line5803"><span>{
</span></span><span id="line5804"><span>	var data = document.getElementById("data");
</span></span><span id="line5805"><span>	if(timeType == FPSArray.length-1)
</span></span><span id="line5806"><span>	{
</span></span><span id="line5807"><span>		data.FPS.disabled = 0;
</span></span><span id="line5808"><span>		data.FPS.style.backgroundColor = "#b4b0b0";	// !!! Need to change if .css file is altered.
</span></span><span id="line5809"><span>	}
</span></span><span id="line5810"><span>	else
</span></span><span id="line5811"><span>	{
</span></span><span id="line5812"><span>		data.FPS.disabled = 1;
</span></span><span id="line5813"><span>		data.FPS.value = FPSArray[timeType];
</span></span><span id="line5814"><span>		data.FPS.style.backgroundColor = "#babca8";	// !!! Need to change if .css file is altered.
</span></span><span id="line5815"><span>	}
</span></span><span id="line5816"><span>	simStop();
</span></span><span id="line5817"><span>}
</span></span><span id="line5818"><span>
</span></span><span id="line5819"><span>function doHit(hitwho, checksim)
</span></span><span id="line5820"><span>{
</span></span><span id="line5821"><span>	var data = document.getElementById("data");
</span></span><span id="line5822"><span>
</span></span><span id="line5823"><span>	var damMin = 0;
</span></span><span id="line5824"><span>	var damMax = 0;
</span></span><span id="line5825"><span>
</span></span><span id="line5826"><span>	if(hitwho == 0)
</span></span><span id="line5827"><span>	{
</span></span><span id="line5828"><span>		if(data.DamRadio[0].checked)
</span></span><span id="line5829"><span>		{
</span></span><span id="line5830"><span>			damMin = parseFloat(data.HPDamageMin.value);
</span></span><span id="line5831"><span>			if(!damMin || damMin </span><span>&lt; </span><span>0) damMin = 0;
</span></span><span id="line5832"><span>			damMax = parseFloat(data.HPDamageMax.value);
</span></span><span id="line5833"><span>			if(!damMax || damMax </span><span>&lt; </span><span>0) damMax = 0;
</span></span><span id="line5834"><span>			if(damMin &gt; damMax) damMin = damMax;
</span></span><span id="line5835"><span>
</span></span><span id="line5836"><span>			damMin = HistiaToHealth(damMin);
</span></span><span id="line5837"><span>			damMax = HistiaToHealth(damMax);
</span></span><span id="line5838"><span>		}
</span></span><span id="line5839"><span>		else
</span></span><span id="line5840"><span>		{
</span></span><span id="line5841"><span>			damMax = data.HPDamageDarkus.value;
</span></span><span id="line5842"><span>			damMax = DarkusToDamage(damMax);
</span></span><span id="line5843"><span>			damMin = damMax;
</span></span><span id="line5844"><span>			damMax = damMax * 3;
</span></span><span id="line5845"><span>			damMax = damMax + 100;
</span></span><span id="line5846"><span>			damMin = damMin + 100;
</span></span><span id="line5847"><span>		}
</span></span><span id="line5848"><span>
</span></span><span id="line5849"><span>		var damRand = damMax - damMin;
</span></span><span id="line5850"><span>		damRand = Math.random() * damRand;
</span></span><span id="line5851"><span>		damRand = damRand + damMin;
</span></span><span id="line5852"><span>
</span></span><span id="line5853"><span>		HP = HP - damRand;
</span></span><span id="line5854"><span>	}
</span></span><span id="line5855"><span>	else
</span></span><span id="line5856"><span>	{
</span></span><span id="line5857"><span>		damMin = HitMin;
</span></span><span id="line5858"><span>		damMax = HitMax;
</span></span><span id="line5859"><span>
</span></span><span id="line5860"><span>		var damRand = damMax - damMin;
</span></span><span id="line5861"><span>		damRand = Math.random() * damRand;
</span></span><span id="line5862"><span>		damRand = damRand + damMin;
</span></span><span id="line5863"><span>
</span></span><span id="line5864"><span>		EnHP = EnHP - damRand;
</span></span><span id="line5865"><span>	}
</span></span><span id="line5866"><span>
</span></span><span id="line5867"><span>	if(checksim == 1 &amp;&amp; BalRunning == 0) simStart();
</span></span><span id="line5868"><span>}
</span></span><span id="line5869"><span>
</span></span><span id="line5870"><span>function doHeal(healwho)
</span></span><span id="line5871"><span>{
</span></span><span id="line5872"><span>	if(healwho == 0)
</span></span><span id="line5873"><span>	{
</span></span><span id="line5874"><span>		HP = HPMax;
</span></span><span id="line5875"><span>	}
</span></span><span id="line5876"><span>	else
</span></span><span id="line5877"><span>	{
</span></span><span id="line5878"><span>		setEnemyStats();
</span></span><span id="line5879"><span>	}
</span></span><span id="line5880"><span>}
</span></span><span id="line5881"><span>
</span></span><span id="line5882"><span>function setEnemyStats()
</span></span><span id="line5883"><span>{
</span></span><span id="line5884"><span>	var data = document.getElementById("data");
</span></span><span id="line5885"><span>	var health = parseFloat(data.EnemyHistia.value);
</span></span><span id="line5886"><span>	if(!health || health </span><span>&lt; </span><span>1) health = 1;
</span></span><span id="line5887"><span>	var regen = parseFloat(data.EnemyTroilus.value);
</span></span><span id="line5888"><span>	if(!regen) regen = 0;
</span></span><span id="line5889"><span>
</span></span><span id="line5890"><span>	health = HistiaToHealth(health);
</span></span><span id="line5891"><span>	regen = TroilusToRegeneration(regen);
</span></span><span id="line5892"><span>
</span></span><span id="line5893"><span>	EnHP = health;
</span></span><span id="line5894"><span>	EnHPMax = health;
</span></span><span id="line5895"><span>	EnHPReg = regen / 100;
</span></span><span id="line5896"><span>}
</span></span><span id="line5897"><span>
</span></span><span id="line5898"><span>function doSwing(numSwings)
</span></span><span id="line5899"><span>{
</span></span><span id="line5900"><span>	BalSwing = numSwings;
</span></span><span id="line5901"><span>
</span></span><span id="line5902"><span>	if(numSwings == 999999)
</span></span><span id="line5903"><span>	{
</span></span><span id="line5904"><span>		if(SwingForever == 0)
</span></span><span id="line5905"><span>			SwingForever = 1;
</span></span><span id="line5906"><span>		else
</span></span><span id="line5907"><span>		{
</span></span><span id="line5908"><span>			BalSwing = 0;
</span></span><span id="line5909"><span>			SwingForever = 0;
</span></span><span id="line5910"><span>		}
</span></span><span id="line5911"><span>	}
</span></span><span id="line5912"><span>	else SwingForever = 0;
</span></span><span id="line5913"><span>
</span></span><span id="line5914"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line5915"><span>}
</span></span><span id="line5916"><span>
</span></span><span id="line5917"><span>function simStart()
</span></span><span id="line5918"><span>{
</span></span><span id="line5919"><span>	BalRunning = 1;
</span></span><span id="line5920"><span>	SimInterval = setInterval("simLoop();",BalTick)
</span></span><span id="line5921"><span>}
</span></span><span id="line5922"><span>
</span></span><span id="line5923"><span>function simStop()
</span></span><span id="line5924"><span>{
</span></span><span id="line5925"><span>	if(BalRunning == 1 &amp;&amp; SimInterval != 0) {
</span></span><span id="line5926"><span>		BalRunning = 0;
</span></span><span id="line5927"><span>		clearInterval(SimInterval);
</span></span><span id="line5928"><span>		SimInterval = 0;
</span></span><span id="line5929"><span>	}
</span></span><span id="line5930"><span>}
</span></span><span id="line5931"><span>
</span></span><span id="line5932"><span>function simLoop()
</span></span><span id="line5933"><span>{
</span></span><span id="line5934"><span>	//getDeltaTime();
</span></span><span id="line5935"><span>
</span></span><span id="line5936"><span>	if(SwingForever == 1)
</span></span><span id="line5937"><span>		BalSwing = 1;
</span></span><span id="line5938"><span>
</span></span><span id="line5939"><span>	var data = document.getElementById("data");
</span></span><span id="line5940"><span>
</span></span><span id="line5941"><span>	if(BalSwung &gt; 0)
</span></span><span id="line5942"><span>	{
</span></span><span id="line5943"><span>		BalSwung = BalSwung - 1;
</span></span><span id="line5944"><span>
</span></span><span id="line5945"><span>		if(BalSwung == 3) data.swingimg.src = 'images/swing2_1.png';
</span></span><span id="line5946"><span>		else if(BalSwung == 2) data.swingimg.src = 'images/swing2_2.png';
</span></span><span id="line5947"><span>		else if(BalSwung == 1) data.swingimg.src = 'images/swing2_3.png';
</span></span><span id="line5948"><span>		else data.swingimg.src = 'images/swing2_0.png';
</span></span><span id="line5949"><span>	}
</span></span><span id="line5950"><span>	else
</span></span><span id="line5951"><span>	{
</span></span><span id="line5952"><span>		data.swingimg.src = 'images/swing2_0.png';
</span></span><span id="line5953"><span>	}
</span></span><span id="line5954"><span>
</span></span><span id="line5955"><span>	if(BalSwing &gt; 0 &amp;&amp; BalSwung == 0)
</span></span><span id="line5956"><span>	{
</span></span><span id="line5957"><span>		if(Bal &gt;= BalUse)
</span></span><span id="line5958"><span>		{
</span></span><span id="line5959"><span>			BalSwing = BalSwing - 1;
</span></span><span id="line5960"><span>			Bal = Bal - BalUse;
</span></span><span id="line5961"><span>			BalSwung = 4;
</span></span><span id="line5962"><span>
</span></span><span id="line5963"><span>			if(SwingDrain &gt; 0 &amp;&amp; SP &gt;= SwingDrain)
</span></span><span id="line5964"><span>			{
</span></span><span id="line5965"><span>				SP = SP - SwingDrain;
</span></span><span id="line5966"><span>			}
</span></span><span id="line5967"><span>			doHit(1, 0);
</span></span><span id="line5968"><span>		}
</span></span><span id="line5969"><span>		else if(BalSwing &gt; 1)
</span></span><span id="line5970"><span>		{
</span></span><span id="line5971"><span>			BalSwing = 0;
</span></span><span id="line5972"><span>		}
</span></span><span id="line5973"><span>	}
</span></span><span id="line5974"><span>
</span></span><span id="line5975"><span>	if(IteTimer &gt; 0)
</span></span><span id="line5976"><span>	{
</span></span><span id="line5977"><span>		IteTimer = IteTimer - 1;
</span></span><span id="line5978"><span>		if(IteTimer </span><span>&lt;=</span><span> 0)
</span></span><span id="line5979"><span>		{
</span></span><span id="line5980"><span>			data.IteButton.disabled = 0;
</span></span><span id="line5981"><span>		}
</span></span><span id="line5982"><span>	}
</span></span><span id="line5983"><span>
</span></span><span id="line5984"><span>	if(SSOn == 1)
</span></span><span id="line5985"><span>	{
</span></span><span id="line5986"><span>    SSDrainFrames++;
</span></span><span id="line5987"><span>    
</span></span><span id="line5988"><span>    if(SSDrainFrames % 10 == 0)
</span></span><span id="line5989"><span>      SSDrainCurr += SSDrainInc10;
</span></span><span id="line5990"><span>    
</span></span><span id="line5991"><span>		SP = SP - SSDrainCurr;
</span></span><span id="line5992"><span>    
</span></span><span id="line5993"><span>    if(Math.random() </span><span>&lt; </span><span>0.333333333)
</span></span><span id="line5994"><span>  		SSDrainCurr = SSDrainCurr + 1;
</span></span><span id="line5995"><span>    
</span></span><span id="line5996"><span>		if(SP </span><span>&lt; </span><span>0)
</span></span><span id="line5997"><span>		{
</span></span><span id="line5998"><span>			SP = 0;
</span></span><span id="line5999"><span>			SSOn = 0;
</span></span><span id="line6000"><span>		}
</span></span><span id="line6001"><span>	}
</span></span><span id="line6002"><span>
</span></span><span id="line6003"><span>	for(var ability=0; ability</span><span>&lt;3</span><span>; ability++)
</span></span><span id="line6004"><span>	{
</span></span><span id="line6005"><span>		if(RangerDrain[ability] &gt; 0)
</span></span><span id="line6006"><span>		{
</span></span><span id="line6007"><span>			if(RangerWait[ability] &gt; 0)
</span></span><span id="line6008"><span>			{
</span></span><span id="line6009"><span>				RangerWait[ability] = RangerWait[ability] - 1;
</span></span><span id="line6010"><span>			}
</span></span><span id="line6011"><span>			else if(SP &gt; 0) //RangerDrain[ability])
</span></span><span id="line6012"><span>			{
</span></span><span id="line6013"><span>				SP = SP - RangerDrain[ability];
</span></span><span id="line6014"><span>				if(RangerTimer[ability] </span><span>&lt;=</span><span> 0)
</span></span><span id="line6015"><span>				{
</span></span><span id="line6016"><span>					RangerTimer[ability] = RangerTick[ability];
</span></span><span id="line6017"><span>					RangerDrain[ability] = RangerDrain[ability] + RangerInc[ability];
</span></span><span id="line6018"><span>				}
</span></span><span id="line6019"><span>				RangerTimer[ability] = RangerTimer[ability] - 1;
</span></span><span id="line6020"><span>			}
</span></span><span id="line6021"><span>			else
</span></span><span id="line6022"><span>			{
</span></span><span id="line6023"><span>				RangerDrain[ability] = 0;
</span></span><span id="line6024"><span>			}
</span></span><span id="line6025"><span>		}
</span></span><span id="line6026"><span>	}
</span></span><span id="line6027"><span>
</span></span><span id="line6028"><span>	if(!data.FreezeBalance.checked) Bal = Bal + BalReg;
</span></span><span id="line6029"><span>	if(!data.FreezeRegeneration.checked &amp;&amp; HP &gt;= 0) HP = HP + HPReg;
</span></span><span id="line6030"><span>	if(!data.FreezeEnRegeneration.checked &amp;&amp; EnHP &gt;= 0) EnHP = EnHP + EnHPReg;
</span></span><span id="line6031"><span>	if(!data.FreezeSpirit.checked) SP = SP + SPReg;
</span></span><span id="line6032"><span>
</span></span><span id="line6033"><span>	if(Bal &gt; BalMax) Bal = BalMax;
</span></span><span id="line6034"><span>	if(HP &gt; HPMax) HP = HPMax;
</span></span><span id="line6035"><span>	if(EnHP &gt; EnHPMax) EnHP = EnHPMax;
</span></span><span id="line6036"><span>	if(SP &gt; SPMax) SP = SPMax;
</span></span><span id="line6037"><span>
</span></span><span id="line6038"><span>	if(Bal &gt;= 0) setBalance(Bal, BalMax);
</span></span><span id="line6039"><span>	else setBalance(0, BalMax);
</span></span><span id="line6040"><span>	if(HP &gt;= 0) setHP(HP, HPMax);
</span></span><span id="line6041"><span>	else setHP(0, HPMax);
</span></span><span id="line6042"><span>	if(EnHP &gt;= 0) setEnHP(EnHP, EnHPMax);
</span></span><span id="line6043"><span>	else setEnHP(0, EnHPMax);
</span></span><span id="line6044"><span>	if(SP &gt;= 0) setSP(SP, SPMax);
</span></span><span id="line6045"><span>	else setSP(0, SPMax);
</span></span><span id="line6046"><span>
</span></span><span id="line6047"><span>	//var timer1 = setTimeout("simLoop();",BalTick - getDeltaTime());
</span></span><span id="line6048"><span>}
</span></span><span id="line6049"><span>
</span></span><span id="line6050"><span>function getDeltaTime()
</span></span><span id="line6051"><span>{
</span></span><span id="line6052"><span>	var timedif = 0;
</span></span><span id="line6053"><span>	if(GotFirstTick == 0)
</span></span><span id="line6054"><span>	{
</span></span><span id="line6055"><span>		GotFirstTick = 1;
</span></span><span id="line6056"><span>		Timer = new Date();
</span></span><span id="line6057"><span>		CurrTime = Timer.getTime();
</span></span><span id="line6058"><span>		timedif = 0;
</span></span><span id="line6059"><span>	}
</span></span><span id="line6060"><span>	else
</span></span><span id="line6061"><span>	{
</span></span><span id="line6062"><span>		var timeOld = CurrTime;
</span></span><span id="line6063"><span>		Timer = new Date();
</span></span><span id="line6064"><span>		CurrTime = Timer.getTime();
</span></span><span id="line6065"><span>		timedif = CurrTime - timeOld;
</span></span><span id="line6066"><span>	}
</span></span><span id="line6067"><span>	return timedif;
</span></span><span id="line6068"><span>}
</span></span><span id="line6069"><span>
</span></span><span id="line6070"><span>function setBalance(bal, maxbal)
</span></span><span id="line6071"><span>{
</span></span><span id="line6072"><span>	var data = document.getElementById("data");
</span></span><span id="line6073"><span>	var length = 125;
</span></span><span id="line6074"><span>	length = length * (bal / maxbal);
</span></span><span id="line6075"><span>	length = Math.floor(length);
</span></span><span id="line6076"><span>	if(length </span><span>&lt; </span><span>2 || length == 125)
</span></span><span id="line6077"><span>	{
</span></span><span id="line6078"><span>		data.barright.width = 0;
</span></span><span id="line6079"><span>	}
</span></span><span id="line6080"><span>	else
</span></span><span id="line6081"><span>	{
</span></span><span id="line6082"><span>		data.barright.width = 1;
</span></span><span id="line6083"><span>	}
</span></span><span id="line6084"><span>
</span></span><span id="line6085"><span>	data.CurrBalancePercent.value = 100 * (bal / maxbal);
</span></span><span id="line6086"><span>	data.CurrBalance.value = BalanceToBalthus(bal);
</span></span><span id="line6087"><span>
</span></span><span id="line6088"><span>	data.barmiddle.width=length-2;
</span></span><span id="line6089"><span>	data.barempty.width=124-length;
</span></span><span id="line6090"><span>}
</span></span><span id="line6091"><span>
</span></span><span id="line6092"><span>function setSP(spi, maxspi)
</span></span><span id="line6093"><span>{
</span></span><span id="line6094"><span>	var data = document.getElementById("data");
</span></span><span id="line6095"><span>	var length = 125;
</span></span><span id="line6096"><span>	length = length * (spi / maxspi);
</span></span><span id="line6097"><span>	length = Math.floor(length);
</span></span><span id="line6098"><span>	if(length </span><span>&lt; </span><span>2 || length == 125)
</span></span><span id="line6099"><span>	{
</span></span><span id="line6100"><span>		data.barright4.width = 0;
</span></span><span id="line6101"><span>	}
</span></span><span id="line6102"><span>	else
</span></span><span id="line6103"><span>	{
</span></span><span id="line6104"><span>		data.barright4.width = 1;
</span></span><span id="line6105"><span>	}
</span></span><span id="line6106"><span>
</span></span><span id="line6107"><span>	data.CurrSpiritPercent.value = 100 * (spi / maxspi);
</span></span><span id="line6108"><span>	data.CurrSplash.value = SpiritToSplash(spi);
</span></span><span id="line6109"><span>	data.CurrToomeria.value = SpiritToToomeria(spi);
</span></span><span id="line6110"><span>	data.CurrCrato.value = SpiritToCrato(spi);
</span></span><span id="line6111"><span>	data.CurrSpleisha.value = SpiritToSpleisha(spi);
</span></span><span id="line6112"><span>
</span></span><span id="line6113"><span>	data.barmiddle4.width=length-2;
</span></span><span id="line6114"><span>	data.barempty4.width=124-length;
</span></span><span id="line6115"><span>}
</span></span><span id="line6116"><span>
</span></span><span id="line6117"><span>function setHP(health, maxhealth)
</span></span><span id="line6118"><span>{
</span></span><span id="line6119"><span>	var data = document.getElementById("data");
</span></span><span id="line6120"><span>	var length = 125;
</span></span><span id="line6121"><span>	length = length * (health / maxhealth);
</span></span><span id="line6122"><span>	length = Math.floor(length);
</span></span><span id="line6123"><span>	if(length </span><span>&lt; </span><span>2 || length == 125)
</span></span><span id="line6124"><span>	{
</span></span><span id="line6125"><span>		data.barright2.width = 0;
</span></span><span id="line6126"><span>	}
</span></span><span id="line6127"><span>	else
</span></span><span id="line6128"><span>	{
</span></span><span id="line6129"><span>		data.barright2.width = 1;
</span></span><span id="line6130"><span>	}
</span></span><span id="line6131"><span>
</span></span><span id="line6132"><span>	var percent = 100 * (health / maxhealth);
</span></span><span id="line6133"><span>	data.CurrHealthPercent.value = percent
</span></span><span id="line6134"><span>	data.CurrHealth.value = HealthToHistia(health);
</span></span><span id="line6135"><span>
</span></span><span id="line6136"><span>	data.barmiddle2.width=length-2;
</span></span><span id="line6137"><span>	data.barempty2.width=124-length;
</span></span><span id="line6138"><span>
</span></span><span id="line6139"><span>	if(percent &gt;= 60) data.barmiddle2.src = 'images/bar4.bmp';
</span></span><span id="line6140"><span>	else if(percent &gt;= 20) data.barmiddle2.src = 'images/bar5.bmp';
</span></span><span id="line6141"><span>	else data.barmiddle2.src = 'images/bar6.bmp';
</span></span><span id="line6142"><span>}
</span></span><span id="line6143"><span>
</span></span><span id="line6144"><span>function setEnHP(health, maxhealth)
</span></span><span id="line6145"><span>{
</span></span><span id="line6146"><span>	var data = document.getElementById("data");
</span></span><span id="line6147"><span>	var length = 125;
</span></span><span id="line6148"><span>	length = length * (health / maxhealth);
</span></span><span id="line6149"><span>	length = Math.floor(length);
</span></span><span id="line6150"><span>	if(length </span><span>&lt; </span><span>2 || length == 125)
</span></span><span id="line6151"><span>	{
</span></span><span id="line6152"><span>		data.barright3.width = 0;
</span></span><span id="line6153"><span>	}
</span></span><span id="line6154"><span>	else
</span></span><span id="line6155"><span>	{
</span></span><span id="line6156"><span>		data.barright3.width = 1;
</span></span><span id="line6157"><span>	}
</span></span><span id="line6158"><span>
</span></span><span id="line6159"><span>	var percent = 100 * (health / maxhealth);
</span></span><span id="line6160"><span>	data.CurrEnHealthPercent.value = percent
</span></span><span id="line6161"><span>	data.CurrEnHealth.value = HealthToHistia(health);
</span></span><span id="line6162"><span>
</span></span><span id="line6163"><span>	data.barmiddle3.width=length-2;
</span></span><span id="line6164"><span>	data.barempty3.width=124-length;
</span></span><span id="line6165"><span>
</span></span><span id="line6166"><span>	if(percent &gt;= 60) data.barmiddle3.src = 'images/bar4.bmp';
</span></span><span id="line6167"><span>	else if(percent &gt;= 20) data.barmiddle3.src = 'images/bar5.bmp';
</span></span><span id="line6168"><span>	else data.barmiddle3.src = 'images/bar6.bmp';
</span></span><span id="line6169"><span>}
</span></span><span id="line6170"><span>
</span></span><span id="line6171"><span>function restoreBal()
</span></span><span id="line6172"><span>{
</span></span><span id="line6173"><span>	SwingForever = 0;
</span></span><span id="line6174"><span>	Bal = BalMax;
</span></span><span id="line6175"><span>}
</span></span><span id="line6176"><span>
</span></span><span id="line6177"><span>function restoreSpirit()
</span></span><span id="line6178"><span>{
</span></span><span id="line6179"><span>	RangerDrain[0] = 0;
</span></span><span id="line6180"><span>	RangerDrain[1] = 0;
</span></span><span id="line6181"><span>	RangerDrain[2] = 0;
</span></span><span id="line6182"><span>	SSOn = 0;
</span></span><span id="line6183"><span>	IteTimer = 0;
</span></span><span id="line6184"><span>	data.IteButton.disabled = 0;
</span></span><span id="line6185"><span>
</span></span><span id="line6186"><span>	SP = SPMax;
</span></span><span id="line6187"><span>}
</span></span><span id="line6188"><span>
</span></span><span id="line6189"><span>function useShieldstone()
</span></span><span id="line6190"><span>{
</span></span><span id="line6191"><span>	if(SSOn == 0)
</span></span><span id="line6192"><span>	{
</span></span><span id="line6193"><span>    SSDrainFrames = 0;
</span></span><span id="line6194"><span>		SSDrainCurr = SSDrain;
</span></span><span id="line6195"><span>		SSOn = 1;
</span></span><span id="line6196"><span>	}
</span></span><span id="line6197"><span>	else SSOn = 0;
</span></span><span id="line6198"><span>
</span></span><span id="line6199"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line6200"><span>}
</span></span><span id="line6201"><span>
</span></span><span id="line6202"><span>function useHeartwood()
</span></span><span id="line6203"><span>{
</span></span><span id="line6204"><span>	if(RangerDrain[0] != 0)
</span></span><span id="line6205"><span>	{
</span></span><span id="line6206"><span>		RangerDrain[0] = 0;
</span></span><span id="line6207"><span>	}
</span></span><span id="line6208"><span>	else if(SP &gt;= 2550)
</span></span><span id="line6209"><span>	{
</span></span><span id="line6210"><span>		SP = SP - 2550;
</span></span><span id="line6211"><span>		RangerWait[0] = 13;
</span></span><span id="line6212"><span>		RangerTimer[0] = 0;
</span></span><span id="line6213"><span>		RangerDrain[0] = 12;
</span></span><span id="line6214"><span>	}
</span></span><span id="line6215"><span>
</span></span><span id="line6216"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line6217"><span>}
</span></span><span id="line6218"><span>
</span></span><span id="line6219"><span>function useMorph()
</span></span><span id="line6220"><span>{
</span></span><span id="line6221"><span>	var data = document.getElementById("data");
</span></span><span id="line6222"><span>	var cost = parseFloat(data.MorphConsume.value);
</span></span><span id="line6223"><span>	if(!cost)
</span></span><span id="line6224"><span>		cost = 0;
</span></span><span id="line6225"><span>	cost = SplashToSpirit(cost);
</span></span><span id="line6226"><span>
</span></span><span id="line6227"><span>	if(RangerDrain[1] != 0)
</span></span><span id="line6228"><span>	{
</span></span><span id="line6229"><span>		RangerDrain[1] = 0;
</span></span><span id="line6230"><span>	}
</span></span><span id="line6231"><span>	else if(SP &gt;= cost)
</span></span><span id="line6232"><span>	{
</span></span><span id="line6233"><span>		SP = SP - cost;
</span></span><span id="line6234"><span>		RangerWait[1] = 1;
</span></span><span id="line6235"><span>		RangerTimer[1] = 0;
</span></span><span id="line6236"><span>		RangerDrain[1] = 16;
</span></span><span id="line6237"><span>	}
</span></span><span id="line6238"><span>
</span></span><span id="line6239"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line6240"><span>}
</span></span><span id="line6241"><span>
</span></span><span id="line6242"><span>function useBefriend()
</span></span><span id="line6243"><span>{
</span></span><span id="line6244"><span>	var data = document.getElementById("data");
</span></span><span id="line6245"><span>	var cost = parseFloat(data.BefriendConsume.value);
</span></span><span id="line6246"><span>	if(!cost)
</span></span><span id="line6247"><span>		cost = 0;
</span></span><span id="line6248"><span>	cost = SplashToSpirit(cost);
</span></span><span id="line6249"><span>
</span></span><span id="line6250"><span>	if(RangerDrain[2] != 0)
</span></span><span id="line6251"><span>	{
</span></span><span id="line6252"><span>		RangerDrain[2] = 0;
</span></span><span id="line6253"><span>	}
</span></span><span id="line6254"><span>	else if(SP &gt;= cost)
</span></span><span id="line6255"><span>	{
</span></span><span id="line6256"><span>		SP = SP - cost;
</span></span><span id="line6257"><span>		RangerWait[2] = 4;
</span></span><span id="line6258"><span>		RangerTimer[2] = 0;
</span></span><span id="line6259"><span>		RangerDrain[2] = 30;
</span></span><span id="line6260"><span>	}
</span></span><span id="line6261"><span>
</span></span><span id="line6262"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line6263"><span>}
</span></span><span id="line6264"><span>
</span></span><span id="line6265"><span>function useIte()
</span></span><span id="line6266"><span>{
</span></span><span id="line6267"><span>	var data = document.getElementById("data");
</span></span><span id="line6268"><span>	var Left = data.Lefthand.value;
</span></span><span id="line6269"><span>	var Shoulder = data.Shoulder.value;
</span></span><span id="line6270"><span>  var Ite = Shoulder;
</span></span><span id="line6271"><span>	if(Ite != 101 &amp;&amp; Ite != 102 &amp;&amp; Ite != 103 &amp;&amp; Ite != 104 &amp;&amp; Ite != 105 &amp;&amp; Ite != 106 &amp;&amp; Ite != 107 &amp;&amp; Ite != 108)
</span></span><span id="line6272"><span>    Ite = Left;
</span></span><span id="line6273"><span>  
</span></span><span id="line6274"><span>	var iteStr = 0;
</span></span><span id="line6275"><span>	if(Ite == 101 || Ite == 105) {
</span></span><span id="line6276"><span>		iteStr = AtkiteStr;
</span></span><span id="line6277"><span>	}
</span></span><span id="line6278"><span>	else if(Ite == 102 || Ite == 106) {
</span></span><span id="line6279"><span>		iteStr = DarkiteStr;
</span></span><span id="line6280"><span>	}
</span></span><span id="line6281"><span>	else if(Ite == 103 || Ite == 107) {
</span></span><span id="line6282"><span>		iteStr = BalthiteStr;
</span></span><span id="line6283"><span>	}
</span></span><span id="line6284"><span>	else if(Ite == 104 || Ite == 108) {
</span></span><span id="line6285"><span>		iteStr = DethiteStr;
</span></span><span id="line6286"><span>	}
</span></span><span id="line6287"><span>	else {
</span></span><span id="line6288"><span>		iteStr = Math.max(AtkiteStr, DarkiteStr, BalthiteStr, DethiteStr);
</span></span><span id="line6289"><span>	}
</span></span><span id="line6290"><span>	
</span></span><span id="line6291"><span>	var SPCost = IteCost(iteStr);
</span></span><span id="line6292"><span>	
</span></span><span id="line6293"><span>	if(SP &gt;= SPCost)
</span></span><span id="line6294"><span>	{
</span></span><span id="line6295"><span>		SP = SP - SPCost;
</span></span><span id="line6296"><span>		IteTimer = 68 + 1;
</span></span><span id="line6297"><span>		data.IteButton.disabled = 1;
</span></span><span id="line6298"><span>	}
</span></span><span id="line6299"><span>
</span></span><span id="line6300"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line6301"><span>}
</span></span><span id="line6302"><span>
</span></span><span id="line6303"><span>function useCloak()
</span></span><span id="line6304"><span>{
</span></span><span id="line6305"><span>	if(SP &gt;= 12000)
</span></span><span id="line6306"><span>	{
</span></span><span id="line6307"><span>		SP = SP - 12000;
</span></span><span id="line6308"><span>	}
</span></span><span id="line6309"><span>
</span></span><span id="line6310"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line6311"><span>
</span></span><span id="line6312"><span>}
</span></span><span id="line6313"><span>
</span></span><span id="line6314"><span>function useGirdle()
</span></span><span id="line6315"><span>{
</span></span><span id="line6316"><span>	if(SP &gt;= 10000)
</span></span><span id="line6317"><span>	{
</span></span><span id="line6318"><span>		SP = SP - 10000;
</span></span><span id="line6319"><span>	}
</span></span><span id="line6320"><span>
</span></span><span id="line6321"><span>	if(BalRunning == 0) simStart();
</span></span><span id="line6322"><span>}
</span></span><span id="line6323"><span>
</span></span><span id="line6324"><span>function BalancePerTick(regen)
</span></span><span id="line6325"><span>{
</span></span><span id="line6326"><span>	return regen/6;
</span></span><span id="line6327"><span>}
</span></span><span id="line6328"><span>
</span></span><span id="line6329"><span>function DamageToMinHistia(damage)
</span></span><span id="line6330"><span>{
</span></span><span id="line6331"><span>	return (Math.max(damage,0) + 100) / 111;
</span></span><span id="line6332"><span>}
</span></span><span id="line6333"><span>
</span></span><span id="line6334"><span>function DamageToAvgHistia(min, max)
</span></span><span id="line6335"><span>{
</span></span><span id="line6336"><span>	return (DamageToMinHistia(min) + DamageToMaxHistia(max)) / 2;
</span></span><span id="line6337"><span>}
</span></span><span id="line6338"><span>
</span></span><span id="line6339"><span>function DamageToMaxHistia(damage)
</span></span><span id="line6340"><span>{
</span></span><span id="line6341"><span>	return (Math.max(damage*3,0) + 100) / 111;
</span></span><span id="line6342"><span>}
</span></span><span id="line6343"><span>
</span></span><span id="line6344"><span>function IteCost(stren) {
</span></span><span id="line6345"><span>	var cost = 4690;
</span></span><span id="line6346"><span>	
</span></span><span id="line6347"><span>  /*
</span></span><span id="line6348"><span>	if(stren &gt; 91) {
</span></span><span id="line6349"><span>		cost += Math.floor((stren - 91) * 17 / 50) * 67;
</span></span><span id="line6350"><span>	}
</span></span><span id="line6351"><span>  */
</span></span><span id="line6352"><span>	
</span></span><span id="line6353"><span>	return cost;
</span></span><span id="line6354"><span>}
</span></span><span id="line6355"><span>
</span></span><span id="line6356"><span>function IteBoostStrength(chan)
</span></span><span id="line6357"><span>{
</span></span><span id="line6358"><span>  return Math.max(chan - 20, 0);
</span></span><span id="line6359"><span>}
</span></span><span id="line6360"><span>
</span></span><span id="line6361"><span>function TroilusToRegeneration(troilus)
</span></span><span id="line6362"><span>{
</span></span><span id="line6363"><span>	return troilus * 6;
</span></span><span id="line6364"><span>}
</span></span><span id="line6365"><span>
</span></span><span id="line6366"><span>function RegenerationToTroilus(regen)
</span></span><span id="line6367"><span>{
</span></span><span id="line6368"><span>	return regen / 6;
</span></span><span id="line6369"><span>}
</span></span><span id="line6370"><span>
</span></span><span id="line6371"><span>function AkturToAccuracy(aktur)
</span></span><span id="line6372"><span>{
</span></span><span id="line6373"><span>	return aktur * 25;
</span></span><span id="line6374"><span>}
</span></span><span id="line6375"><span>
</span></span><span id="line6376"><span>function AccuracyToAktur(accuracy)
</span></span><span id="line6377"><span>{
</span></span><span id="line6378"><span>	return accuracy / 25;
</span></span><span id="line6379"><span>}
</span></span><span id="line6380"><span>
</span></span><span id="line6381"><span>function AtkusToAccuracy(atkus)
</span></span><span id="line6382"><span>{
</span></span><span id="line6383"><span>	return atkus * 16;
</span></span><span id="line6384"><span>}
</span></span><span id="line6385"><span>
</span></span><span id="line6386"><span>function AccuracyToAtkus(accuracy)
</span></span><span id="line6387"><span>{
</span></span><span id="line6388"><span>	return accuracy / 16;
</span></span><span id="line6389"><span>}
</span></span><span id="line6390"><span>
</span></span><span id="line6391"><span>function DarkusToDamage(darkus)
</span></span><span id="line6392"><span>{
</span></span><span id="line6393"><span>	return darkus * 6;
</span></span><span id="line6394"><span>}
</span></span><span id="line6395"><span>
</span></span><span id="line6396"><span>function DamageToDarkus(damage)
</span></span><span id="line6397"><span>{
</span></span><span id="line6398"><span>	return damage / 6;
</span></span><span id="line6399"><span>}
</span></span><span id="line6400"><span>
</span></span><span id="line6401"><span>function DarkturToDamage(darktur)
</span></span><span id="line6402"><span>{
</span></span><span id="line6403"><span>	return darktur * 10;
</span></span><span id="line6404"><span>}
</span></span><span id="line6405"><span>
</span></span><span id="line6406"><span>function DamageToDarktur(damage)
</span></span><span id="line6407"><span>{
</span></span><span id="line6408"><span>	return damage / 10;
</span></span><span id="line6409"><span>}
</span></span><span id="line6410"><span>
</span></span><span id="line6411"><span>function BalthusToBalance(balthus)
</span></span><span id="line6412"><span>{
</span></span><span id="line6413"><span>	return balthus * 51;
</span></span><span id="line6414"><span>}
</span></span><span id="line6415"><span>
</span></span><span id="line6416"><span>function BalanceToBalthus(balance)
</span></span><span id="line6417"><span>{
</span></span><span id="line6418"><span>	return balance / 51;
</span></span><span id="line6419"><span>}
</span></span><span id="line6420"><span>
</span></span><span id="line6421"><span>function RegiaToRegen(regia)
</span></span><span id="line6422"><span>{
</span></span><span id="line6423"><span>	return regia * 15;
</span></span><span id="line6424"><span>}
</span></span><span id="line6425"><span>
</span></span><span id="line6426"><span>function RegenToRegia(regen)
</span></span><span id="line6427"><span>{
</span></span><span id="line6428"><span>	return regen / 15;
</span></span><span id="line6429"><span>}
</span></span><span id="line6430"><span>
</span></span><span id="line6431"><span>function HistiaToHealth(histia)
</span></span><span id="line6432"><span>{
</span></span><span id="line6433"><span>	return histia * 111;
</span></span><span id="line6434"><span>}
</span></span><span id="line6435"><span>
</span></span><span id="line6436"><span>function HealthToHistia(health)
</span></span><span id="line6437"><span>{
</span></span><span id="line6438"><span>	return health / 111;
</span></span><span id="line6439"><span>}
</span></span><span id="line6440"><span>
</span></span><span id="line6441"><span>function DethaToDefense(detha)
</span></span><span id="line6442"><span>{
</span></span><span id="line6443"><span>	return detha * 19;
</span></span><span id="line6444"><span>}
</span></span><span id="line6445"><span>
</span></span><span id="line6446"><span>function DefenseToDetha(defense)
</span></span><span id="line6447"><span>{
</span></span><span id="line6448"><span>	return defense / 19;
</span></span><span id="line6449"><span>}
</span></span><span id="line6450"><span>
</span></span><span id="line6451"><span>function BalanceToDefense(balance) {
</span></span><span id="line6452"><span>  //return (balance * 19 / 51) / 1.24;
</span></span><span id="line6453"><span>  return balance * 0.3;
</span></span><span id="line6454"><span>}
</span></span><span id="line6455"><span>
</span></span><span id="line6456"><span>function CratoToSpirit(crato)
</span></span><span id="line6457"><span>{
</span></span><span id="line6458"><span>	return crato*373;
</span></span><span id="line6459"><span>}
</span></span><span id="line6460"><span>
</span></span><span id="line6461"><span>function SpiritToCrato(spirit)
</span></span><span id="line6462"><span>{
</span></span><span id="line6463"><span>	return spirit / 373;
</span></span><span id="line6464"><span>}
</span></span><span id="line6465"><span>
</span></span><span id="line6466"><span>function SpleishaToSpirit(spleisha)
</span></span><span id="line6467"><span>{
</span></span><span id="line6468"><span>	return spleisha*373;
</span></span><span id="line6469"><span>}
</span></span><span id="line6470"><span>
</span></span><span id="line6471"><span>function SpiritToSpleisha(spirit)
</span></span><span id="line6472"><span>{
</span></span><span id="line6473"><span>	return spirit / 373;
</span></span><span id="line6474"><span>}
</span></span><span id="line6475"><span>
</span></span><span id="line6476"><span>function SplashToSpirit(splash)
</span></span><span id="line6477"><span>{
</span></span><span id="line6478"><span>	return splash*373;
</span></span><span id="line6479"><span>}
</span></span><span id="line6480"><span>
</span></span><span id="line6481"><span>function SpiritToSplash(spirit)
</span></span><span id="line6482"><span>{
</span></span><span id="line6483"><span>	return spirit / 373;
</span></span><span id="line6484"><span>}
</span></span><span id="line6485"><span>
</span></span><span id="line6486"><span>function OldSplashToSpirit(splash)
</span></span><span id="line6487"><span>{
</span></span><span id="line6488"><span>	return splash*375;
</span></span><span id="line6489"><span>}
</span></span><span id="line6490"><span>
</span></span><span id="line6491"><span>function SpiritToOldSplash(spirit)
</span></span><span id="line6492"><span>{
</span></span><span id="line6493"><span>	return spirit / 375;
</span></span><span id="line6494"><span>}
</span></span><span id="line6495"><span>
</span></span><span id="line6496"><span>function ToomeriaToSpirit(toomeria)
</span></span><span id="line6497"><span>{
</span></span><span id="line6498"><span>	return toomeria*500;
</span></span><span id="line6499"><span>}
</span></span><span id="line6500"><span>
</span></span><span id="line6501"><span>function SpiritToToomeria(spirit)
</span></span><span id="line6502"><span>{
</span></span><span id="line6503"><span>	return spirit / 500;
</span></span><span id="line6504"><span>}
</span></span><span id="line6505"><span>
</span></span><span id="line6506"><span>function RespinToSpiritRegen(respin)
</span></span><span id="line6507"><span>{
</span></span><span id="line6508"><span>	return respin*32;
</span></span><span id="line6509"><span>}
</span></span><span id="line6510"><span>
</span></span><span id="line6511"><span>function SpiritRegenToRespin(regen)
</span></span><span id="line6512"><span>{
</span></span><span id="line6513"><span>	return regen / 32;
</span></span><span id="line6514"><span>}
</span></span><span id="line6515"><span>
</span></span><span id="line6516"><span>function CMToAccuracy(cm)
</span></span><span id="line6517"><span>{
</span></span><span id="line6518"><span>  return Math.floor(cm * 25);
</span></span><span id="line6519"><span>}
</span></span><span id="line6520"><span>
</span></span><span id="line6521"><span>function CMToMinDamage(cm)
</span></span><span id="line6522"><span>{
</span></span><span id="line6523"><span>  return Math.floor(cm * 10.32);
</span></span><span id="line6524"><span>}
</span></span><span id="line6525"><span>
</span></span><span id="line6526"><span>function CMToMaxDamage(cm)
</span></span><span id="line6527"><span>{
</span></span><span id="line6528"><span>  return Math.floor(cm * 10.32);
</span></span><span id="line6529"><span>}
</span></span><span id="line6530"><span>
</span></span><span id="line6531"><span>function CMToAvgDamage(cm)
</span></span><span id="line6532"><span>{
</span></span><span id="line6533"><span>  return Math.floor(cm * 10.32);
</span></span><span id="line6534"><span>}
</span></span><span id="line6535"><span>
</span></span><span id="line6536"><span>function CMToBalance(cm)
</span></span><span id="line6537"><span>{
</span></span><span id="line6538"><span>  return Math.floor(cm * 51);
</span></span><span id="line6539"><span>}
</span></span><span id="line6540"><span>
</span></span><span id="line6541"><span>function CMToDefense(cm)
</span></span><span id="line6542"><span>{
</span></span><span id="line6543"><span>  return Math.floor(cm * 19);
</span></span><span id="line6544"><span>}
</span></span><span id="line6545"><span>
</span></span><span id="line6546"><span>function GetLabrysDamage(MinDmg, MaxDmg, TFell, LabrysTargets)
</span></span><span id="line6547"><span>{
</span></span><span id="line6548"><span>  if(isNaN(LabrysTargets))
</span></span><span id="line6549"><span>    LabrysTargets = parseInt(LabrysTargets);
</span></span><span id="line6550"><span>  if(isNaN(LabrysTargets) || LabrysTargets </span><span>&lt; </span><span>1)
</span></span><span id="line6551"><span>    LabrysTargets = 1;
</span></span><span id="line6552"><span>  
</span></span><span id="line6553"><span>  var FlatMin, FlatMax, ScaleMin, ScaleMax;
</span></span><span id="line6554"><span>  if(LabrysTargets == 1) {
</span></span><span id="line6555"><span>    FlatMin = -700;
</span></span><span id="line6556"><span>    FlatMax = -700;
</span></span><span id="line6557"><span>    ScaleMin = 4;
</span></span><span id="line6558"><span>    ScaleMax = 4;
</span></span><span id="line6559"><span>  }
</span></span><span id="line6560"><span>  else if(LabrysTargets == 2) {
</span></span><span id="line6561"><span>    FlatMin = -500;
</span></span><span id="line6562"><span>    FlatMax = -400;
</span></span><span id="line6563"><span>    ScaleMin = 7;
</span></span><span id="line6564"><span>    ScaleMax = 7;
</span></span><span id="line6565"><span>  }
</span></span><span id="line6566"><span>  else if(LabrysTargets == 3) {
</span></span><span id="line6567"><span>    FlatMin = 200;
</span></span><span id="line6568"><span>    FlatMax = 400;
</span></span><span id="line6569"><span>    ScaleMin = 9;
</span></span><span id="line6570"><span>    ScaleMax = 9;
</span></span><span id="line6571"><span>  }
</span></span><span id="line6572"><span>  else if(LabrysTargets == 4) {
</span></span><span id="line6573"><span>    FlatMin = 300;
</span></span><span id="line6574"><span>    FlatMax = 600;
</span></span><span id="line6575"><span>    ScaleMin = 13;
</span></span><span id="line6576"><span>    ScaleMax = 13;
</span></span><span id="line6577"><span>  }
</span></span><span id="line6578"><span>  else if(LabrysTargets == 5) {
</span></span><span id="line6579"><span>    FlatMin = 400;
</span></span><span id="line6580"><span>    FlatMax = 800;
</span></span><span id="line6581"><span>    ScaleMin = 18;
</span></span><span id="line6582"><span>    ScaleMax = 18;
</span></span><span id="line6583"><span>  }
</span></span><span id="line6584"><span>  else {
</span></span><span id="line6585"><span>    FlatMin = 100 * (LabrysTargets-1);
</span></span><span id="line6586"><span>    FlatMax = 200 * (LabrysTargets-1);
</span></span><span id="line6587"><span>    ScaleMin = 18;
</span></span><span id="line6588"><span>    ScaleMax = 18;
</span></span><span id="line6589"><span>  }
</span></span><span id="line6590"><span>  
</span></span><span id="line6591"><span>  MinDmg += FlatMin + (ScaleMin * TFell);
</span></span><span id="line6592"><span>  MaxDmg += FlatMax + (ScaleMax * TFell);
</span></span><span id="line6593"><span>  
</span></span><span id="line6594"><span>  MinDmg = Math.floor(MinDmg / LabrysTargets);
</span></span><span id="line6595"><span>  MaxDmg = Math.floor(MaxDmg / LabrysTargets);
</span></span><span id="line6596"><span>  
</span></span><span id="line6597"><span>  return [ MinDmg, MaxDmg ];
</span></span><span id="line6598"><span>}
</span></span><span id="line6599"><span>
</span></span><span id="line6600"><span>function paddedOutput(v, p, align) {
</span></span><span id="line6601"><span>  v = v.toString();
</span></span><span id="line6602"><span>  
</span></span><span id="line6603"><span>  if(v.length </span><span>&lt; </span><span>p) {
</span></span><span id="line6604"><span>    if(align == "right") {
</span></span><span id="line6605"><span>      while(v.length </span><span>&lt; </span><span>p)
</span></span><span id="line6606"><span>        v = " " + v;
</span></span><span id="line6607"><span>    }
</span></span><span id="line6608"><span>    else if(align == "center") {
</span></span><span id="line6609"><span>      var s = true;
</span></span><span id="line6610"><span>      while(v.length </span><span>&lt; </span><span>p) {
</span></span><span id="line6611"><span>        if(s)
</span></span><span id="line6612"><span>          v = " " + v;
</span></span><span id="line6613"><span>        else
</span></span><span id="line6614"><span>          v += " ";
</span></span><span id="line6615"><span>        s = !s;
</span></span><span id="line6616"><span>      }
</span></span><span id="line6617"><span>    }
</span></span><span id="line6618"><span>    else {
</span></span><span id="line6619"><span>      while(v.length </span><span>&lt; </span><span>p)
</span></span><span id="line6620"><span>        v += " ";
</span></span><span id="line6621"><span>    }
</span></span><span id="line6622"><span>  }
</span></span><span id="line6623"><span>  else {
</span></span><span id="line6624"><span>    v += " ";
</span></span><span id="line6625"><span>  }
</span></span><span id="line6626"><span>  
</span></span><span id="line6627"><span>  return v;
</span></span><span id="line6628"><span>}
</span></span><span id="line6629"><span>
</span></span><span id="line6630"><span>function loadCookies()
</span></span><span id="line6631"><span>{
</span></span><span id="line6632"><span>	for(var newC=1; newC</span><span>&lt;=</span><span>5; newC++)
</span></span><span id="line6633"><span>	{
</span></span><span id="line6634"><span>		var cookieArray = readCookieArray("FC"+newC);
</span></span><span id="line6635"><span>		if(cookieArray[1])
</span></span><span id="line6636"><span>		{
</span></span><span id="line6637"><span>			var setNum = (newC-1)*4;
</span></span><span id="line6638"><span>			for(var i=1; i</span><span>&lt;=</span><span>8; i=i+2)
</span></span><span id="line6639"><span>			{
</span></span><span id="line6640"><span>				setNum++;
</span></span><span id="line6641"><span>				var cookieValue = cookieArray[i];
</span></span><span id="line6642"><span>				loadData(setNum, cookieValue);
</span></span><span id="line6643"><span>				
</span></span><span id="line6644"><span>				cookieValue = cookieArray[i+1];
</span></span><span id="line6645"><span>				loadNotes(setNum, cookieValue);
</span></span><span id="line6646"><span>			}
</span></span><span id="line6647"><span>		}
</span></span><span id="line6648"><span>		else
</span></span><span id="line6649"><span>		{
</span></span><span id="line6650"><span>			var setNum = (newC-1)*4;
</span></span><span id="line6651"><span>			for(var i=0; i</span><span>&lt;4</span><span>; i++)
</span></span><span id="line6652"><span>			{
</span></span><span id="line6653"><span>				setNum++;
</span></span><span id="line6654"><span>				var cookieValue = readCookie("data" + setNum);
</span></span><span id="line6655"><span>				loadData(setNum, cookieValue);
</span></span><span id="line6656"><span>				
</span></span><span id="line6657"><span>				cookieValue = readCookie("fighterNotes" + setNum);
</span></span><span id="line6658"><span>				loadNotes(setNum, cookieValue);
</span></span><span id="line6659"><span>			}
</span></span><span id="line6660"><span>		}
</span></span><span id="line6661"><span>	}
</span></span><span id="line6662"><span>}
</span></span><span id="line6663"><span>
</span></span><span id="line6664"><span>function pageLoad()
</span></span><span id="line6665"><span>{
</span></span><span id="line6666"><span>	var data = document.getElementById("data");
</span></span><span id="line6667"><span>  
</span></span><span id="line6668"><span>  gProfileMenu = new profileMenu({
</span></span><span id="line6669"><span>    valueInputName:"Set",
</span></span><span id="line6670"><span>    nameInputName:"SetName",
</span></span><span id="line6671"><span>    menuOptImages:[
</span></span><span id="line6672"><span>      {
</span></span><span id="line6673"><span>        menuName:"Race",
</span></span><span id="line6674"><span>        setValueIndex:21
</span></span><span id="line6675"><span>      },
</span></span><span id="line6676"><span>      {
</span></span><span id="line6677"><span>        menuName:"SubclassWeapon",
</span></span><span id="line6678"><span>        setValueIndex:46
</span></span><span id="line6679"><span>      }
</span></span><span id="line6680"><span>    ],
</span></span><span id="line6681"><span>    menuBackgroundColor:"#A09790",
</span></span><span id="line6682"><span>    onchangeValue:function() { selectSet(); },
</span></span><span id="line6683"><span>    onchangeName:function() { saveData(CurrSet, 1); }
</span></span><span id="line6684"><span>  });
</span></span><span id="line6685"><span>	gProfileMenu.generateMainElts();
</span></span><span id="line6686"><span>  
</span></span><span id="line6687"><span>  initIconMenus();
</span></span><span id="line6688"><span>	loadCookies();
</span></span><span id="line6689"><span>  
</span></span><span id="line6690"><span>	/*
</span></span><span id="line6691"><span>	for(var i=1; i</span><span>&lt;2</span><span>1; i++)
</span></span><span id="line6692"><span>		loadData(i);
</span></span><span id="line6693"><span>	*/
</span></span><span id="line6694"><span>  
</span></span><span id="line6695"><span>  for(var i=1; i</span><span>&lt;=</span><span>20; i++) {
</span></span><span id="line6696"><span>    gProfileMenu.updateOpt(i, sets[i]);
</span></span><span id="line6697"><span>  }
</span></span><span id="line6698"><span>  
</span></span><span id="line6699"><span>	switchSet(1);
</span></span><span id="line6700"><span>	data.Set.value = 1;
</span></span><span id="line6701"><span>	sets[21][0] = "";
</span></span><span id="line6702"><span>  
</span></span><span id="line6703"><span>  loadURLBuild();
</span></span><span id="line6704"><span>  
</span></span><span id="line6705"><span>  var inputs = document.getElementsByTagName("input");
</span></span><span id="line6706"><span>  for(var i=0; i</span><span>&lt;i</span><span>nputs.length; i++) {
</span></span><span id="line6707"><span>    inputs[i].autocomplete = "off";
</span></span><span id="line6708"><span>  }
</span></span><span id="line6709"><span>}
</span></span><span id="line6710"><span>
</span></span><span id="line6711"><span>function selectSet()
</span></span><span id="line6712"><span>{
</span></span><span id="line6713"><span>	var data = document.getElementById("data");
</span></span><span id="line6714"><span>	var set = data.Set.value;
</span></span><span id="line6715"><span>
</span></span><span id="line6716"><span>	saveData(CurrSet, 1);
</span></span><span id="line6717"><span>
</span></span><span id="line6718"><span>	switchSet(set);
</span></span><span id="line6719"><span>
</span></span><span id="line6720"><span>	CurrSet = set;
</span></span><span id="line6721"><span>}
</span></span><span id="line6722"><span>
</span></span><span id="line6723"><span>function clearSet(e)
</span></span><span id="line6724"><span>{
</span></span><span id="line6725"><span>	var data = document.getElementById("data");
</span></span><span id="line6726"><span>	if (data.SetName.value == "DEBUG")
</span></span><span id="line6727"><span>	{
</span></span><span id="line6728"><span>		DebugModeOn = 1;
</span></span><span id="line6729"><span>		alert("DEBUG MODE ON.");
</span></span><span id="line6730"><span>	}
</span></span><span id="line6731"><span>	switchSet(0, false);
</span></span><span id="line6732"><span>  saveData(CurrSet, 1);
</span></span><span id="line6733"><span>}
</span></span><span id="line6734"><span>
</span></span><span id="line6735"><span>function switchSet(set, loadDateModified)
</span></span><span id="line6736"><span>{
</span></span><span id="line6737"><span>  if(typeof loadDateModified == "undefined")
</span></span><span id="line6738"><span>    loadDateModified = true;
</span></span><span id="line6739"><span>  
</span></span><span id="line6740"><span>	var data = document.getElementById("data");
</span></span><span id="line6741"><span>
</span></span><span id="line6742"><span>	if(set &gt; 0)
</span></span><span id="line6743"><span>		data.SetName.value = sets[set][0];
</span></span><span id="line6744"><span>  
</span></span><span id="line6745"><span>	data.EAtkus.value = sets[set][1];
</span></span><span id="line6746"><span>	data.TAtkus.value = sets[set][2];
</span></span><span id="line6747"><span>	data.EDarkus.value = sets[set][3];
</span></span><span id="line6748"><span>	data.TDarkus.value = sets[set][4];
</span></span><span id="line6749"><span>	data.EBalthus.value = sets[set][5];
</span></span><span id="line6750"><span>	data.TBalthus.value = sets[set][6];
</span></span><span id="line6751"><span>	data.ERegia.value = sets[set][7];
</span></span><span id="line6752"><span>	data.TRegia.value = sets[set][8];
</span></span><span id="line6753"><span>	data.TEvus.value = sets[set][9];
</span></span><span id="line6754"><span>	data.TSwengus.value = sets[set][10];
</span></span><span id="line6755"><span>	data.EHistia.value = sets[set][11];
</span></span><span id="line6756"><span>	data.THistia.value = sets[set][12];
</span></span><span id="line6757"><span>	data.EDetha.value = sets[set][13];
</span></span><span id="line6758"><span>	data.TDetha.value = sets[set][14];
</span></span><span id="line6759"><span>  
</span></span><span id="line6760"><span>	data.TFell.value = sets[set][15];
</span></span><span id="line6761"><span>	data.TChan.value = sets[set][16];
</span></span><span id="line6762"><span>	data.TAtkite.value = sets[set][17];
</span></span><span id="line6763"><span>	data.TDarkite.value = sets[set][18];
</span></span><span id="line6764"><span>	data.TBalthite.value = sets[set][19];
</span></span><span id="line6765"><span>	data.TDethite.value = sets[set][20];
</span></span><span id="line6766"><span>  
</span></span><span id="line6767"><span>	data.Race.value = sets[set][21];
</span></span><span id="line6768"><span>	data.Weapon.value = sets[set][22];
</span></span><span id="line6769"><span>	data.Lefthand.value = sets[set][23];
</span></span><span id="line6770"><span>  
</span></span><span id="line6771"><span>  /*
</span></span><span id="line6772"><span>	var gotRadio = 0;
</span></span><span id="line6773"><span>	for(var i=0; i</span><span>&lt;F</span><span>PSArray.length - 1; i++)
</span></span><span id="line6774"><span>	{
</span></span><span id="line6775"><span>		if(sets[set][24] == FPSArray[i])
</span></span><span id="line6776"><span>		{
</span></span><span id="line6777"><span>			setRadio(data.FPSRadio, i);
</span></span><span id="line6778"><span>			gotRadio = 1;
</span></span><span id="line6779"><span>			break;
</span></span><span id="line6780"><span>		}
</span></span><span id="line6781"><span>	}
</span></span><span id="line6782"><span>	if(gotRadio == 0)
</span></span><span id="line6783"><span>	{
</span></span><span id="line6784"><span>		setRadio(data.FPSRadio, FPSArray.length-1);
</span></span><span id="line6785"><span>		data.FPS.value = sets[set][24];
</span></span><span id="line6786"><span>	}
</span></span><span id="line6787"><span>	setFPS(i);
</span></span><span id="line6788"><span>  */
</span></span><span id="line6789"><span>  simStop();
</span></span><span id="line6790"><span>  
</span></span><span id="line6791"><span>	data.ETroilus.value = sets[set][25];
</span></span><span id="line6792"><span>	data.TTroilus.value = sets[set][26];
</span></span><span id="line6793"><span>	data.ERodnus.value = sets[set][27];
</span></span><span id="line6794"><span>	data.TRodnus.value = sets[set][28];
</span></span><span id="line6795"><span>	data.TFarly.value = sets[set][29];
</span></span><span id="line6796"><span>	data.TKnox.value = sets[set][30];
</span></span><span id="line6797"><span>	data.TAngilsa.value = sets[set][31];
</span></span><span id="line6798"><span>	data.TBodrus.value = sets[set][32];
</span></span><span id="line6799"><span>
</span></span><span id="line6800"><span>	data.TGoss.value = sets[set][33];
</span></span><span id="line6801"><span>  
</span></span><span id="line6802"><span>  var AtkusReq = sets[set][34].toString();
</span></span><span id="line6803"><span>  if(AtkusReq.charAt(0) == "R")
</span></span><span id="line6804"><span>    AtkusReq = AtkusReq.substring(1);
</span></span><span id="line6805"><span>  else
</span></span><span id="line6806"><span>    AtkusReq = 99999;
</span></span><span id="line6807"><span>	data.AtkusReq.value = AtkusReq;
</span></span><span id="line6808"><span>  
</span></span><span id="line6809"><span>	data.TErthron.value = sets[set][35];
</span></span><span id="line6810"><span>	data.TForvyola.value = sets[set][36];
</span></span><span id="line6811"><span>	data.TBangus.value = sets[set][37];
</span></span><span id="line6812"><span>
</span></span><span id="line6813"><span>	data.TToomeria.value = sets[set][38];
</span></span><span id="line6814"><span>	data.TSplash.value = sets[set][39];
</span></span><span id="line6815"><span>	data.TRespin.value = sets[set][40];
</span></span><span id="line6816"><span>	data.TDuvin.value = sets[set][41];
</span></span><span id="line6817"><span>	data.THeen.value = sets[set][42];
</span></span><span id="line6818"><span>
</span></span><span id="line6819"><span>	data.TErthronNew.value = sets[set][43];
</span></span><span id="line6820"><span>	
</span></span><span id="line6821"><span>  if(loadDateModified)
</span></span><span id="line6822"><span>    data.DateModified.value = sets[set][44];
</span></span><span id="line6823"><span>	
</span></span><span id="line6824"><span>	CurrNotes = sets[set][45];
</span></span><span id="line6825"><span>	
</span></span><span id="line6826"><span>	data.Subclass.value = sets[set][46];
</span></span><span id="line6827"><span>	data.TCrato.value = sets[set][47];
</span></span><span id="line6828"><span>	data.TTracking.value = sets[set][48];
</span></span><span id="line6829"><span>	data.TSpleisha.value = sets[set][49];
</span></span><span id="line6830"><span>	data.TBB.value = sets[set][50];
</span></span><span id="line6831"><span>	data.ESpiritus.value = sets[set][51];
</span></span><span id="line6832"><span>	data.TSpiritus.value = sets[set][52];
</span></span><span id="line6833"><span>
</span></span><span id="line6834"><span>	data.TAktur.value = sets[set][53];
</span></span><span id="line6835"><span>	data.TAtkia.value = sets[set][54];
</span></span><span id="line6836"><span>	data.TCloak.value = sets[set][55];
</span></span><span id="line6837"><span>	data.TGirdle.value = sets[set][56];
</span></span><span id="line6838"><span>
</span></span><span id="line6839"><span>	data.TCryptus.value = sets[set][57];
</span></span><span id="line6840"><span>	data.TDisabla.value = sets[set][58];
</span></span><span id="line6841"><span>	data.TDantus.value = sets[set][59];
</span></span><span id="line6842"><span>	data.TAneurus.value = sets[set][60];
</span></span><span id="line6843"><span>	data.TPosuhm.value = sets[set][61];
</span></span><span id="line6844"><span>	data.TAnemia.value = sets[set][62];
</span></span><span id="line6845"><span>	data.TStedfustus.value = sets[set][63];
</span></span><span id="line6846"><span>	
</span></span><span id="line6847"><span>	data.TChampReg.value = sets[set][64];
</span></span><span id="line6848"><span>	
</span></span><span id="line6849"><span>	data.TSplashOld.value = sets[set][65];
</span></span><span id="line6850"><span>	data.TSpleishaOld.value = sets[set][66];
</span></span><span id="line6851"><span>  
</span></span><span id="line6852"><span>	data.Shoulder.value = sets[set][67];
</span></span><span id="line6853"><span>	
</span></span><span id="line6854"><span>	data.THardia.value = sets[set][68];
</span></span><span id="line6855"><span>  
</span></span><span id="line6856"><span>  var LabrysTargets = sets[set][69].toString();
</span></span><span id="line6857"><span>  if(LabrysTargets == "")
</span></span><span id="line6858"><span>    LabrysTargets = "1";
</span></span><span id="line6859"><span>	data.LabrysTargets.value = LabrysTargets;
</span></span><span id="line6860"><span>  
</span></span><span id="line6861"><span>	data.TDarktur.value = sets[set][70];
</span></span><span id="line6862"><span>  
</span></span><span id="line6863"><span>  var toggleVal;
</span></span><span id="line6864"><span>  
</span></span><span id="line6865"><span>  if(data.TSpleishaOld.value != "")
</span></span><span id="line6866"><span>    toggleVal = "Y";
</span></span><span id="line6867"><span>  else
</span></span><span id="line6868"><span>    toggleVal = "";
</span></span><span id="line6869"><span>  setToggle('toggleOldSpleishaImg', 'toggleOldSpleishaInput', toggleVal, [ 'OldSpleishaVis' ]);
</span></span><span id="line6870"><span>  
</span></span><span id="line6871"><span>  if(data.TSplashOld.value != "")
</span></span><span id="line6872"><span>    toggleVal = "Y";
</span></span><span id="line6873"><span>  else
</span></span><span id="line6874"><span>    toggleVal = "";
</span></span><span id="line6875"><span>  setToggle('toggleOldSplashImg', 'toggleOldSplashInput', toggleVal, [ 'OldSplashVis1', 'OldSplashVis2', 'OldSplashVis3' ]);
</span></span><span id="line6876"><span>  
</span></span><span id="line6877"><span>  if(data.TErthron.value != "")
</span></span><span id="line6878"><span>    toggleVal = "Y";
</span></span><span id="line6879"><span>  else
</span></span><span id="line6880"><span>    toggleVal = "";
</span></span><span id="line6881"><span>  setToggle('toggleOldErthronImg', 'toggleOldErthronInput', toggleVal, [ 'OldErthronVis1', 'OldErthronVis2', 'OldErthronVis3' ]);
</span></span><span id="line6882"><span>  
</span></span><span id="line6883"><span>  if(data.TBangus.value != "" || data.THardia.value != "" || data.Weapon.value == 89 || data.toggleShowBonusesInput.value == 'Y')
</span></span><span id="line6884"><span>    toggleVal = "Y";
</span></span><span id="line6885"><span>  else
</span></span><span id="line6886"><span>    toggleVal = "";
</span></span><span id="line6887"><span>  setToggle('toggleDarkusBreakdownImg', 'toggleDarkusBreakdownInput', toggleVal, [ 'DarkusBreakdown' ]);
</span></span><span id="line6888"><span>  
</span></span><span id="line6889"><span>	ShowSubclass();
</span></span><span id="line6890"><span>  updateAllIconMenus();
</span></span><span id="line6891"><span>	calculate();
</span></span><span id="line6892"><span>}
</span></span><span id="line6893"><span>
</span></span><span id="line6894"><span>function setRadio(radioObj, setval)
</span></span><span id="line6895"><span>{
</span></span><span id="line6896"><span>	for(var i=0; i</span><span>&lt;r</span><span>adioObj.length; i++)
</span></span><span id="line6897"><span>	{
</span></span><span id="line6898"><span>		if(i==setval) radioObj[i].checked = true;
</span></span><span id="line6899"><span>		else radioObj[i].checked = false;
</span></span><span id="line6900"><span>	}
</span></span><span id="line6901"><span>}
</span></span><span id="line6902"><span>
</span></span><span id="line6903"><span>function revertSet(e)
</span></span><span id="line6904"><span>{
</span></span><span id="line6905"><span>	var data = document.getElementById("data");
</span></span><span id="line6906"><span>	var set = data.Set.value;
</span></span><span id="line6907"><span>
</span></span><span id="line6908"><span>	var newC = Math.floor((set-1) / 4) + 1;
</span></span><span id="line6909"><span>	var cookieArray = readCookieArray("FC"+newC);
</span></span><span id="line6910"><span>	if(cookieArray[1])
</span></span><span id="line6911"><span>	{
</span></span><span id="line6912"><span>		var setNum = (set-1) % 4;
</span></span><span id="line6913"><span>		var cookieValue = cookieArray[(setNum*2)+1];
</span></span><span id="line6914"><span>		loadData(set, cookieValue);
</span></span><span id="line6915"><span>
</span></span><span id="line6916"><span>		cookieValue = cookieArray[(setNum*2)+2];
</span></span><span id="line6917"><span>		loadNotes(set, cookieValue);
</span></span><span id="line6918"><span>	}
</span></span><span id="line6919"><span>	else
</span></span><span id="line6920"><span>	{
</span></span><span id="line6921"><span>		var cookieValue = readCookie("data" + set);
</span></span><span id="line6922"><span>		loadData(set, cookieValue);
</span></span><span id="line6923"><span>
</span></span><span id="line6924"><span>		cookieValue = readCookie("fighterNotes" + set);
</span></span><span id="line6925"><span>		loadNotes(set, cookieValue);
</span></span><span id="line6926"><span>	}
</span></span><span id="line6927"><span>	
</span></span><span id="line6928"><span>	//loadData(set);
</span></span><span id="line6929"><span>	switchSet(set);
</span></span><span id="line6930"><span>  saveData(CurrSet, 1);
</span></span><span id="line6931"><span>  
</span></span><span id="line6932"><span>  showAlert(e, "</span><span>&lt;b</span><span>&gt;Reverted to last saved data.</span><span>&lt;/<span></span>b</span><span>&gt;", 200, 20);
</span></span><span id="line6933"><span>}
</span></span><span id="line6934"><span>
</span></span><span id="line6935"><span>function saveSet(e)
</span></span><span id="line6936"><span>{
</span></span><span id="line6937"><span>	var data = document.getElementById("data");
</span></span><span id="line6938"><span>	var set = data.Set.value;
</span></span><span id="line6939"><span>
</span></span><span id="line6940"><span>	saveData(set, 0);
</span></span><span id="line6941"><span>  saveData(set, 1);
</span></span><span id="line6942"><span>  
</span></span><span id="line6943"><span>  showAlert(e, "</span><span>&lt;b</span><span>&gt;Saved to browser cookie.</span><span>&lt;/<span></span>b</span><span>&gt;", 200, 20);
</span></span><span id="line6944"><span>}
</span></span><span id="line6945"><span>
</span></span><span id="line6946"><span>function copySet(e)
</span></span><span id="line6947"><span>{
</span></span><span id="line6948"><span>	saveData(21, 1);
</span></span><span id="line6949"><span>}
</span></span><span id="line6950"><span>
</span></span><span id="line6951"><span>function pasteSet(e)
</span></span><span id="line6952"><span>{
</span></span><span id="line6953"><span>	switchSet(21, false);
</span></span><span id="line6954"><span>
</span></span><span id="line6955"><span>	var data = document.getElementById("data");
</span></span><span id="line6956"><span>	data.SetName.value = data.SetName.value + " Copy";
</span></span><span id="line6957"><span>  
</span></span><span id="line6958"><span>  saveData(CurrSet, 1);
</span></span><span id="line6959"><span>}
</span></span><span id="line6960"><span>
</span></span><span id="line6961"><span>function loadData(set, cookie)
</span></span><span id="line6962"><span>{
</span></span><span id="line6963"><span>	//var cookie = readCookie("data" + set);
</span></span><span id="line6964"><span>	var data = document.getElementById("data");
</span></span><span id="line6965"><span>	if(cookie &amp;&amp; cookie != "empty")
</span></span><span id="line6966"><span>	{
</span></span><span id="line6967"><span>		var c = cookie.split(',');
</span></span><span id="line6968"><span>		
</span></span><span id="line6969"><span>		for(var i=0; i</span><span>&lt;s</span><span>ets[set].length; i++)
</span></span><span id="line6970"><span>			sets[set][i] = sets[0][i];
</span></span><span id="line6971"><span>		
</span></span><span id="line6972"><span>		for(var i=0; i</span><span>&lt;c</span><span>.length &amp;&amp; i</span><span>&lt;s</span><span>ets[set].length; i++)
</span></span><span id="line6973"><span>			sets[set][i] = c[i];
</span></span><span id="line6974"><span>	  
</span></span><span id="line6975"><span>		if(sets[set][23] == "") // Left-hand
</span></span><span id="line6976"><span>			sets[set][23] = 0;
</span></span><span id="line6977"><span>    
</span></span><span id="line6978"><span>		if(sets[set][46] == "") // Subclass
</span></span><span id="line6979"><span>			sets[set][46] = 0;
</span></span><span id="line6980"><span>    
</span></span><span id="line6981"><span>		if(sets[set][67] == "") // Shoulder
</span></span><span id="line6982"><span>			sets[set][67] = 0;
</span></span><span id="line6983"><span>    
</span></span><span id="line6984"><span>    if(arguments.length &gt; 2 &amp;&amp; arguments[2] == true &amp;&amp; sets[set][0].substring(sets[set][0].length-9) != " (Shared)")
</span></span><span id="line6985"><span>      sets[set][0] += " (Shared)";
</span></span><span id="line6986"><span>    
</span></span><span id="line6987"><span>		//data.Set.options[set-1] = new Option(sets[set][0], set);
</span></span><span id="line6988"><span>		//data.Set.options[set-1].text = sets[set][0];
</span></span><span id="line6989"><span>		data.Set.value = CurrSet;
</span></span><span id="line6990"><span>		
</span></span><span id="line6991"><span>		/*
</span></span><span id="line6992"><span>		cookie = readCookie("fighterNotes" + set);
</span></span><span id="line6993"><span>		if(cookie)
</span></span><span id="line6994"><span>		{
</span></span><span id="line6995"><span>			var cookieString = cookie.split('||NEWLINE||');
</span></span><span id="line6996"><span>			var loadString = "";
</span></span><span id="line6997"><span>			for(var i=0; i </span><span>&lt; </span><span>cookieString.length; i++)
</span></span><span id="line6998"><span>			{
</span></span><span id="line6999"><span>				loadString += cookieString[i];
</span></span><span id="line7000"><span>				if(i+1 </span><span>&lt; </span><span>cookieString.length)
</span></span><span id="line7001"><span>					loadString += '\n';
</span></span><span id="line7002"><span>			}
</span></span><span id="line7003"><span>			sets[set][45] = loadString;
</span></span><span id="line7004"><span>		}
</span></span><span id="line7005"><span>		else
</span></span><span id="line7006"><span>			sets[set][45] = "-Add personal notes for this profile here-";
</span></span><span id="line7007"><span>		*/
</span></span><span id="line7008"><span>	}
</span></span><span id="line7009"><span>}
</span></span><span id="line7010"><span>
</span></span><span id="line7011"><span>function loadNotes(set, cookie)
</span></span><span id="line7012"><span>{
</span></span><span id="line7013"><span>	if(cookie &amp;&amp; cookie != "empty")
</span></span><span id="line7014"><span>	{
</span></span><span id="line7015"><span>		var cookieString = cookie.replace(/\|\|NEWLINE\|\|/g,'\n');
</span></span><span id="line7016"><span>		cookieString = cookieString.replace(/\|NL\|/g,'\n');
</span></span><span id="line7017"><span>		cookieString = cookieString.replace(/\|/g,'\n');
</span></span><span id="line7018"><span>		sets[set][45] = cookieString;
</span></span><span id="line7019"><span>	}
</span></span><span id="line7020"><span>	else
</span></span><span id="line7021"><span>		sets[set][45] = "Add personal notes for this profile here.  There is a 150 character limit.";
</span></span><span id="line7022"><span>}
</span></span><span id="line7023"><span>
</span></span><span id="line7024"><span>function saveData(set, toTemp)
</span></span><span id="line7025"><span>{
</span></span><span id="line7026"><span>	var data = document.getElementById("data");
</span></span><span id="line7027"><span>
</span></span><span id="line7028"><span>	var SetName = data.SetName.value;
</span></span><span id="line7029"><span>	SetName = SetName.replace(/,/g,"");
</span></span><span id="line7030"><span>	SetName = SetName.replace(/;/g,"");
</span></span><span id="line7031"><span>	SetName = SetName.replace(/\^/g,"");
</span></span><span id="line7032"><span>  
</span></span><span id="line7033"><span>/*
</span></span><span id="line7034"><span>	if(set &gt; 0 &amp;&amp; set </span><span>&lt; </span><span>21)
</span></span><span id="line7035"><span>	{
</span></span><span id="line7036"><span>		data.Set.options[set-1].text = SetName;
</span></span><span id="line7037"><span>	}
</span></span><span id="line7038"><span>*/
</span></span><span id="line7039"><span>  
</span></span><span id="line7040"><span>	var EAtkus = parseFloat(data.EAtkus.value);
</span></span><span id="line7041"><span>	if(!EAtkus) EAtkus = "";
</span></span><span id="line7042"><span>	var TAtkus = parseFloat(data.TAtkus.value);
</span></span><span id="line7043"><span>	if(!TAtkus) TAtkus = "";
</span></span><span id="line7044"><span>	var EDarkus = parseFloat(data.EDarkus.value);
</span></span><span id="line7045"><span>	if(!EDarkus) EDarkus = "";
</span></span><span id="line7046"><span>	var TDarkus = parseFloat(data.TDarkus.value);
</span></span><span id="line7047"><span>	if(!TDarkus) TDarkus = "";
</span></span><span id="line7048"><span>	var TDarktur = parseFloat(data.TDarktur.value);
</span></span><span id="line7049"><span>	if(!TDarktur) TDarktur = "";
</span></span><span id="line7050"><span>	var EBalthus = parseFloat(data.EBalthus.value);
</span></span><span id="line7051"><span>	if(!EBalthus) EBalthus = "";
</span></span><span id="line7052"><span>	var TBalthus = parseFloat(data.TBalthus.value);
</span></span><span id="line7053"><span>	if(!TBalthus) TBalthus = "";
</span></span><span id="line7054"><span>	var ERegia = parseFloat(data.ERegia.value);
</span></span><span id="line7055"><span>	if(!ERegia) ERegia = "";
</span></span><span id="line7056"><span>	var TRegia = parseFloat(data.TRegia.value);
</span></span><span id="line7057"><span>	if(!TRegia) TRegia = "";
</span></span><span id="line7058"><span>	var TEvus = parseFloat(data.TEvus.value);
</span></span><span id="line7059"><span>	if(!TEvus) TEvus = "";
</span></span><span id="line7060"><span>	var TSwengus = parseFloat(data.TSwengus.value);
</span></span><span id="line7061"><span>	if(!TSwengus) TSwengus = "";
</span></span><span id="line7062"><span>	var EHistia = parseFloat(data.EHistia.value);
</span></span><span id="line7063"><span>	if(!EHistia) EHistia = "";
</span></span><span id="line7064"><span>	var THistia = parseFloat(data.THistia.value);
</span></span><span id="line7065"><span>	if(!THistia) THistia = "";
</span></span><span id="line7066"><span>	var EDetha = parseFloat(data.EDetha.value);
</span></span><span id="line7067"><span>	if(!EDetha) EDetha = "";
</span></span><span id="line7068"><span>	var TDetha = parseFloat(data.TDetha.value);
</span></span><span id="line7069"><span>	if(!TDetha) TDetha = "";
</span></span><span id="line7070"><span>
</span></span><span id="line7071"><span>	var TFell = parseFloat(data.TFell.value);
</span></span><span id="line7072"><span>	if(!TFell) TFell = "";
</span></span><span id="line7073"><span>	var TChan = parseFloat(data.TChan.value);
</span></span><span id="line7074"><span>	if(!TChan) TChan = "";
</span></span><span id="line7075"><span>	var TAtkite = parseFloat(data.TAtkite.value);
</span></span><span id="line7076"><span>	if(!TAtkite) TAtkite = "";
</span></span><span id="line7077"><span>	var TDarkite = parseFloat(data.TDarkite.value);
</span></span><span id="line7078"><span>	if(!TDarkite) TDarkite = "";
</span></span><span id="line7079"><span>	var TBalthite = parseFloat(data.TBalthite.value);
</span></span><span id="line7080"><span>	if(!TBalthite) TBalthite = "";
</span></span><span id="line7081"><span>	var TDethite = parseFloat(data.TDethite.value);
</span></span><span id="line7082"><span>	if(!TDethite) TDethite = "";
</span></span><span id="line7083"><span>
</span></span><span id="line7084"><span>	var TGoss = parseFloat(data.TGoss.value);
</span></span><span id="line7085"><span>	if(!TGoss) TGoss = "";
</span></span><span id="line7086"><span>
</span></span><span id="line7087"><span>	var Subclass = data.Subclass.value;
</span></span><span id="line7088"><span>	var Race = data.Race.value;
</span></span><span id="line7089"><span>	var Weapon = data.Weapon.value;
</span></span><span id="line7090"><span>	var Left = data.Lefthand.value;
</span></span><span id="line7091"><span>	var Shoulder = data.Shoulder.value;
</span></span><span id="line7092"><span>
</span></span><span id="line7093"><span>	var FPS = parseFloat(data.FPS.value);
</span></span><span id="line7094"><span>
</span></span><span id="line7095"><span>	var TBodrus = parseFloat(data.TBodrus.value);
</span></span><span id="line7096"><span>	if(!TBodrus) TBodrus = "";
</span></span><span id="line7097"><span>	var THardia = parseFloat(data.THardia.value);
</span></span><span id="line7098"><span>	if(!THardia) THardia = "";
</span></span><span id="line7099"><span>	var ETroilus = parseFloat(data.ETroilus.value);
</span></span><span id="line7100"><span>	if(!ETroilus) ETroilus = "";
</span></span><span id="line7101"><span>	var TTroilus = parseFloat(data.TTroilus.value);
</span></span><span id="line7102"><span>	if(!TTroilus) TTroilus = "";
</span></span><span id="line7103"><span>	var ERodnus = parseFloat(data.ERodnus.value);
</span></span><span id="line7104"><span>	if(!ERodnus) ERodnus = "";
</span></span><span id="line7105"><span>	var TRodnus = parseFloat(data.TRodnus.value);
</span></span><span id="line7106"><span>	if(!TRodnus) TRodnus = "";
</span></span><span id="line7107"><span>	var TFarly = parseFloat(data.TFarly.value);
</span></span><span id="line7108"><span>	if(!TFarly) TFarly = "";
</span></span><span id="line7109"><span>	var TKnox = parseFloat(data.TKnox.value);
</span></span><span id="line7110"><span>	if(!TKnox) TKnox = "";
</span></span><span id="line7111"><span>	var TAngilsa = parseFloat(data.TAngilsa.value);
</span></span><span id="line7112"><span>	if(!TAngilsa) TAngilsa = "";
</span></span><span id="line7113"><span>  
</span></span><span id="line7114"><span>	var AtkusReq = parseFloat(data.AtkusReq.value);
</span></span><span id="line7115"><span>	if(!AtkusReq &amp;&amp; data.AtkusReq.value != "0") AtkusReq = 99999;
</span></span><span id="line7116"><span>  AtkusReq = "R" + AtkusReq.toString();
</span></span><span id="line7117"><span>  
</span></span><span id="line7118"><span>	var TErthron = parseFloat(data.TErthron.value);
</span></span><span id="line7119"><span>	if(!TErthron) TErthron = "";
</span></span><span id="line7120"><span>	var TErthronNew = parseFloat(data.TErthronNew.value);
</span></span><span id="line7121"><span>	if(!TErthronNew) TErthronNew = "";
</span></span><span id="line7122"><span>	var TForvyola = parseFloat(data.TForvyola.value);
</span></span><span id="line7123"><span>	if(!TForvyola) TForvyola = "";
</span></span><span id="line7124"><span>	var TBangus = parseFloat(data.TBangus.value);
</span></span><span id="line7125"><span>	if(!TBangus) TBangus = "";
</span></span><span id="line7126"><span>
</span></span><span id="line7127"><span>	var TToomeria = parseFloat(data.TToomeria.value);
</span></span><span id="line7128"><span>	if(!TToomeria) TToomeria = "";
</span></span><span id="line7129"><span>	var TSplashOld = parseFloat(data.TSplashOld.value);
</span></span><span id="line7130"><span>	if(!TSplashOld) TSplashOld = "";
</span></span><span id="line7131"><span>	var TSplash = parseFloat(data.TSplash.value);
</span></span><span id="line7132"><span>	if(!TSplash) TSplash = "";
</span></span><span id="line7133"><span>	var TRespin = parseFloat(data.TRespin.value);
</span></span><span id="line7134"><span>	if(!TRespin) TRespin = "";
</span></span><span id="line7135"><span>	var TChampReg = parseFloat(data.TChampReg.value);
</span></span><span id="line7136"><span>	if(!TChampReg) TChampReg = "";
</span></span><span id="line7137"><span>	var TDuvin = parseFloat(data.TDuvin.value);
</span></span><span id="line7138"><span>	if(!TDuvin) TDuvin = "";
</span></span><span id="line7139"><span>	var THeen = parseFloat(data.THeen.value);
</span></span><span id="line7140"><span>	if(!THeen) THeen = "";
</span></span><span id="line7141"><span>	
</span></span><span id="line7142"><span>	var TSpiritus = parseFloat(data.TSpiritus.value);
</span></span><span id="line7143"><span>	if(!TSpiritus) TSpiritus = "";
</span></span><span id="line7144"><span>	var ESpiritus = parseFloat(data.ESpiritus.value);
</span></span><span id="line7145"><span>	if(!ESpiritus) ESpiritus = "";
</span></span><span id="line7146"><span>	var TTracking = parseFloat(data.TTracking.value);
</span></span><span id="line7147"><span>	if(!TTracking) TTracking = "";
</span></span><span id="line7148"><span>	var TCrato = parseFloat(data.TCrato.value);
</span></span><span id="line7149"><span>	if(!TCrato) TCrato = "";
</span></span><span id="line7150"><span>	var TSpleishaOld = parseFloat(data.TSpleishaOld.value);
</span></span><span id="line7151"><span>	if(!TSpleishaOld) TSpleishaOld = "";
</span></span><span id="line7152"><span>	var TSpleisha = parseFloat(data.TSpleisha.value);
</span></span><span id="line7153"><span>	if(!TSpleisha) TSpleisha = "";
</span></span><span id="line7154"><span>	var TBB = parseFloat(data.TBB.value);
</span></span><span id="line7155"><span>	if(!TBB) TBB = "";
</span></span><span id="line7156"><span>
</span></span><span id="line7157"><span>	var TAktur = parseFloat(data.TAktur.value);
</span></span><span id="line7158"><span>	if(!TAktur)TAktur = "";
</span></span><span id="line7159"><span>	var TAtkia = parseFloat(data.TAtkia.value);
</span></span><span id="line7160"><span>	if(!TAtkia) TAtkia = "";
</span></span><span id="line7161"><span>	var TCloak = parseFloat(data.TCloak.value);
</span></span><span id="line7162"><span>	if(!TCloak) TCloak = "";
</span></span><span id="line7163"><span>	var TGirdle = parseFloat(data.TGirdle.value);
</span></span><span id="line7164"><span>	if(!TGirdle) TGirdle = "";
</span></span><span id="line7165"><span>
</span></span><span id="line7166"><span>	var TCryptus = parseFloat(data.TCryptus.value);
</span></span><span id="line7167"><span>	if(!TCryptus) TCryptus = "";
</span></span><span id="line7168"><span>	var TDisabla = parseFloat(data.TDisabla.value);
</span></span><span id="line7169"><span>	if(!TDisabla) TDisabla = "";
</span></span><span id="line7170"><span>	var TDantus = parseFloat(data.TDantus.value);
</span></span><span id="line7171"><span>	if(!TDantus) TDantus = "";
</span></span><span id="line7172"><span>	var TAneurus = parseFloat(data.TAneurus.value);
</span></span><span id="line7173"><span>	if(!TAneurus) TAneurus = "";
</span></span><span id="line7174"><span>	var TPosuhm = parseFloat(data.TPosuhm.value);
</span></span><span id="line7175"><span>	if(!TPosuhm) TPosuhm = "";
</span></span><span id="line7176"><span>	var TAnemia = parseFloat(data.TAnemia.value);
</span></span><span id="line7177"><span>	if(!TAnemia) TAnemia = "";
</span></span><span id="line7178"><span>	var TStedfustus = parseFloat(data.TStedfustus.value);
</span></span><span id="line7179"><span>	if(!TStedfustus) TStedfustus = "";
</span></span><span id="line7180"><span>  
</span></span><span id="line7181"><span>	var LabrysTargets = data.LabrysTargets.value;
</span></span><span id="line7182"><span>  
</span></span><span id="line7183"><span>	
</span></span><span id="line7184"><span>	var dmCurr = data.DateModified.value;
</span></span><span id="line7185"><span>
</span></span><span id="line7186"><span>	if(toTemp == 0 || toTemp == 2)
</span></span><span id="line7187"><span>	{
</span></span><span id="line7188"><span>		var cval = SetName + ",";
</span></span><span id="line7189"><span>		cval = cval + EAtkus + ",";
</span></span><span id="line7190"><span>		cval = cval + TAtkus + ",";
</span></span><span id="line7191"><span>		cval = cval + EDarkus + ",";
</span></span><span id="line7192"><span>		cval = cval + TDarkus + ",";
</span></span><span id="line7193"><span>		cval = cval + EBalthus + ",";
</span></span><span id="line7194"><span>		cval = cval + TBalthus + ",";
</span></span><span id="line7195"><span>		cval = cval + ERegia + ",";
</span></span><span id="line7196"><span>		cval = cval + TRegia + ",";
</span></span><span id="line7197"><span>		cval = cval + TEvus + ",";
</span></span><span id="line7198"><span>		cval = cval + TSwengus + ",";
</span></span><span id="line7199"><span>		cval = cval + EHistia + ",";
</span></span><span id="line7200"><span>		cval = cval + THistia + ",";
</span></span><span id="line7201"><span>		cval = cval + EDetha + ",";
</span></span><span id="line7202"><span>		cval = cval + TDetha + ",";
</span></span><span id="line7203"><span>
</span></span><span id="line7204"><span>		cval = cval + TFell + ",";
</span></span><span id="line7205"><span>		cval = cval + TChan + ",";
</span></span><span id="line7206"><span>		cval = cval + TAtkite + ",";
</span></span><span id="line7207"><span>		cval = cval + TDarkite + ",";
</span></span><span id="line7208"><span>		cval = cval + TBalthite + ",";
</span></span><span id="line7209"><span>		cval = cval + TDethite + ",";
</span></span><span id="line7210"><span>
</span></span><span id="line7211"><span>		cval = cval + Race + ",";
</span></span><span id="line7212"><span>		cval = cval + Weapon + ",";
</span></span><span id="line7213"><span>		cval = cval + Left + ",";
</span></span><span id="line7214"><span>
</span></span><span id="line7215"><span>		cval = cval + FPS + ",";
</span></span><span id="line7216"><span>
</span></span><span id="line7217"><span>		cval = cval + ETroilus + ",";
</span></span><span id="line7218"><span>		cval = cval + TTroilus + ",";
</span></span><span id="line7219"><span>		cval = cval + ERodnus + ",";
</span></span><span id="line7220"><span>		cval = cval + TRodnus + ",";
</span></span><span id="line7221"><span>		cval = cval + TFarly + ",";
</span></span><span id="line7222"><span>		cval = cval + TKnox + ",";
</span></span><span id="line7223"><span>		cval = cval + TAngilsa + ",";
</span></span><span id="line7224"><span>		cval = cval + TBodrus + ",";
</span></span><span id="line7225"><span>
</span></span><span id="line7226"><span>		cval = cval + TGoss + ",";
</span></span><span id="line7227"><span>		cval = cval + AtkusReq + ",";
</span></span><span id="line7228"><span>
</span></span><span id="line7229"><span>		cval = cval + TErthron + ",";
</span></span><span id="line7230"><span>		cval = cval + TForvyola + ",";
</span></span><span id="line7231"><span>		cval = cval + TBangus + ",";
</span></span><span id="line7232"><span>
</span></span><span id="line7233"><span>		cval = cval + TToomeria + ",";
</span></span><span id="line7234"><span>		cval = cval + TSplash + ",";
</span></span><span id="line7235"><span>		cval = cval + TRespin + ",";
</span></span><span id="line7236"><span>		cval = cval + TDuvin + ",";
</span></span><span id="line7237"><span>		cval = cval + THeen + ",";
</span></span><span id="line7238"><span>
</span></span><span id="line7239"><span>		cval = cval + TErthronNew + ",";
</span></span><span id="line7240"><span>
</span></span><span id="line7241"><span>		/*****************************/
</span></span><span id="line7242"><span>    if(toTemp == 0) {
</span></span><span id="line7243"><span>      var dm = new Date();
</span></span><span id="line7244"><span>      var dmPrint = (dm.getMonth()+1) + "/" + dm.getDate() + "/" + dm.getFullYear() + " ";
</span></span><span id="line7245"><span>      var isPM = 0;
</span></span><span id="line7246"><span>      var dmHour = dm.getHours();
</span></span><span id="line7247"><span>      if(dmHour &gt; 11)
</span></span><span id="line7248"><span>      {
</span></span><span id="line7249"><span>        isPM = 1;
</span></span><span id="line7250"><span>        if(dmHour &gt; 12)
</span></span><span id="line7251"><span>          dmHour -= 12;
</span></span><span id="line7252"><span>      }
</span></span><span id="line7253"><span>      dmPrint += dmHour + ":";
</span></span><span id="line7254"><span>      if(dm.getMinutes() </span><span>&lt; </span><span>10)
</span></span><span id="line7255"><span>        dmPrint += "0";
</span></span><span id="line7256"><span>      dmPrint += dm.getMinutes() + " ";
</span></span><span id="line7257"><span>      if(isPM == 0)
</span></span><span id="line7258"><span>        dmPrint += "AM";
</span></span><span id="line7259"><span>      else
</span></span><span id="line7260"><span>        dmPrint += "PM";
</span></span><span id="line7261"><span>      data.DateModified.value = dmPrint;
</span></span><span id="line7262"><span>      cval = cval + dmPrint;
</span></span><span id="line7263"><span>    }
</span></span><span id="line7264"><span>		/*****************************/
</span></span><span id="line7265"><span>		cval = cval + ",";
</span></span><span id="line7266"><span>		
</span></span><span id="line7267"><span>		cval = cval + ",";	// Personal notes placeholder
</span></span><span id="line7268"><span>
</span></span><span id="line7269"><span>		cval = cval + Subclass + ",";
</span></span><span id="line7270"><span>		cval = cval + TCrato + ",";
</span></span><span id="line7271"><span>		cval = cval + TTracking + ",";
</span></span><span id="line7272"><span>		cval = cval + TSpleisha + ",";
</span></span><span id="line7273"><span>		cval = cval + TBB + ",";
</span></span><span id="line7274"><span>		cval = cval + ESpiritus + ",";
</span></span><span id="line7275"><span>		cval = cval + TSpiritus + ",";
</span></span><span id="line7276"><span>
</span></span><span id="line7277"><span>		cval = cval + TAktur + ",";
</span></span><span id="line7278"><span>		cval = cval + TAtkia + ",";
</span></span><span id="line7279"><span>		cval = cval + TCloak + ",";
</span></span><span id="line7280"><span>		cval = cval + TGirdle + ",";
</span></span><span id="line7281"><span>		
</span></span><span id="line7282"><span>		cval = cval + TCryptus + ",";
</span></span><span id="line7283"><span>		cval = cval + TDisabla + ",";
</span></span><span id="line7284"><span>		cval = cval + TDantus + ",";
</span></span><span id="line7285"><span>		cval = cval + TAneurus + ",";
</span></span><span id="line7286"><span>		cval = cval + TPosuhm + ",";
</span></span><span id="line7287"><span>		cval = cval + TAnemia + ",";
</span></span><span id="line7288"><span>		cval = cval + TStedfustus + ",";
</span></span><span id="line7289"><span>		cval = cval + TChampReg + ",";
</span></span><span id="line7290"><span>		cval = cval + TSplashOld + ",";
</span></span><span id="line7291"><span>		cval = cval + TSpleishaOld + ",";
</span></span><span id="line7292"><span>		cval = cval + Shoulder + ",";
</span></span><span id="line7293"><span>    
</span></span><span id="line7294"><span>		cval = cval + THardia + ",";
</span></span><span id="line7295"><span>    
</span></span><span id="line7296"><span>		cval = cval + LabrysTargets + ",";
</span></span><span id="line7297"><span>    
</span></span><span id="line7298"><span>		cval = cval + TDarktur + ",";
</span></span><span id="line7299"><span>    
</span></span><span id="line7300"><span>    if(toTemp == 2)
</span></span><span id="line7301"><span>      return cval;
</span></span><span id="line7302"><span>			
</span></span><span id="line7303"><span>		//createCookie("data" + set, cval, 18250);
</span></span><span id="line7304"><span>
</span></span><span id="line7305"><span>		var SaveNotes = "";
</span></span><span id="line7306"><span>		for(var i=0; i</span><span>&lt;C</span><span>urrNotes.length; i++)
</span></span><span id="line7307"><span>		{
</span></span><span id="line7308"><span>			if(CurrNotes.charAt(i) == '\n' || CurrNotes.charAt(i) == '\r')
</span></span><span id="line7309"><span>			{
</span></span><span id="line7310"><span>				SaveNotes += "|";
</span></span><span id="line7311"><span>				if(i+1 </span><span>&lt; </span><span>CurrNotes.length &amp;&amp; ((CurrNotes.charAt(i+1) == '\n' || CurrNotes.charAt(i+1) == '\r') &amp;&amp; CurrNotes.charAt(i+1) != CurrNotes.charAt(i) ) )
</span></span><span id="line7312"><span>					i++;
</span></span><span id="line7313"><span>			}
</span></span><span id="line7314"><span>			else
</span></span><span id="line7315"><span>				SaveNotes += CurrNotes.charAt(i);
</span></span><span id="line7316"><span>		}
</span></span><span id="line7317"><span>		SaveNotes = SaveNotes.replace(/\^/g,"");
</span></span><span id="line7318"><span>		SaveNotes = SaveNotes.replace(/;/g,"");
</span></span><span id="line7319"><span>		if(SaveNotes.length &gt; 150)
</span></span><span id="line7320"><span>			SaveNotes = SaveNotes.substring(0,150);
</span></span><span id="line7321"><span>		
</span></span><span id="line7322"><span>		var newC = Math.floor((set-1) / 4) + 1;
</span></span><span id="line7323"><span>		var cookieArray = readCookieArray("FC"+newC);
</span></span><span id="line7324"><span>		if(cookieArray[1])
</span></span><span id="line7325"><span>		{
</span></span><span id="line7326"><span>			var setNum = (set-1) % 4;
</span></span><span id="line7327"><span>			cookieArray[(setNum*2)+1] = cval;
</span></span><span id="line7328"><span>			cookieArray[(setNum*2)+2] = SaveNotes;
</span></span><span id="line7329"><span>			
</span></span><span id="line7330"><span>			createCookieArray("FC"+newC, cookieArray, 365*50);
</span></span><span id="line7331"><span>		}
</span></span><span id="line7332"><span>		else
</span></span><span id="line7333"><span>		{
</span></span><span id="line7334"><span>			cookieArray = new Array();
</span></span><span id="line7335"><span>		
</span></span><span id="line7336"><span>			var setNum = (set-1) % 4;
</span></span><span id="line7337"><span>			var oldC = (newC-1)*4;
</span></span><span id="line7338"><span>			for(var i=0; i</span><span>&lt;4</span><span>; i++)
</span></span><span id="line7339"><span>			{
</span></span><span id="line7340"><span>				oldC++;
</span></span><span id="line7341"><span>				if(setNum != i)
</span></span><span id="line7342"><span>				{
</span></span><span id="line7343"><span>					var cookieValue = readCookie("data" + oldC);
</span></span><span id="line7344"><span>					if(cookieValue)
</span></span><span id="line7345"><span>					{
</span></span><span id="line7346"><span>						cookieArray[(i*2)+1] = cookieValue;
</span></span><span id="line7347"><span>						eraseCookie("data" + oldC);
</span></span><span id="line7348"><span>					}
</span></span><span id="line7349"><span>					else
</span></span><span id="line7350"><span>					{
</span></span><span id="line7351"><span>						cookieArray[(i*2)+1] = "empty";
</span></span><span id="line7352"><span>					}
</span></span><span id="line7353"><span>					cookieValue = readCookie("fighterNotes" + oldC);
</span></span><span id="line7354"><span>					if(cookieValue)
</span></span><span id="line7355"><span>					{
</span></span><span id="line7356"><span>						cookieArray[(i*2)+2] = cookieValue;
</span></span><span id="line7357"><span>						eraseCookie("fighterNotes" + oldC);
</span></span><span id="line7358"><span>					}
</span></span><span id="line7359"><span>					else
</span></span><span id="line7360"><span>					{
</span></span><span id="line7361"><span>						cookieArray[(i*2)+2] = "empty";
</span></span><span id="line7362"><span>					}
</span></span><span id="line7363"><span>				}
</span></span><span id="line7364"><span>				else
</span></span><span id="line7365"><span>				{
</span></span><span id="line7366"><span>					var cookieValue = readCookie("data" + oldC);
</span></span><span id="line7367"><span>					if(cookieValue)
</span></span><span id="line7368"><span>						eraseCookie("data" + oldC);
</span></span><span id="line7369"><span>					cookieValue = readCookie("fighterNotes" + oldC);
</span></span><span id="line7370"><span>					if(cookieValue)
</span></span><span id="line7371"><span>						eraseCookie("fighterNotes" + oldC);
</span></span><span id="line7372"><span>				}
</span></span><span id="line7373"><span>			}
</span></span><span id="line7374"><span>			cookieArray[(setNum*2)+1] = cval;
</span></span><span id="line7375"><span>			cookieArray[(setNum*2)+2] = SaveNotes;
</span></span><span id="line7376"><span>			
</span></span><span id="line7377"><span>			createCookieArray("FC"+newC, cookieArray, 365*50);
</span></span><span id="line7378"><span>		}
</span></span><span id="line7379"><span>		//createCookie("fighterNotes" + set, SaveNotes, 18250);
</span></span><span id="line7380"><span>
</span></span><span id="line7381"><span>		data.Set.value = CurrSet;
</span></span><span id="line7382"><span>	}
</span></span><span id="line7383"><span>	else
</span></span><span id="line7384"><span>	{
</span></span><span id="line7385"><span>		sets[set][0] = SetName;
</span></span><span id="line7386"><span>		sets[set][1] = EAtkus;
</span></span><span id="line7387"><span>		sets[set][2] = TAtkus;
</span></span><span id="line7388"><span>		sets[set][3] = EDarkus;
</span></span><span id="line7389"><span>		sets[set][4] = TDarkus;
</span></span><span id="line7390"><span>		sets[set][5] = EBalthus;
</span></span><span id="line7391"><span>		sets[set][6] = TBalthus;
</span></span><span id="line7392"><span>		sets[set][7] = ERegia;
</span></span><span id="line7393"><span>		sets[set][8] = TRegia;
</span></span><span id="line7394"><span>		sets[set][9] = TEvus;
</span></span><span id="line7395"><span>		sets[set][10] = TSwengus;
</span></span><span id="line7396"><span>		sets[set][11] = EHistia;
</span></span><span id="line7397"><span>		sets[set][12] = THistia;
</span></span><span id="line7398"><span>		sets[set][13] = EDetha;
</span></span><span id="line7399"><span>		sets[set][14] = TDetha;
</span></span><span id="line7400"><span>		sets[set][15] = TFell;
</span></span><span id="line7401"><span>		sets[set][16] = TChan;
</span></span><span id="line7402"><span>		sets[set][17] = TAtkite;
</span></span><span id="line7403"><span>		sets[set][18] = TDarkite;
</span></span><span id="line7404"><span>		sets[set][19] = TBalthite;
</span></span><span id="line7405"><span>		sets[set][20] = TDethite;
</span></span><span id="line7406"><span>		sets[set][21] = Race;
</span></span><span id="line7407"><span>		sets[set][22] = Weapon;
</span></span><span id="line7408"><span>		sets[set][23] = Left;
</span></span><span id="line7409"><span>		sets[set][24] = FPS;
</span></span><span id="line7410"><span>		sets[set][25] = ETroilus;
</span></span><span id="line7411"><span>		sets[set][26] = TTroilus;
</span></span><span id="line7412"><span>		sets[set][27] = ERodnus;
</span></span><span id="line7413"><span>		sets[set][28] = TRodnus;
</span></span><span id="line7414"><span>		sets[set][29] = TFarly;
</span></span><span id="line7415"><span>		sets[set][30] = TKnox;
</span></span><span id="line7416"><span>		sets[set][31] = TAngilsa;
</span></span><span id="line7417"><span>		sets[set][32] = TBodrus;
</span></span><span id="line7418"><span>		sets[set][33] = TGoss;
</span></span><span id="line7419"><span>		sets[set][34] = AtkusReq;
</span></span><span id="line7420"><span>		sets[set][35] = TErthron;
</span></span><span id="line7421"><span>		sets[set][36] = TForvyola;
</span></span><span id="line7422"><span>		sets[set][37] = TBangus;
</span></span><span id="line7423"><span>		sets[set][38] = TToomeria;
</span></span><span id="line7424"><span>		sets[set][39] = TSplash;
</span></span><span id="line7425"><span>		sets[set][40] = TRespin;
</span></span><span id="line7426"><span>		sets[set][41] = TDuvin;
</span></span><span id="line7427"><span>		sets[set][42] = THeen;
</span></span><span id="line7428"><span>		sets[set][43] = TErthronNew;
</span></span><span id="line7429"><span>		sets[set][44] = dmCurr;
</span></span><span id="line7430"><span>		sets[set][45] = CurrNotes;
</span></span><span id="line7431"><span>		sets[set][46] = Subclass;
</span></span><span id="line7432"><span>		sets[set][47] = TCrato;
</span></span><span id="line7433"><span>		sets[set][48] = TTracking;
</span></span><span id="line7434"><span>		sets[set][49] = TSpleisha;
</span></span><span id="line7435"><span>		sets[set][50] = TBB;
</span></span><span id="line7436"><span>		sets[set][51] = ESpiritus;
</span></span><span id="line7437"><span>		sets[set][52] = TSpiritus;
</span></span><span id="line7438"><span>		sets[set][53] = TAktur;
</span></span><span id="line7439"><span>		sets[set][54] = TAtkia;
</span></span><span id="line7440"><span>		sets[set][55] = TCloak;
</span></span><span id="line7441"><span>		sets[set][56] = TGirdle;
</span></span><span id="line7442"><span>		sets[set][57] = TCryptus;
</span></span><span id="line7443"><span>		sets[set][58] = TDisabla;
</span></span><span id="line7444"><span>		sets[set][59] = TDantus;
</span></span><span id="line7445"><span>		sets[set][60] = TAneurus;
</span></span><span id="line7446"><span>		sets[set][61] = TPosuhm;
</span></span><span id="line7447"><span>		sets[set][62] = TAnemia;
</span></span><span id="line7448"><span>		sets[set][63] = TStedfustus;
</span></span><span id="line7449"><span>		sets[set][64] = TChampReg;
</span></span><span id="line7450"><span>		sets[set][65] = TSplashOld;
</span></span><span id="line7451"><span>		sets[set][66] = TSpleishaOld;
</span></span><span id="line7452"><span>		sets[set][67] = Shoulder;
</span></span><span id="line7453"><span>		sets[set][68] = THardia;
</span></span><span id="line7454"><span>		sets[set][69] = LabrysTargets;
</span></span><span id="line7455"><span>		sets[set][70] = TDarktur;
</span></span><span id="line7456"><span>    
</span></span><span id="line7457"><span>    if(set &gt; 0 &amp;&amp; set </span><span>&lt; </span><span>21)
</span></span><span id="line7458"><span>      gProfileMenu.updateOpt(set, sets[set])
</span></span><span id="line7459"><span>	}
</span></span><span id="line7460"><span>}
</span></span><span id="line7461"><span>
</span></span><span id="line7462"><span>function createCookieArray(name, saveArray, days)
</span></span><span id="line7463"><span>{
</span></span><span id="line7464"><span>	var storeValue = "";
</span></span><span id="line7465"><span>	for(var i=1; i</span><span>&lt;s</span><span>aveArray.length; i++)
</span></span><span id="line7466"><span>	{
</span></span><span id="line7467"><span>		if(i &gt; 1)
</span></span><span id="line7468"><span>			storeValue += "^";
</span></span><span id="line7469"><span>
</span></span><span id="line7470"><span>		storeValue += saveArray[i];
</span></span><span id="line7471"><span>	}
</span></span><span id="line7472"><span>
</span></span><span id="line7473"><span>	createCookie(name, storeValue, days);
</span></span><span id="line7474"><span>}
</span></span><span id="line7475"><span>
</span></span><span id="line7476"><span>function readCookieArray(name)
</span></span><span id="line7477"><span>{
</span></span><span id="line7478"><span>	var loadValue = readCookie(name);
</span></span><span id="line7479"><span>
</span></span><span id="line7480"><span>	if(!loadValue)
</span></span><span id="line7481"><span>	{
</span></span><span id="line7482"><span>		return 0;
</span></span><span id="line7483"><span>	}
</span></span><span id="line7484"><span>	loadValue = loadValue.split("^");
</span></span><span id="line7485"><span>	
</span></span><span id="line7486"><span>	var retArray = new Array();
</span></span><span id="line7487"><span>	for(var i=0; i</span><span>&lt;l</span><span>oadValue.length; i++)
</span></span><span id="line7488"><span>	{
</span></span><span id="line7489"><span>		retArray[i+1] = loadValue[i];
</span></span><span id="line7490"><span>	}
</span></span><span id="line7491"><span>	
</span></span><span id="line7492"><span>	return retArray;
</span></span><span id="line7493"><span>}
</span></span><span id="line7494"><span>
</span></span><span id="line7495"><span>function createCookie(name,value,days) {
</span></span><span id="line7496"><span>	if (days) {
</span></span><span id="line7497"><span>		var date = new Date();
</span></span><span id="line7498"><span>		date.setTime(date.getTime()+(days*24*60*60*1000));
</span></span><span id="line7499"><span>		var expires = "; expires="+date.toGMTString();
</span></span><span id="line7500"><span>	}
</span></span><span id="line7501"><span>	else var expires = "";
</span></span><span id="line7502"><span>	document.cookie = name+"="+value+expires+"; path=/";
</span></span><span id="line7503"><span>
</span></span><span id="line7504"><span>	// DEBUG
</span></span><span id="line7505"><span>	if (DebugModeOn == 1)
</span></span><span id="line7506"><span>	{
</span></span><span id="line7507"><span>		alert("DEBUG INFO 1:\n"+name+"="+value+expires+"; path=/");
</span></span><span id="line7508"><span>		var cookieInfo = readCookie(name);
</span></span><span id="line7509"><span>		if(cookieInfo)
</span></span><span id="line7510"><span>		{
</span></span><span id="line7511"><span>			alert("DEBUG INFO 2:\n"+cookieInfo);
</span></span><span id="line7512"><span>		}
</span></span><span id="line7513"><span>		else
</span></span><span id="line7514"><span>		{
</span></span><span id="line7515"><span>			alert("DEBUG INFO 2:\nNO COOKIE SAVED??");
</span></span><span id="line7516"><span>		}
</span></span><span id="line7517"><span>	}
</span></span><span id="line7518"><span>}
</span></span><span id="line7519"><span>
</span></span><span id="line7520"><span>function readCookie(name) {
</span></span><span id="line7521"><span>	var nameEQ = name + "=";
</span></span><span id="line7522"><span>	var ca = document.cookie.split(';');
</span></span><span id="line7523"><span>	for(var i=0;i </span><span>&lt; </span><span>ca.length;i++) {
</span></span><span id="line7524"><span>		var c = ca[i];
</span></span><span id="line7525"><span>		while (c.charAt(0)==' ') c = c.substring(1,c.length);
</span></span><span id="line7526"><span>		if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
</span></span><span id="line7527"><span>	}
</span></span><span id="line7528"><span>	return null;
</span></span><span id="line7529"><span>}
</span></span><span id="line7530"><span>
</span></span><span id="line7531"><span>function eraseCookie(name) {
</span></span><span id="line7532"><span>	if(DebugModeOn == 1)
</span></span><span id="line7533"><span>		alert("Erased old cookie: " + name);
</span></span><span id="line7534"><span>	createCookie(name,"",-1);
</span></span><span id="line7535"><span>}
</span></span><span id="line7536"><span>
</span></span><span id="line7537"><span>function setTooltipVars(_this) {
</span></span><span id="line7538"><span>  _this.T_DELAY=0;
</span></span><span id="line7539"><span>  _this.T_BORDERWIDTH=2;
</span></span><span id="line7540"><span>  _this.T_OPACITY=90;
</span></span><span id="line7541"><span>  _this.T_FONTSIZE="14px";
</span></span><span id="line7542"><span>  _this.T_FONTCOLOR="#333333";
</span></span><span id="line7543"><span>  _this.T_BORDERCOLOR="#555555";
</span></span><span id="line7544"><span>  _this.T_BGCOLOR="#EEEEEE";
</span></span><span id="line7545"><span>}
</span></span><span id="line7546"><span>
</span></span><span id="line7547"><span>function getURLParam(name) {
</span></span><span id="line7548"><span>	name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
</span></span><span id="line7549"><span>	var regexS = "[\\?&amp;]" + name + "=([^&amp;#]*)";
</span></span><span id="line7550"><span>	var regex = new RegExp(regexS);
</span></span><span id="line7551"><span>	var results = regex.exec(window.location.href);
</span></span><span id="line7552"><span>	if(results == null)
</span></span><span id="line7553"><span>		return "";
</span></span><span id="line7554"><span>	else
</span></span><span id="line7555"><span>		return decodeURIComponent(results[1]);
</span></span><span id="line7556"><span>}
</span></span><span id="line7557"><span>
</span></span><span id="line7558"><span>function loadURLBuild() {
</span></span><span id="line7559"><span>  var stats = getURLParam("build");
</span></span><span id="line7560"><span>  if(stats == "")
</span></span><span id="line7561"><span>    return;
</span></span><span id="line7562"><span>  
</span></span><span id="line7563"><span>  var setNum = -1;
</span></span><span id="line7564"><span>  for(var s=1; s</span><span>&lt;s</span><span>ets.length-1; s++) {
</span></span><span id="line7565"><span>    var isUnused = true;
</span></span><span id="line7566"><span>    for(var i=0; i</span><span>&lt;s</span><span>ets[s].length; i++) {
</span></span><span id="line7567"><span>      if(i == 0 || i == 24 || i == 44 || i == 45)
</span></span><span id="line7568"><span>        continue;
</span></span><span id="line7569"><span>			if(sets[s][i] != sets[0][i]) {
</span></span><span id="line7570"><span>        isUnused = false;
</span></span><span id="line7571"><span>        break;
</span></span><span id="line7572"><span>      }
</span></span><span id="line7573"><span>    }
</span></span><span id="line7574"><span>    
</span></span><span id="line7575"><span>    if(isUnused) {
</span></span><span id="line7576"><span>      setNum = s;
</span></span><span id="line7577"><span>      break;
</span></span><span id="line7578"><span>    }
</span></span><span id="line7579"><span>  }
</span></span><span id="line7580"><span>  
</span></span><span id="line7581"><span>  if(setNum </span><span>&lt; </span><span>0)
</span></span><span id="line7582"><span>    setNum = 20;
</span></span><span id="line7583"><span>  
</span></span><span id="line7584"><span>  loadData(setNum, stats, true);
</span></span><span id="line7585"><span>  
</span></span><span id="line7586"><span>  data.Set.value = setNum;
</span></span><span id="line7587"><span>	CurrSet = setNum;
</span></span><span id="line7588"><span>  switchSet(setNum);
</span></span><span id="line7589"><span>  saveData(CurrSet, 1);
</span></span><span id="line7590"><span>}
</span></span><span id="line7591"><span>
</span></span><span id="line7592"><span>function shareBuild(e) {
</span></span><span id="line7593"><span>  var url = window.location.href;
</span></span><span id="line7594"><span>	var idx = url.indexOf(".html");
</span></span><span id="line7595"><span>	if(idx </span><span>&lt; </span><span>0)
</span></span><span id="line7596"><span>    return false;
</span></span><span id="line7597"><span>	url = url.substring(0,idx+5);
</span></span><span id="line7598"><span>  
</span></span><span id="line7599"><span>  var cval = saveData(CurrSet, 2);
</span></span><span id="line7600"><span>  if(cval == "")
</span></span><span id="line7601"><span>    return false;
</span></span><span id="line7602"><span>  
</span></span><span id="line7603"><span>  url += "?build=" + encodeURIComponent(cval);
</span></span><span id="line7604"><span>  
</span></span><span id="line7605"><span>  var elt = document.createElement("textarea");
</span></span><span id="line7606"><span>  elt.value = url;
</span></span><span id="line7607"><span>  elt.setAttribute("readonly","");
</span></span><span id="line7608"><span>  elt.style = { position:"absolute", left:"-9999px"};
</span></span><span id="line7609"><span>  document.body.appendChild(elt);
</span></span><span id="line7610"><span>  elt.select();
</span></span><span id="line7611"><span>  elt.setSelectionRange(0, 99999999);
</span></span><span id="line7612"><span>  document.execCommand("copy");
</span></span><span id="line7613"><span>  document.body.removeChild(elt);
</span></span><span id="line7614"><span>  
</span></span><span id="line7615"><span>  showAlert(e, "</span><span>&lt;b</span><span>&gt;Link copied to clipboard</span><span>&lt;/<span></span>b</span><span>&gt;", 200, 20);
</span></span><span id="line7616"><span>  return true;
</span></span><span id="line7617"><span>}
</span></span><span id="line7618"><span>
</span></span><span id="line7619"><span>function getMouseX(e) {
</span></span><span id="line7620"><span>  var x = 0;
</span></span><span id="line7621"><span>  if(e.pageX) {
</span></span><span id="line7622"><span>    x = e.pageX;
</span></span><span id="line7623"><span>  }
</span></span><span id="line7624"><span>  else if(e.clientX) {
</span></span><span id="line7625"><span>    x = e.clientX;
</span></span><span id="line7626"><span>    x += (document.all)?document.body.scrollLeft:window.pageXOffset;
</span></span><span id="line7627"><span>  }
</span></span><span id="line7628"><span>  return x;
</span></span><span id="line7629"><span>}
</span></span><span id="line7630"><span>  
</span></span><span id="line7631"><span>function getMouseY(e) {
</span></span><span id="line7632"><span>  var y = 0;
</span></span><span id="line7633"><span>  if(e.pageY) {
</span></span><span id="line7634"><span>    y = e.pageY;
</span></span><span id="line7635"><span>  }
</span></span><span id="line7636"><span>  else if(e.clientY) {
</span></span><span id="line7637"><span>    y = e.clientY;
</span></span><span id="line7638"><span>    y += (document.all)?document.body.scrollTop:window.pageYOffset;
</span></span><span id="line7639"><span>  }
</span></span><span id="line7640"><span>  return y;
</span></span><span id="line7641"><span>}
</span></span><span id="line7642"><span>
</span></span><span id="line7643"><span>var gAlertInterval = -1;
</span></span><span id="line7644"><span>var gAlertTime = 0;
</span></span><span id="line7645"><span>var gAlertMaxTime = 0;
</span></span><span id="line7646"><span>var gAlertDT = 17;
</span></span><span id="line7647"><span>var gAlertStartY = 0;
</span></span><span id="line7648"><span>var gAlertDir = 0;
</span></span><span id="line7649"><span>function showAlert(e, html, w, h, maxTime) {
</span></span><span id="line7650"><span>  e = e || window.event;
</span></span><span id="line7651"><span>  if(!e)
</span></span><span id="line7652"><span>    return;
</span></span><span id="line7653"><span>  
</span></span><span id="line7654"><span>  if(typeof maxTime == "undefined")
</span></span><span id="line7655"><span>    maxTime = 1200;
</span></span><span id="line7656"><span>  
</span></span><span id="line7657"><span>  var eltOuter = document.getElementById("alertMsgContainer");
</span></span><span id="line7658"><span>  var eltText = document.getElementById("alertMsgText");
</span></span><span id="line7659"><span>  
</span></span><span id="line7660"><span>  eltText.innerHTML = html;
</span></span><span id="line7661"><span>  
</span></span><span id="line7662"><span>  eltOuter.style.width = w + "px";
</span></span><span id="line7663"><span>  eltOuter.style.height = h + "px";
</span></span><span id="line7664"><span>  
</span></span><span id="line7665"><span>  var mx, my, x, y;
</span></span><span id="line7666"><span>  
</span></span><span id="line7667"><span>  mx = getMouseX(e);
</span></span><span id="line7668"><span>  my = getMouseY(e);
</span></span><span id="line7669"><span>  
</span></span><span id="line7670"><span>  if(my </span><span>&lt;=</span><span> getScrollY() + 60)
</span></span><span id="line7671"><span>    gAlertDir = 1;
</span></span><span id="line7672"><span>  else
</span></span><span id="line7673"><span>    gAlertDir = -1;
</span></span><span id="line7674"><span>  
</span></span><span id="line7675"><span>  x = mx - Math.floor(w / 2);
</span></span><span id="line7676"><span>  y = my + (h * gAlertDir);
</span></span><span id="line7677"><span>  
</span></span><span id="line7678"><span>  eltOuter.style.left = x + "px";
</span></span><span id="line7679"><span>  eltOuter.style.top = y + "px";
</span></span><span id="line7680"><span>  eltOuter.style.display = "";
</span></span><span id="line7681"><span>  
</span></span><span id="line7682"><span>  gAlertTime = 0;
</span></span><span id="line7683"><span>  gAlertMaxTime = maxTime;
</span></span><span id="line7684"><span>  gAlertStartY = y;
</span></span><span id="line7685"><span>  if(gAlertInterval </span><span>&lt; </span><span>0)
</span></span><span id="line7686"><span>    gAlertInterval = setInterval(alertTick, gAlertDT);
</span></span><span id="line7687"><span>  updateAlert(0);
</span></span><span id="line7688"><span>}
</span></span><span id="line7689"><span>
</span></span><span id="line7690"><span>function alertTick() {
</span></span><span id="line7691"><span>  updateAlert(gAlertDT);
</span></span><span id="line7692"><span>}
</span></span><span id="line7693"><span>
</span></span><span id="line7694"><span>function updateAlert(dt) {
</span></span><span id="line7695"><span>  var eltOuter = document.getElementById("alertMsgContainer");
</span></span><span id="line7696"><span>  var maxMoveY = 20;
</span></span><span id="line7697"><span>  
</span></span><span id="line7698"><span>  gAlertTime += dt;
</span></span><span id="line7699"><span>  if(gAlertTime &gt; gAlertMaxTime) {
</span></span><span id="line7700"><span>    if(gAlertInterval &gt;= 0) {
</span></span><span id="line7701"><span>      clearInterval(gAlertInterval);
</span></span><span id="line7702"><span>      gAlertInterval = -1;
</span></span><span id="line7703"><span>    }
</span></span><span id="line7704"><span>    
</span></span><span id="line7705"><span>    eltOuter.style.display = "none";
</span></span><span id="line7706"><span>    return;
</span></span><span id="line7707"><span>  }
</span></span><span id="line7708"><span>  
</span></span><span id="line7709"><span>  var y = Math.max(gAlertStartY + (Math.floor(maxMoveY * gAlertTime / gAlertMaxTime) * gAlertDir), 0);
</span></span><span id="line7710"><span>  var op = Math.min(2 - (2 * gAlertTime / gAlertMaxTime), 1);
</span></span><span id="line7711"><span>  
</span></span><span id="line7712"><span>  eltOuter.style.top = y + "px";
</span></span><span id="line7713"><span>  eltOuter.style.opacity = op;
</span></span><span id="line7714"><span>  eltOuter.style.filter = "alpha(opacity="+Math.round(op*100)+")";
</span></span><span id="line7715"><span>}
</span></span><span id="line7716"><span>
</span></span><span id="line7717"><span>function setToggle(imgID, inputName, val, toggleVisIDs) {
</span></span><span id="line7718"><span>  var data = document.getElementById("data");
</span></span><span id="line7719"><span>  var imgElt = document.getElementById(imgID);
</span></span><span id="line7720"><span>  var inputElt = data[inputName];
</span></span><span id="line7721"><span>  
</span></span><span id="line7722"><span>  if(val == "*") {
</span></span><span id="line7723"><span>    if(inputElt.value == "Y")
</span></span><span id="line7724"><span>      val = "";
</span></span><span id="line7725"><span>    else
</span></span><span id="line7726"><span>      val = "Y";
</span></span><span id="line7727"><span>  }
</span></span><span id="line7728"><span>  
</span></span><span id="line7729"><span>  inputElt.value = val;
</span></span><span id="line7730"><span>  
</span></span><span id="line7731"><span>  if(val == "Y")
</span></span><span id="line7732"><span>    imgElt.src = "images/toggle_on_icon.png";
</span></span><span id="line7733"><span>  else
</span></span><span id="line7734"><span>    imgElt.src = "images/toggle_off_icon.png";
</span></span><span id="line7735"><span>  
</span></span><span id="line7736"><span>  for(var i=0; i</span><span>&lt;t</span><span>oggleVisIDs.length; i++) {
</span></span><span id="line7737"><span>    var elt = document.getElementById(toggleVisIDs[i]);
</span></span><span id="line7738"><span>    if(!elt)
</span></span><span id="line7739"><span>      continue;
</span></span><span id="line7740"><span>    if(val == "Y")
</span></span><span id="line7741"><span>      elt.style.display = "";
</span></span><span id="line7742"><span>    else
</span></span><span id="line7743"><span>      elt.style.display = "none";
</span></span><span id="line7744"><span>  }
</span></span><span id="line7745"><span>  
</span></span><span id="line7746"><span>  return val;
</span></span><span id="line7747"><span>}
</span></span><span id="line7748"><span>
</span></span><span id="line7749"><span></span><span>&lt;/<span class="end-tag">script</span>&gt;</span><span>
</span></span><span id="line7750"><span>
</span></span><span id="line7751"><span></span><span>&lt;<span class="start-tag">body</span> <span class="attribute-name">onLoad</span>="<a class="attribute-value">pageLoad();</a>" <span class="attribute-name">style</span>="<a class="attribute-value">padding:0px; margin:0px;</a>"&gt;</span><span>
</span></span><span id="line7752"><span></span><span>&lt;<span class="start-tag">form</span> <span class="attribute-name">id</span>="<a class="attribute-value">data</a>" <span class="attribute-name">style</span>="<a class="attribute-value">margin:0px;</a>"&gt;</span><span>
</span></span><span id="line7753"><span>
</span></span><span id="line7754"><span></span><span>&lt;<span class="start-tag">div</span> <span class="attribute-name">id</span>="<a class="attribute-value">alertMsgContainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">position:absolute; pointer-events:none; display:none;</a>"&gt;</span><span>
</span></span><span id="line7755"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">style</span>="<a class="attribute-value">width:100%;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">align</span>=<a class="attribute-value">center</a>&gt;</span><span>
</span></span><span id="line7756"><span>  </span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">2</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">style</span>="<a class="attribute-value">xborder:1px solid #555555; xbackground-color:#EEEEEE; box-sizing:border-box; -moz-box-sizing:border-box; -webkit-box-sizing:border-box;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">alertMsgText</a>" <span class="attribute-name">style</span>="<a class="attribute-value">color:#FFFFFF;</a>" <span class="attribute-name">align</span>=<a class="attribute-value">center</a>&gt;</span><span>
</span></span><span id="line7757"><span>    <span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line7758"><span>  </span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7759"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7760"><span></span><span>&lt;/<span class="end-tag">div</span>&gt;</span><span>
</span></span><span id="line7761"><span>
</span></span><span id="line7762"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">style</span>="<a class="attribute-value">width:100%; height:41px;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7763"><span>
</span></span><span id="line7764"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">id</span>="<a class="attribute-value">documentOuter</a>" <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">style</span>="<a class="attribute-value">width:100%; height:100%;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">width:25px; height:40px; background-image:url('images/fighter_wall_tl.png'); background-repeat:no-repeat; background-position:right bottom;</a>"&gt;</span><span>
</span></span><span id="line7765"><span>
</span></span><span id="line7766"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">height:40px; background-image:url('images/fighter_wall_t.png'); background-repeat:repeat-x; background-position:left bottom;</a>"&gt;</span><span>
</span></span><span id="line7767"><span>
</span></span><span id="line7768"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">width:25px; height:40px; background-image:url('images/fighter_wall_tr.png'); background-repeat:no-repeat; background-position:left bottom;</a>"&gt;</span><span>
</span></span><span id="line7769"><span>
</span></span><span id="line7770"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7771"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">width:25px; background-image:url('images/fighter_wall_l.png'); background-repeat:repeat-y; background-position:right top;</a>"&gt;</span><span>
</span></span><span id="line7772"><span>
</span></span><span id="line7773"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">padding:12px; background-image:url('images/fighter_floor2.png'); background-repeat:repeat; background-position:left top;</a>"&gt;</span><span>
</span></span><span id="line7774"><span>
</span></span><span id="line7775"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7776"><span>	</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7777"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7778"><span>			</span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7779"><span>				</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7780"><span>					</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7781"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldset</a>"&gt;</span><span>
</span></span><span id="line7782"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">style</span>="<a class="attribute-value">width:100%;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line7783"><span>  </span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">style</span>="<a class="attribute-value">font-size:44px;</a>"&gt;</span><span>Fighter Calculator</span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span><span class="entity"><span>&amp;</span>nbsp;</span>v3.0.10
</span></span><span id="line7784"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7785"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7786"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">style</span>="<a class="attribute-value">width:800px;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line7787"><span>Enter your data into the fields below, then scroll down to view statistics based on that data.
</span></span><span id="line7788"><span>You can enter your ranks as either Effective ranks, Trained ranks, or a combination of the two.
</span></span><span id="line7789"><span>Ranks entered as "Trained" ranks will include the secondary stats they give, such as the extra Balthus and Regia in Atkus.
</span></span><span id="line7790"><span>Ranks entered as "Effective" ranks will include only the primary stat from that trainer.
</span></span><span id="line7791"><span>If you don't know the exact number of ranks you've trained from all trainers, it's best to just fill in the Effective fields with estimates based on trainer messages.</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7792"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7793"><span>Saved builds are stored locally on your computer using your browser's cookies.
</span></span><span id="line7794"><span>Do not use this as a way of keeping track of your ranks as the data will be lost if your cookies get wiped.
</span></span><span id="line7795"><span>You can save up to 20 different builds and switch between them using the anvil icon in the upper left corner.
</span></span><span id="line7796"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7797"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line7798"><span>          </span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7799"><span>        </span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7800"><span>      </span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7801"><span>    </span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7802"><span>  </span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7803"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7804"><span>
</span></span><span id="line7805"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7806"><span>
</span></span><span id="line7807"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7808"><span>	</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7809"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7810"><span>			</span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7811"><span>				</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7812"><span>					</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7813"><span>					
</span></span><span id="line7814"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldset</a>"&gt;</span><span>
</span></span><span id="line7815"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Core Fighter Ranks</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line7816"><span>
</span></span><span id="line7817"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7818"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span>&gt;</span><span>Effective</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span>&gt;</span><span>Trained</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span>&gt;</span><span>Total</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7819"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Atkus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">EAtkus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TAtkus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Atkus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7820"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Darkus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">EDarkus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDarkus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Darkus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Click to toggle visibility of individual damage components.');</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">setToggle('toggleDarkusBreakdownImg', 'toggleDarkusBreakdownInput', '*', [ 'DarkusBreakdown' ]);</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:pointer;</a>" <span class="attribute-name">onselectstart</span>="<a class="attribute-value">return false;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">toggleDarkusBreakdownInput</a>" <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">id</span>="<a class="attribute-value">toggleDarkusBreakdownImg</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/toggle_off_icon.png">images/toggle_off_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7821"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Balthus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">EBalthus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TBalthus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Balthus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7822"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Regia</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ERegia</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TRegia</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Regia</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7823"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Evus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TEvus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Evus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7824"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Swengus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TSwengus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Swengus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7825"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Histia</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">EHistia</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">THistia</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Histia</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7826"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Detha</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">EDetha</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDetha</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Detha</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Click to toggle display of your defense at full balance, as an equivalent number of Detha ranks. (Note: This is currently an approximate number.)');</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">setToggle('toggleTotalDefImg', 'toggleTotalDefInput', '*', [ ]); calculate();</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:pointer;</a>" <span class="attribute-name">onselectstart</span>="<a class="attribute-value">return false;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">toggleTotalDefInput</a>" <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">id</span>="<a class="attribute-value">toggleTotalDefImg</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/toggle_off_icon.png">images/toggle_off_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7827"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7828"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7829"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">id</span>="<a class="attribute-value">DarkusBreakdown</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span>
</span></span><span id="line7830"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">MinDarkus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>Total Darkus, minimum damage component</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7831"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">MaxDarkus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>Total Darkus, maximum damage component</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7832"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">AvgDarkus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>Total Darkus, as average damage</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7833"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7834"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line7835"><span>
</span></span><span id="line7836"><span>					</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7837"><span>				</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7838"><span>				</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7839"><span>					</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7840"><span>					
</span></span><span id="line7841"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldset</a>"&gt;</span><span>
</span></span><span id="line7842"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Other Ranks</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line7843"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7844"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span>&gt;</span><span>Effective</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span>&gt;</span><span>Trained</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span>&gt;</span><span>Total</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7845"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Bodrus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TBodrus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Bodrus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7846"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Hardia</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Not trainable by fighters.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">THardia</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">if(this.value != '') setToggle('toggleDarkusBreakdownImg', 'toggleDarkusBreakdownInput', 'Y', [ 'DarkusBreakdown' ]); calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Hardia</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7847"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Troilus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ETroilus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TTroilus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Troilus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7848"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Rodnus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ERodnus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TRodnus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Rodnus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7849"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Spirtus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ESpiritus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TSpiritus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Spiritus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7850"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Aktur</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TAktur</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Aktur</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7851"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Atkia</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TAtkia</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Atkia</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7852"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Darktur</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDarktur</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Darktur</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7853"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Knox</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TKnox</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Knox</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7854"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Angilsa</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TAngilsa</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Angilsa</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7855"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Heen</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">THeen</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7856"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">id</span>="<a class="attribute-value">OldSpleishaVis</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>OLD Spleisha</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TSpleishaOld</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">SpleishaOld</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7857"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Spleisha</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TSpleisha</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Spleisha</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Click to toggle visibility of Old Spleisha, for ranks trained before the trainer was tweaked in an unknown version.');</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">setToggle('toggleOldSpleishaImg', 'toggleOldSpleishaInput', '*', [ 'OldSpleishaVis' ]);</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:pointer;</a>" <span class="attribute-name">onselectstart</span>="<a class="attribute-value">return false;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">toggleOldSpleishaInput</a>" <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">id</span>="<a class="attribute-value">toggleOldSpleishaImg</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/toggle_off_icon.png">images/toggle_off_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7858"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7859"><span></span><span class="error" title="End tag had attributes.">&lt;/<span class="end-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldset</a>"&gt;</span><span>
</span></span><span id="line7860"><span>
</span></span><span id="line7861"><span>					</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7862"><span>			</span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7863"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7864"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7865"><span>			</span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7866"><span>				</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7867"><span>					</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7868"><span>
</span></span><span id="line7869"><span>
</span></span><span id="line7870"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line7871"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldset</a>"&gt;</span><span>
</span></span><span id="line7872"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Race and Items</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line7873"><span>
</span></span><span id="line7874"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7875"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7876"><span>
</span></span><span id="line7877"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Race</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7878"><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line7879"><span>  </span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span>
</span></span><span id="line7880"><span>    </span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">RaceOuter</a>"&gt;</span><span>
</span></span><span id="line7881"><span>    </span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line7882"><span>      </span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Click to toggle race and weapon base stats being included in total ranks columns.');</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">setToggle('toggleShowBonusesImg', 'toggleShowBonusesInput', '*', [ ]); if(document.getElementById('data').toggleShowBonusesInput.value == 'Y') setToggle('toggleDarkusBreakdownImg', 'toggleDarkusBreakdownInput', 'Y', [ 'DarkusBreakdown' ]); calculate();</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:pointer;</a>" <span class="attribute-name">onselectstart</span>="<a class="attribute-value">return false;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">toggleShowBonusesInput</a>" <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">id</span>="<a class="attribute-value">toggleShowBonusesImg</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/toggle_off_icon.png">images/toggle_off_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7883"><span>    </span><span class="error" title="Stray end tag “td”.">&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span class="error" title="Stray end tag “tr”.">&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7884"><span>  </span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7885"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7886"><span>
</span></span><span id="line7887"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">width:5px;</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7888"><span>
</span></span><span id="line7889"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Shoulder</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7890"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">ShoulderOuter</a>"&gt;</span><span>
</span></span><span id="line7891"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7892"><span>
</span></span><span id="line7893"><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7894"><span>
</span></span><span id="line7895"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>
</span></span><span id="line7896"><span>  Weapon
</span></span><span id="line7897"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">WeaponOuter</a>"&gt;</span><span>
</span></span><span id="line7898"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7899"><span>
</span></span><span id="line7900"><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7901"><span>
</span></span><span id="line7902"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>"&gt;</span><span>Left Hand</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7903"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">LefthandOuter</a>"&gt;</span><span>
</span></span><span id="line7904"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7905"><span>
</span></span><span id="line7906"><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7907"><span>
</span></span><span id="line7908"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7909"><span>
</span></span><span id="line7910"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">id</span>="<a class="attribute-value">AtkusReqOuter</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line7911"><span>Total Atkus needed to hit when using Goss/Fell/Tell </span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">4</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">5</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">AtkusReq</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Race and Item bonuses will be added to this value when calculating Accuracy conservation.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span>
</span></span><span id="line7912"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7913"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">id</span>="<a class="attribute-value">LabrysOuter</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line7914"><span># of Targets with Labrys </span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">4</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">5</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">LabrysTargets</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span>
</span></span><span id="line7915"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7916"><span>
</span></span><span id="line7917"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line7918"><span>
</span></span><span id="line7919"><span>    </span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7920"><span>    </span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>" <span class="attribute-name">style</span>="<a class="attribute-value">padding-left:10px;</a>"&gt;</span><span>
</span></span><span id="line7921"><span>    
</span></span><span id="line7922"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldset</a>"&gt;</span><span>
</span></span><span id="line7923"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Frame Rate</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line7924"><span>
</span></span><span id="line7925"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line7926"><span>
</span></span><span id="line7927"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FPSRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">0</a>" <span class="attribute-name">checked</span> <span class="attribute-name">OnClick</span>="<a class="attribute-value">setFPS(0); calculate();</a>"&gt;</span><span>Standard Frame Rate</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('FPS values are approximate.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7928"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FPSRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">1</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">setFPS(1); calculate();</a>"&gt;</span><span>OLD Frame Rate</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('FPS values are approximate.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7929"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FPSRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">2</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">setFPS(2); calculate();</a>"&gt;</span><span>Frame by Frame</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7930"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FPSRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">3</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">setFPS(3); calculate();</a>"&gt;</span><span>Specific:</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line7931"><span>
</span></span><span id="line7932"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">disabled</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FPS</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">value</span>="<a class="attribute-value">5.0</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">setFPS(FPSArray.length-1); calculate();</a>"&gt;</span><span> Frames per second.
</span></span><span id="line7933"><span>
</span></span><span id="line7934"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7935"><span>
</span></span><span id="line7936"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line7937"><span>
</span></span><span id="line7938"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7939"><span>
</span></span><span id="line7940"><span>					</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7941"><span>				</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7942"><span>				</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line7943"><span>					</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">top</a>"&gt;</span><span>
</span></span><span id="line7944"><span>		
</span></span><span id="line7945"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line7946"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldset</a>"&gt;</span><span>
</span></span><span id="line7947"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Subclass Ranks</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line7948"><span>
</span></span><span id="line7949"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line7950"><span>
</span></span><span id="line7951"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line7952"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Subclass</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">colspan</span>=<a class="attribute-value">2</a> <span class="attribute-name">id</span>="<a class="attribute-value">SubclassOuter</a>"&gt;</span><span>
</span></span><span id="line7953"><span>
</span></span><span id="line7954"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7955"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7956"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span> <span class="attribute-name">nowrap</span>&gt;</span><span>Trained</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span> <span class="attribute-name">nowrap</span>&gt;</span><span>Total</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7957"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Fell Blade</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TFell</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7958"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Channel Master</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('The individual ite trainers are no longer in the game. Any previous training with the old trainers gives 1.25 ranks of Channel Master per rank. It is greater than 1:1 to make up for the high slaughter the old trainers gave, according to Slarty.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TChan</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Chan</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7959"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Atkite</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Atkite gives 1 Aktur rank per Channel Master when equipped. Total is displayed in Atkus ranks.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TAtkite</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">20</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Atkite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">18</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">26</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BAtkite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7960"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Darkite</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Darkite gives 1.72 Darkus rank per Channel Master when equipped, but does not include any of the Balthus or Regia that are normally given by Darkus ranks.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDarkite</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">20</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Darkite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">18</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">26</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BDarkite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7961"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Balthite</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TBalthite</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">20</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Balthite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">18</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">26</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BBalthite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7962"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Dethite</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Dethite values are unverified but assumed to be 1 Detha per Channel Master rank.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDethite</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">20</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Dethite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">18</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">26</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BDethite</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7963"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Toomeria</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TToomeria</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Toomeria</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7964"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Spirit Regen</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Capped at 5 ranks for Humans and Sylvans, or 10 ranks for Dwarves, Fens, and Zos. No training is available for Thooms or Halflings because they start off at the spirit regen cap.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TChampReg</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ChampReg</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7965"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Vala Loack</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TCloak</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7966"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Corsetta</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TGirdle</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7967"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainerC</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainerC</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Forvyola</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TForvyola</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Forvyola</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7968"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainerC</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainerC</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span> <span class="attribute-name">id</span>="<a class="attribute-value">OldErthronVis1</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span>OLD Erthron</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">OldErthronVis2</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TErthron</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">OldErthronVis3</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Erthron</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7969"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainerC</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainerC</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Erthron</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TErthronNew</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ErthronNew</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Click to toggle visibility of Old Erthron, for ranks trained before the trainer was nerfed in ~v490.');</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">setToggle('toggleOldErthronImg', 'toggleOldErthronInput', '*', [ 'OldErthronVis1', 'OldErthronVis2', 'OldErthronVis3' ]);</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:pointer;</a>" <span class="attribute-name">onselectstart</span>="<a class="attribute-value">return false;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">toggleOldErthronInput</a>" <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">id</span>="<a class="attribute-value">toggleOldErthronImg</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/toggle_off_icon.png">images/toggle_off_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7970"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7971"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Gossamer</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TGoss</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7972"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Duvin</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDuvin</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Duvin</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7973"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span> <span class="attribute-name">id</span>="<a class="attribute-value">OldSplashVis1</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span>OLD Splash</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">OldSplashVis2</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TSplashOld</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">id</span>="<a class="attribute-value">OldSplashVis3</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">SplashOld</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7974"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Splash</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TSplash</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Splash</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Click to toggle visibility of Old Splash, for ranks trained before the trainer was tweaked in an unknown version.');</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">setToggle('toggleOldSplashImg', 'toggleOldSplashInput', '*', [ 'OldSplashVis1', 'OldSplashVis2', 'OldSplashVis3' ]);</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:pointer;</a>" <span class="attribute-name">onselectstart</span>="<a class="attribute-value">return false;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">toggleOldSplashInput</a>" <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">id</span>="<a class="attribute-value">toggleOldSplashImg</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/toggle_off_icon.png">images/toggle_off_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7975"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Respin</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TRespin</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Respin</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7976"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Tra'Kning</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TTracking</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7977"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainerC</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainerC</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Farly Buff</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TFarly</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Farly</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7978"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainerC</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainerC</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Bangus Anmash</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TBangus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">if(this.value != '') setToggle('toggleDarkusBreakdownImg', 'toggleDarkusBreakdownInput', 'Y', [ 'DarkusBreakdown' ]); calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Bangus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7979"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7980"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Bloodblade</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Bloodblade stats are currently untested.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TBB</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7981"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Crato</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TCrato</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Crato</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7982"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Cryptus</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Untested.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TCryptus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7983"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Disabla</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Untested.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDisabla</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span class="error" title="Stray end tag “td”.">&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7984"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Dantus</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Untested.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TDantus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7985"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Aneurus</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Untested.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TAneurus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7986"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Posuhm</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape('Untested.');</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TPosuhm</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7987"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainerC</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainerC</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Anemia</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TAnemia</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Anemia</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7988"><span></span><span>&lt;<span class="start-tag">tr</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainerC</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainerC</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>="<a class="attribute-value">middle</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>Stedfustus</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">TStedfustus</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">16</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">Stedfustus</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7989"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7990"><span>
</span></span><span id="line7991"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7992"><span>
</span></span><span id="line7993"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line7994"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line7995"><span>
</span></span><span id="line7996"><span>
</span></span><span id="line7997"><span>					</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line7998"><span>				</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line7999"><span>			</span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8000"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8001"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line8002"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8003"><span>
</span></span><span id="line8004"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">DateModified</a>"&gt;</span><span>
</span></span><span id="line8005"><span>
</span></span><span id="line8006"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8007"><span>
</span></span><span id="line8008"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8009"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8010"><span>
</span></span><span id="line8011"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">resultsFieldset</a>"&gt;</span><span>
</span></span><span id="line8012"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">resultsLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Results</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line8013"><span>Show Results for </span><span>&lt;<span class="start-tag">select</span> <span class="attribute-name">name</span>="<a class="attribute-value">ResultsSelect</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>"&gt;</span><span>
</span></span><span id="line8014"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">0</a>"&gt;</span><span>
</span></span><span id="line8015"><span>Swings
</span></span><span id="line8016"><span></span><span>&lt;/<span class="end-tag">option</span>&gt;</span><span>
</span></span><span id="line8017"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">1</a>"&gt;</span><span>
</span></span><span id="line8018"><span>Damage
</span></span><span id="line8019"><span></span><span>&lt;/<span class="end-tag">option</span>&gt;</span><span>
</span></span><span id="line8020"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">3</a>"&gt;</span><span>
</span></span><span id="line8021"><span>Health
</span></span><span id="line8022"><span></span><span>&lt;/<span class="end-tag">option</span>&gt;</span><span>
</span></span><span id="line8023"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">2</a>"&gt;</span><span>
</span></span><span id="line8024"><span>Fighter Spirit Stats/Abilities
</span></span><span id="line8025"><span></span><span>&lt;/<span class="end-tag">option</span>&gt;</span><span>
</span></span><span id="line8026"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">5</a>"&gt;</span><span>
</span></span><span id="line8027"><span>Subclass Abilities
</span></span><span id="line8028"><span></span><span>&lt;/<span class="end-tag">option</span>&gt;</span><span>
</span></span><span id="line8029"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">4</a>"&gt;</span><span>
</span></span><span id="line8030"><span>Stats
</span></span><span id="line8031"><span></span><span>&lt;/<span class="end-tag">option</span>&gt;</span><span>
</span></span><span id="line8032"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">100</a>"&gt;</span><span>
</span></span><span id="line8033"><span>Personal Notes
</span></span><span id="line8034"><span></span><span>&lt;/<span class="end-tag">option</span>&gt;</span><span>
</span></span><span id="line8035"><span></span><span>&lt;/<span class="end-tag">select</span>&gt;</span><span>
</span></span><span id="line8036"><span>
</span></span><span id="line8037"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8038"><span>
</span></span><span id="line8039"><span></span><span>&lt;<span class="start-tag">textarea</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ResultsText</a>" <span class="attribute-name">onChange</span>="<a class="attribute-value">onNotesChanged();</a>" <span class="attribute-name">rows</span>=<a class="attribute-value">24</a> <span class="attribute-name">cols</span>=<a class="attribute-value">100</a> <span class="attribute-name">spellcheck</span>="<a class="attribute-value">false</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">textarea</span>&gt;</span><span>
</span></span><span id="line8040"><span>
</span></span><span id="line8041"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8042"><span>
</span></span><span id="line8043"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8044"><span>
</span></span><span id="line8045"><span>
</span></span><span id="line8046"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8047"><span>
</span></span><span id="line8048"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">resultsFieldset</a>" <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8049"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">resultsLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Simulator</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line8050"><span>
</span></span><span id="line8051"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span>
</span></span><span id="line8052"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8053"><span>
</span></span><span id="line8054"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>=<a class="attribute-value">top</a>&gt;</span><span>
</span></span><span id="line8055"><span></span><span>&lt;<span class="start-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8056"><span></span><span>&lt;<span class="start-tag">legend</span>&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Health Simulator:</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line8057"><span>
</span></span><span id="line8058"><span>Your Health:
</span></span><span id="line8059"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8060"><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barleft2</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">[</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barmiddle2</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar4.bmp">images/bar4.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">123</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">|</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barright2</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barempty2</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar3.bmp">images/bar3.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barend2</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span>
</span></span><span id="line8061"><span>
</span></span><span id="line8062"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8063"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrHealth</a>"&gt;</span><span>Histia Remaining
</span></span><span id="line8064"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8065"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrHealthPercent</a>"&gt;</span><span>%
</span></span><span id="line8066"><span>
</span></span><span id="line8067"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8068"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">hitButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Hit</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">doHit(0, 1);</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8069"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">restoreButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">healButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Heal</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">doHeal(0);</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8070"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">checkbox</a>" <span class="attribute-name">class</span>="<a class="attribute-value">checkboxColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FreezeRegeneration</a>"&gt;</span><span>Freeze Regen.
</span></span><span id="line8071"><span>
</span></span><span id="line8072"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8073"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">DamRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">0</a>" <span class="attribute-name">checked</span>&gt;</span><span>
</span></span><span id="line8074"><span>Hit will damage randomly from</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8075"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">HPDamageMin</a>" <span class="attribute-name">value</span>=<a class="attribute-value">100</a>&gt;</span><span> to
</span></span><span id="line8076"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">HPDamageMax</a>" <span class="attribute-name">value</span>=<a class="attribute-value">100</a>&gt;</span><span> Histia.
</span></span><span id="line8077"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8078"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">DamRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">1</a>"&gt;</span><span>
</span></span><span id="line8079"><span>Hit will damage randomly for</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8080"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">HPDamageDarkus</a>" <span class="attribute-name">value</span>=<a class="attribute-value">100</a>&gt;</span><span>
</span></span><span id="line8081"><span>Darkus.</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape(<span class="entity"><span>&amp;</span>apos;</span>Include attacker\<span class="entity"><span>&amp;</span>apos;</span>s Race and Item bonuses in Darkus total.<span class="entity"><span>&amp;</span>apos;</span>);</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span>
</span></span><span id="line8082"><span>
</span></span><span id="line8083"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8084"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8085"><span>
</span></span><span id="line8086"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>=<a class="attribute-value">top</a>&gt;</span><span>
</span></span><span id="line8087"><span></span><span>&lt;<span class="start-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8088"><span></span><span>&lt;<span class="start-tag">legend</span>&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Swing Simulator:</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line8089"><span>
</span></span><span id="line8090"><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">swingimg</a>" <span class="attribute-name">border</span>='<a class="attribute-value">1</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/swing2_0.png">images/swing2_0.png</a>' <span class="attribute-name">width</span>='<a class="attribute-value">100</a>' <span class="attribute-name">height</span>='<a class="attribute-value">100</a>'<span>/</span>&gt;</span><span>
</span></span><span id="line8091"><span>
</span></span><span id="line8092"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8093"><span>
</span></span><span id="line8094"><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barleft</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">[</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barmiddle</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar2.bmp">images/bar2.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">123</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">|</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barright</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barempty</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar3.bmp">images/bar3.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barend</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span>
</span></span><span id="line8095"><span>
</span></span><span id="line8096"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8097"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrBalance</a>"&gt;</span><span>Balthus Remaining
</span></span><span id="line8098"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8099"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrBalancePercent</a>"&gt;</span><span>%
</span></span><span id="line8100"><span>
</span></span><span id="line8101"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8102"><span>
</span></span><span id="line8103"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">button3</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Swing</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">doSwing(1);</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8104"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">button4</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Swing Out</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">doSwing(99999);</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8105"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">button5</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Swing Forever</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">doSwing(999999);</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8106"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8107"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">restoreButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BalanceRestoreButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Restore Balance</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">restoreBal();</a>"<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">checkbox</a>" <span class="attribute-name">class</span>="<a class="attribute-value">checkboxColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FreezeBalance</a>"&gt;</span><span>Freeze Recovery.
</span></span><span id="line8108"><span>
</span></span><span id="line8109"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8110"><span>Swings also affect Damage and Spirit Simulators.
</span></span><span id="line8111"><span>
</span></span><span id="line8112"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8113"><span>
</span></span><span id="line8114"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8115"><span>
</span></span><span id="line8116"><span>
</span></span><span id="line8117"><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">valign</span>=<a class="attribute-value">top</a>&gt;</span><span>
</span></span><span id="line8118"><span></span><span>&lt;<span class="start-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8119"><span></span><span>&lt;<span class="start-tag">legend</span>&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Spirit Simulator:</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line8120"><span>Your Spirit:
</span></span><span id="line8121"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8122"><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barleft4</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">[</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barmiddle4</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar4.bmp">images/bar4.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">123</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">|</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barright4</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barempty4</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar3.bmp">images/bar3.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barend4</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span>
</span></span><span id="line8123"><span>
</span></span><span id="line8124"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span>
</span></span><span id="line8125"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrToomeria</a>"&gt;</span><span>Toomeria Remaining
</span></span><span id="line8126"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span>
</span></span><span id="line8127"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrSplash</a>"&gt;</span><span>Splash Remaining
</span></span><span id="line8128"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span>
</span></span><span id="line8129"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrCrato</a>"&gt;</span><span>Crato Remaining
</span></span><span id="line8130"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">name</span>="<a class="attribute-value">FTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">FTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span>
</span></span><span id="line8131"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrSpleisha</a>"&gt;</span><span>Spleisha Remaining
</span></span><span id="line8132"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8133"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrSpiritPercent</a>"&gt;</span><span>%
</span></span><span id="line8134"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8135"><span>
</span></span><span id="line8136"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">ShieldButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Shieldstone</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">useShieldstone();</a>"<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8137"><span>
</span></span><span id="line8138"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">name</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">CTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8139"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">IteButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Boost Ite</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">useIte();</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8140"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CloakButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Lava Cloak</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">useCloak();</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8141"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8142"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GirdleButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Stonegirdle</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">useGirdle();</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8143"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8144"><span>
</span></span><span id="line8145"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8146"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">HeartwoodButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Heartwood</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">useHeartwood();</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8147"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">MorphButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Morph</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">useMorph();</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8148"><span>	</span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BefriendButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Befriend</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">useBefriend();</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8149"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8150"><span>
</span></span><span id="line8151"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">name</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8152"><span>	<span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8153"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8154"><span>
</span></span><span id="line8155"><span>
</span></span><span id="line8156"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8157"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">restoreButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">RestoreSpiritButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Restore Spirit</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">restoreSpirit();</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8158"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">checkbox</a>" <span class="attribute-name">class</span>="<a class="attribute-value">checkboxColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FreezeSpirit</a>"&gt;</span><span>Freeze Regen.
</span></span><span id="line8159"><span>
</span></span><span id="line8160"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8161"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">name</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">id</span>="<a class="attribute-value">RTrainer</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display: none;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8162"><span>Morph will consume
</span></span><span id="line8163"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">MorphConsume</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>" <span class="attribute-name">value</span>=<a class="attribute-value">15</a>&gt;</span><span>
</span></span><span id="line8164"><span>Splash.</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8165"><span>Befriend will consume
</span></span><span id="line8166"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BefriendConsume</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">calculate();</a>" <span class="attribute-name">value</span>=<a class="attribute-value">45</a>&gt;</span><span>
</span></span><span id="line8167"><span>Splash.</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8168"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8169"><span>
</span></span><span id="line8170"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8171"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8172"><span>
</span></span><span id="line8173"><span>
</span></span><span id="line8174"><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line8175"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8176"><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8177"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8178"><span>
</span></span><span id="line8179"><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8180"><span></span><span>&lt;<span class="start-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8181"><span></span><span>&lt;<span class="start-tag">legend</span>&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>Damage Simulator:</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line8182"><span>
</span></span><span id="line8183"><span>Enemy's Health:
</span></span><span id="line8184"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8185"><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barleft3</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">[</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barmiddle3</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar4.bmp">images/bar4.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">123</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">|</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barright3</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barempty3</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar3.bmp">images/bar3.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">0</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">name</span>="<a class="attribute-value">barend3</a>" <span class="attribute-name">border</span>='<a class="attribute-value">0</a>' <span class="attribute-name">style</span>='<a class="attribute-value">vertical-align:middle</a>' <span class="attribute-name">src</span>='<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/bar1.bmp">images/bar1.bmp</a>' <span class="attribute-name">width</span>='<a class="attribute-value">1</a>' <span class="attribute-name">height</span>='<a class="attribute-value">12</a>' <span class="attribute-name">alt</span>='<a class="attribute-value">=</a>'<span>/</span>&gt;</span><span>
</span></span><span id="line8186"><span>
</span></span><span id="line8187"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8188"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrEnHealth</a>"&gt;</span><span>Histia Remaining
</span></span><span id="line8189"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8190"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">readonly</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputFieldDisabled</a>" <span class="attribute-name">size</span>="<a class="attribute-value">10</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">CurrEnHealthPercent</a>"&gt;</span><span>%
</span></span><span id="line8191"><span>
</span></span><span id="line8192"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8193"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">hitEnButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Hit</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">doHit(1, 1);</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8194"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">button</a>" <span class="attribute-name">class</span>="<a class="attribute-value">restoreButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">healEnButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Heal</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">doHeal(1);</a>"<span>/</span>&gt;</span><span>
</span></span><span id="line8195"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">checkbox</a>" <span class="attribute-name">class</span>="<a class="attribute-value">checkboxColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">FreezeEnRegeneration</a>"&gt;</span><span>Freeze Regen.
</span></span><span id="line8196"><span>
</span></span><span id="line8197"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8198"><span>Enemy has </span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">EnemyHistia</a>" <span class="attribute-name">value</span>=<a class="attribute-value">100</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">doHeal(1);</a>"&gt;</span><span> Histia.</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape(<span class="entity"><span>&amp;</span>apos;</span>Include enemy\<span class="entity"><span>&amp;</span>apos;</span>s Race and Item bonuses in Histia total.<span class="entity"><span>&amp;</span>apos;</span>);</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span>
</span></span><span id="line8199"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8200"><span>Enemy has </span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">EnemyTroilus</a>" <span class="attribute-name">value</span>=<a class="attribute-value">100</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">doHeal(1);</a>"&gt;</span><span> Troilus.</span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">onmouseover</span>="<a class="attribute-value">setTooltipVars(this); return escape(<span class="entity"><span>&amp;</span>apos;</span>Include enemy\<span class="entity"><span>&amp;</span>apos;</span>s Race and Item bonuses in Troilus total.<span class="entity"><span>&amp;</span>apos;</span>);</a>" <span class="attribute-name">style</span>="<a class="attribute-value">cursor:help;</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;<span class="start-tag">img</span> <span class="attribute-name">border</span>=<a class="attribute-value">0</a> <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/images/info_icon.png">images/info_icon.png</a>"&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span>
</span></span><span id="line8201"><span>
</span></span><span id="line8202"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8203"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8204"><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line8205"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8206"><span>
</span></span><span id="line8207"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8208"><span>
</span></span><span id="line8209"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8210"><span>
</span></span><span id="line8211"><span>
</span></span><span id="line8212"><span></span><span>&lt;<span class="start-tag">table</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8213"><span>
</span></span><span id="line8214"><span></span><span>&lt;<span class="start-tag">fieldset</span> <span class="attribute-name">class</span>="<a class="attribute-value">resultsFieldset</a>" <span class="attribute-name">style</span>="<a class="attribute-value">background-color:#DDDDDD;</a>"&gt;</span><span>
</span></span><span id="line8215"><span></span><span>&lt;<span class="start-tag">legend</span> <span class="attribute-name">class</span>="<a class="attribute-value">resultsLegend</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">b</span>&gt;</span><span>DPS Graph</span><span>&lt;/<span class="end-tag">b</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">legend</span>&gt;</span><span>
</span></span><span id="line8216"><span>
</span></span><span id="line8217"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">5</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">800</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8218"><span>	
</span></span><span id="line8219"><span>	</span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span>
</span></span><span id="line8220"><span>		</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">8</a>&gt;</span><span>
</span></span><span id="line8221"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">valign</span>=<a class="attribute-value">bottom</a>&gt;</span><span>
</span></span><span id="line8222"><span>      </span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">class</span>="<a class="attribute-value">tab</a>" <span class="attribute-name">style</span>="<a class="attribute-value">position:relative; bottom:-1px; height:30px; background-color:#DDDDDD; cursor:pointer; box-sizing:border-box; -moz-box-sizing:border-box; -webkit-box-sizing:border-box;</a>" <span class="attribute-name">id</span>="<a class="attribute-value">GraphTab0</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">switchGraphTab(0);</a>"&gt;</span><span>
</span></span><span id="line8223"><span>  			Current DPS
</span></span><span id="line8224"><span>      </span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8225"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">8</a>&gt;</span><span>
</span></span><span id="line8226"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">valign</span>=<a class="attribute-value">bottom</a>&gt;</span><span>
</span></span><span id="line8227"><span>      </span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">class</span>="<a class="attribute-value">tab</a>" <span class="attribute-name">style</span>="<a class="attribute-value">position:relative; bottom:0px; height:25px; background-color:#777777; cursor:pointer; box-sizing:border-box; -moz-box-sizing:border-box; -webkit-box-sizing:border-box;</a>" <span class="attribute-name">id</span>="<a class="attribute-value">GraphTab1</a>" <span class="attribute-name">onclick</span>="<a class="attribute-value">switchGraphTab(1);</a>"&gt;</span><span>
</span></span><span id="line8228"><span>  			Future DPS
</span></span><span id="line8229"><span>      </span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8230"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line8231"><span>	</span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8232"><span>	</span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">5</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">style</span>="<a class="attribute-value">border-top:1px solid black;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8233"><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">name</span>="<a class="attribute-value">GraphView0</a>" <span class="attribute-name">id</span>="<a class="attribute-value">GraphView0</a>"&gt;</span><span>
</span></span><span id="line8234"><span>Click Plot DPS to see a graph showing your cumulative damage over a period of time, assuming that you swing immediately whenever you have enough balance to do so and always hit for your minimum, maximum, or average damage (selected below).
</span></span><span id="line8235"><span>Because of these assumptions, the graph should be seen as your *potential* damage, not how much damage you will do in every situation.
</span></span><span id="line8236"><span>Click Burn to Graph to burn a copy of the current line to the graph, allowing you to compare it to lines plotted for other sets of stats.
</span></span><span id="line8237"><span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span>
</span></span><span id="line8238"><span>
</span></span><span id="line8239"><span></span><span>&lt;<span class="start-tag">span</span> <span class="attribute-name">name</span>="<a class="attribute-value">GraphView1</a>" <span class="attribute-name">id</span>="<a class="attribute-value">GraphView1</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span>
</span></span><span id="line8240"><span>Click Plot DPS to see a graph showing how your DPS rating will improve as you train additional Darktur or Regia ranks.
</span></span><span id="line8241"><span>You can also choose to see what effects other trainers will have on your DPS.
</span></span><span id="line8242"><span>The Optimal Ratio line will show you how your DPS rating will improve if you alternate training the two selected trainers in an optimal ratio.
</span></span><span id="line8243"><span>Note: The Optimal Ratio may change as you train more Atkus.</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8244"><span></span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8245"><span>Note on a few of the options in the dropdown:</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8246"><span>60% Swengus 40% Regia gives the same amount of Balthus contained in a rank of Darkus.</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8247"><span>64.28% Darktur 35.72% Swengus and 75.37% Darktur 24.63% Balthus give enough Balthus to maintain the same amount of defense after swinging once from full balance.
</span></span><span id="line8248"><span></span><span>&lt;/<span class="end-tag">span</span>&gt;</span><span>
</span></span><span id="line8249"><span>
</span></span><span id="line8250"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">width</span>=<a class="attribute-value">800</a> <span class="attribute-name">height</span>=<a class="attribute-value">450</a> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8251"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8252"><span></span><span>&lt;<span class="start-tag">div</span> <span class="attribute-name">id</span>="<a class="attribute-value">dpsGraph</a>" <span class="attribute-name">width</span>=<a class="attribute-value">800</a> <span class="attribute-name">height</span>=<a class="attribute-value">450</a> <span class="attribute-name">style</span>="<a class="attribute-value">position: relative;</a>"&gt;</span><span>
</span></span><span id="line8253"><span></span><span>&lt;/<span class="end-tag">div</span>&gt;</span><span>
</span></span><span id="line8254"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8255"><span>
</span></span><span id="line8256"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8257"><span>
</span></span><span id="line8258"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">2</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a> <span class="attribute-name">name</span>="<a class="attribute-value">GraphView0</a>" <span class="attribute-name">id</span>="<a class="attribute-value">GraphView0</a>"&gt;</span><span>
</span></span><span id="line8259"><span>	</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8260"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8261"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8262"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8263"><span>		Red
</span></span><span id="line8264"><span>		</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8265"><span>		Green
</span></span><span id="line8266"><span>		</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span></span><span>&lt;<span class="start-tag">th</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8267"><span>		Blue
</span></span><span id="line8268"><span>		</span><span>&lt;/<span class="end-tag">th</span>&gt;</span><span>
</span></span><span id="line8269"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8270"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8271"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">button</a> <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">plotButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Plot DPS</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8272"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8273"><span>Line Color
</span></span><span id="line8274"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8275"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">PlotRed</a>" <span class="attribute-name">value</span>=<a class="attribute-value">0</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">updateGraphColor();</a>"&gt;</span><span>
</span></span><span id="line8276"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8277"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">PlotGreen</a>" <span class="attribute-name">value</span>=<a class="attribute-value">0</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">updateGraphColor();</a>"&gt;</span><span>
</span></span><span id="line8278"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8279"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">PlotBlue</a>" <span class="attribute-name">value</span>=<a class="attribute-value">100</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">updateGraphColor();</a>"&gt;</span><span>
</span></span><span id="line8280"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8281"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">16</a> <span class="attribute-name">height</span>=<a class="attribute-value">16</a> <span class="attribute-name">style</span>="<a class="attribute-value">border: 1px solid black; background-color: #0000FF;</a>" <span class="attribute-name">id</span>="<a class="attribute-value">PlotColor</a>" <span class="attribute-name">name</span>="<a class="attribute-value">PlotColor</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8282"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a>&gt;</span><span>
</span></span><span id="line8283"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8284"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8285"><span>X-Axis - Number of Seconds
</span></span><span id="line8286"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8287"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GraphTime</a>" <span class="attribute-name">value</span>=<a class="attribute-value">20</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">clearDPSPoints(); createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8288"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8289"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8290"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8291"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">button</a> <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">burnButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Burn to Graph</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">burnDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8292"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8293"><span>Line Color
</span></span><span id="line8294"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8295"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BurnRed</a>" <span class="attribute-name">value</span>=<a class="attribute-value">100</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">updateGraphColor();</a>"&gt;</span><span>
</span></span><span id="line8296"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8297"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BurnGreen</a>" <span class="attribute-name">value</span>=<a class="attribute-value">0</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">updateGraphColor();</a>"&gt;</span><span>
</span></span><span id="line8298"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8299"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BurnBlue</a>" <span class="attribute-name">value</span>=<a class="attribute-value">0</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">updateGraphColor();</a>"&gt;</span><span>
</span></span><span id="line8300"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span>
</span></span><span id="line8301"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">16</a> <span class="attribute-name">height</span>=<a class="attribute-value">16</a> <span class="attribute-name">style</span>="<a class="attribute-value">border: 1px solid black; background-color: #FF0000;</a>" <span class="attribute-name">id</span>="<a class="attribute-value">BurnColor</a>" <span class="attribute-name">name</span>="<a class="attribute-value">BurnColor</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8302"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a>&gt;</span><span>
</span></span><span id="line8303"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8304"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8305"><span>Y-Axis - Histia Damage
</span></span><span id="line8306"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8307"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GraphDamage</a>" <span class="attribute-name">value</span>=<a class="attribute-value">2000</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">clearDPSPoints(); createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8308"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8309"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8310"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8311"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">button</a> <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">clearGraphButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Clear</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">clearDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8312"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8313"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line8314"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8315"><span>
</span></span><span id="line8316"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">2</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a> <span class="attribute-name">name</span>="<a class="attribute-value">GraphView0</a>" <span class="attribute-name">id</span>="<a class="attribute-value">GraphView0</a>"&gt;</span><span>
</span></span><span id="line8317"><span>	</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8318"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8319"><span>Show swings hitting for:</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8320"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GraphDmgRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">0</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">setGraphDmg(0); createDPSPoints();</a>"&gt;</span><span>Minimum Damage</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8321"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GraphDmgRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">1</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">setGraphDmg(1); createDPSPoints();</a>"&gt;</span><span>Maximum Damage</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8322"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>="<a class="attribute-value">radio</a>" <span class="attribute-name">class</span>="<a class="attribute-value">radioColored</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GraphDmgRadio</a>" <span class="attribute-name">value</span>="<a class="attribute-value">2</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">setGraphDmg(2); createDPSPoints();</a>" <span class="attribute-name">checked</span>&gt;</span><span>Average Damage</span><span>&lt;<span class="start-tag">br</span>&gt;</span><span>
</span></span><span id="line8323"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8324"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line8325"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8326"><span>
</span></span><span id="line8327"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">2</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a> <span class="attribute-name">name</span>="<a class="attribute-value">GraphView1</a>" <span class="attribute-name">id</span>="<a class="attribute-value">GraphView1</a>" <span class="attribute-name">style</span>="<a class="attribute-value">display:none;</a>"&gt;</span><span>
</span></span><span id="line8328"><span>	</span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8329"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8330"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">button</a> <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">plotButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Plot DPS</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8331"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">50</a>&gt;</span><span>
</span></span><span id="line8332"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8333"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8334"><span></span><span>&lt;<span class="start-tag">select</span> <span class="attribute-name">name</span>="<a class="attribute-value">graphCompare0</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">clearDPSPoints(); createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8335"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span>None
</span></span><span id="line8336"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">D</a>"&gt;</span><span>Darkus
</span></span><span id="line8337"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">Dt</a>" <span class="attribute-name">selected</span>&gt;</span><span>Darktur
</span></span><span id="line8338"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">R</a>"&gt;</span><span>Regia
</span></span><span id="line8339"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">S</a>"&gt;</span><span>Swengus
</span></span><span id="line8340"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">DS</a>"&gt;</span><span>64.28% Darktur 35.72% Swengus
</span></span><span id="line8341"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">DB</a>"&gt;</span><span>75.37% Darktur 24.63% Balthus
</span></span><span id="line8342"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">SR</a>"&gt;</span><span>60% Swengus 40% Regia
</span></span><span id="line8343"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">E</a>"&gt;</span><span>Evus
</span></span><span id="line8344"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">C</a>"&gt;</span><span>Erthron
</span></span><span id="line8345"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">B</a>"&gt;</span><span>Bangus
</span></span><span id="line8346"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">At</a>"&gt;</span><span>Atkus
</span></span><span id="line8347"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">Ak</a>"&gt;</span><span>Aktur
</span></span><span id="line8348"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">Aa</a>"&gt;</span><span>Atkia
</span></span><span id="line8349"><span></span><span class="comment">&lt;!-- &lt;option value="F"&gt;Fell Blade (Equip it first) --&gt;</span><span>
</span></span><span id="line8350"><span></span><span>&lt;/<span class="end-tag">select</span>&gt;</span><span>
</span></span><span id="line8351"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8352"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">graphCompareColor0</a>" <span class="attribute-name">value</span>="<a class="attribute-value">#FF0000</a>"&gt;</span><span>
</span></span><span id="line8353"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">16</a> <span class="attribute-name">height</span>=<a class="attribute-value">16</a> <span class="attribute-name">style</span>="<a class="attribute-value">border: 1px solid black; background-color: #FF0000;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8354"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a>&gt;</span><span>
</span></span><span id="line8355"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8356"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8357"><span>X-Axis - Number of Ranks
</span></span><span id="line8358"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8359"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GraphXScale1</a>" <span class="attribute-name">value</span>=<a class="attribute-value">500</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">clearDPSPoints(); createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8360"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8361"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8362"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8363"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">button</a> <span class="attribute-name">class</span>="<a class="attribute-value">standardButton</a>" <span class="attribute-name">name</span>="<a class="attribute-value">clearGraphButton</a>" <span class="attribute-name">value</span>="<a class="attribute-value">Clear</a>" <span class="attribute-name">OnClick</span>="<a class="attribute-value">clearDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8364"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">50</a>&gt;</span><span>
</span></span><span id="line8365"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8366"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8367"><span></span><span>&lt;<span class="start-tag">select</span> <span class="attribute-name">name</span>="<a class="attribute-value">graphCompare1</a>" <span class="attribute-name">OnChange</span>="<a class="attribute-value">clearDPSPoints(); createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8368"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value"></a>"&gt;</span><span>None
</span></span><span id="line8369"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">D</a>"&gt;</span><span>Darkus
</span></span><span id="line8370"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">Dt</a>"&gt;</span><span>Darktur
</span></span><span id="line8371"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">R</a>" <span class="attribute-name">selected</span>&gt;</span><span>Regia
</span></span><span id="line8372"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">S</a>"&gt;</span><span>Swengus
</span></span><span id="line8373"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">DS</a>"&gt;</span><span>64.28% Darktur 35.72% Swengus
</span></span><span id="line8374"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">DB</a>"&gt;</span><span>75.37% Darktur 24.63% Balthus
</span></span><span id="line8375"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">SR</a>"&gt;</span><span>60% Swengus 40% Regia
</span></span><span id="line8376"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">E</a>"&gt;</span><span>Evus
</span></span><span id="line8377"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">C</a>"&gt;</span><span>Erthron
</span></span><span id="line8378"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">B</a>"&gt;</span><span>Bangus
</span></span><span id="line8379"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">At</a>"&gt;</span><span>Atkus
</span></span><span id="line8380"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">Ak</a>"&gt;</span><span>Aktur
</span></span><span id="line8381"><span></span><span>&lt;<span class="start-tag">option</span> <span class="attribute-name">value</span>="<a class="attribute-value">Aa</a>"&gt;</span><span>Atkia
</span></span><span id="line8382"><span></span><span class="comment">&lt;!-- &lt;option value="F"&gt;Fell Blade (Equip it first) --&gt;</span><span>
</span></span><span id="line8383"><span></span><span>&lt;/<span class="end-tag">select</span>&gt;</span><span>
</span></span><span id="line8384"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8385"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">graphCompareColor1</a>" <span class="attribute-name">value</span>="<a class="attribute-value">#0000FF</a>"&gt;</span><span>
</span></span><span id="line8386"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">16</a> <span class="attribute-name">height</span>=<a class="attribute-value">16</a> <span class="attribute-name">style</span>="<a class="attribute-value">border: 1px solid black; background-color: #0000FF;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8387"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">100%</a>&gt;</span><span>
</span></span><span id="line8388"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8389"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8390"><span>Y-Axis - DPS
</span></span><span id="line8391"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8392"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">size</span>="<a class="attribute-value">6</a>" <span class="attribute-name">maxlength</span>="<a class="attribute-value">10</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text</a>" <span class="attribute-name">name</span>="<a class="attribute-value">GraphYScale1</a>" <span class="attribute-name">value</span>=<a class="attribute-value">150</a> <span class="attribute-name">OnChange</span>="<a class="attribute-value">clearDPSPoints(); createDPSPoints();</a>"&gt;</span><span>
</span></span><span id="line8393"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8394"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8395"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8396"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8397"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">width</span>=<a class="attribute-value">50</a>&gt;</span><span>
</span></span><span id="line8398"><span><span class="entity"><span>&amp;</span>nbsp;</span>
</span></span><span id="line8399"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">align</span>=<a class="attribute-value">right</a>&gt;</span><span>
</span></span><span id="line8400"><span>Optimal Ratio
</span></span><span id="line8401"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span>&gt;</span><span>
</span></span><span id="line8402"><span></span><span>&lt;<span class="start-tag">input</span> <span class="attribute-name">type</span>=<a class="attribute-value">hidden</a> <span class="attribute-name">name</span>="<a class="attribute-value">graphCompareColor2</a>" <span class="attribute-name">value</span>="<a class="attribute-value">#770077</a>"&gt;</span><span>
</span></span><span id="line8403"><span></span><span>&lt;<span class="start-tag">table</span> <span class="attribute-name">cellpadding</span>=<a class="attribute-value">0</a> <span class="attribute-name">cellspacing</span>=<a class="attribute-value">0</a> <span class="attribute-name">width</span>=<a class="attribute-value">16</a> <span class="attribute-name">height</span>=<a class="attribute-value">16</a> <span class="attribute-name">style</span>="<a class="attribute-value">border: 1px solid black; background-color: #770077;</a>"&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span>&gt;</span><span><span class="entity"><span>&amp;</span>nbsp;</span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8404"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8405"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span>
</span></span><span id="line8406"><span>		</span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">nowrap</span> <span class="attribute-name">colspan</span>=<a class="attribute-value">7</a>&gt;</span><span>
</span></span><span id="line8407"><span></span><span>&lt;<span class="start-tag">textarea</span> <span class="attribute-name">class</span>="<a class="attribute-value">inputField</a>" <span class="attribute-name">name</span>="<a class="attribute-value">OptimalDPSText</a>" <span class="attribute-name">rows</span>=<a class="attribute-value">7</a> <span class="attribute-name">cols</span>=<a class="attribute-value">30</a> <span class="attribute-name">style</span>="<a class="attribute-value">width:100%;</a>" <span class="attribute-name">spellcheck</span>="<a class="attribute-value">false</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">textarea</span>&gt;</span><span>
</span></span><span id="line8408"><span>		</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span>
</span></span><span id="line8409"><span>	</span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line8410"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8411"><span>
</span></span><span id="line8412"><span>	</span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8413"><span>
</span></span><span id="line8414"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8415"><span>
</span></span><span id="line8416"><span></span><span>&lt;/<span class="end-tag">fieldset</span>&gt;</span><span>
</span></span><span id="line8417"><span>
</span></span><span id="line8418"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line8419"><span>
</span></span><span id="line8420"><span>
</span></span><span id="line8421"><span></span><span>&lt;<span class="start-tag">script</span> <span class="attribute-name">type</span>="<a class="attribute-value">text/javascript</a>"&gt;</span><span>
</span></span><span id="line8422"><span></span><span>&lt;!</span><span>--
</span></span><span id="line8423"><span>var dpsPoints = new Array();
</span></span><span id="line8424"><span>dpsPoints[0] = new Array();
</span></span><span id="line8425"><span>dpsPoints[0][0] = -1;
</span></span><span id="line8426"><span>dpsPoints[1] = new Array();
</span></span><span id="line8427"><span>dpsPoints[1][0] = -1;
</span></span><span id="line8428"><span>dpsPoints[2] = new Array();
</span></span><span id="line8429"><span>dpsPoints[2][0] = -1;
</span></span><span id="line8430"><span>var graphFPS = 0;
</span></span><span id="line8431"><span>var graphDmg = 2;
</span></span><span id="line8432"><span>
</span></span><span id="line8433"><span>var graphXLabel = "";
</span></span><span id="line8434"><span>var graphYLabel = "";
</span></span><span id="line8435"><span>
</span></span><span id="line8436"><span>function switchGraphTab(tabID) {
</span></span><span id="line8437"><span>	var data = document.getElementById("data");
</span></span><span id="line8438"><span>	
</span></span><span id="line8439"><span>	clearDPSPoints();
</span></span><span id="line8440"><span>	
</span></span><span id="line8441"><span>	// Unhighlight old tab.
</span></span><span id="line8442"><span>	var tab = document.getElementById("GraphTab" + GraphTab);	
</span></span><span id="line8443"><span>	if(tab) {
</span></span><span id="line8444"><span>		tab.style.backgroundColor = "#777777";
</span></span><span id="line8445"><span>    tab.style.bottom = "0px";
</span></span><span id="line8446"><span>    tab.style.height = "25px";
</span></span><span id="line8447"><span>	}
</span></span><span id="line8448"><span>	
</span></span><span id="line8449"><span>	// Highlight new tab.
</span></span><span id="line8450"><span>	tab = document.getElementById("GraphTab" + tabID);	
</span></span><span id="line8451"><span>	if(tab) {
</span></span><span id="line8452"><span>		tab.style.backgroundColor = "#DDDDDD";
</span></span><span id="line8453"><span>    tab.style.bottom = "-1px";
</span></span><span id="line8454"><span>    tab.style.height = "30px";
</span></span><span id="line8455"><span>	}
</span></span><span id="line8456"><span>	
</span></span><span id="line8457"><span>	// Hide old tab elements.
</span></span><span id="line8458"><span>	var elements = document.getElementsByName("GraphView" + GraphTab);
</span></span><span id="line8459"><span>	for(var i=0; i</span><span>&lt; </span><span>elements.length; i++) {
</span></span><span id="line8460"><span>		elements[i].style.display = "none";
</span></span><span id="line8461"><span>	}
</span></span><span id="line8462"><span>	
</span></span><span id="line8463"><span>	// Show new tab elements.
</span></span><span id="line8464"><span>	elements = document.getElementsByName("GraphView" + tabID);
</span></span><span id="line8465"><span>	for(var i=0; i</span><span>&lt; </span><span>elements.length; i++) {
</span></span><span id="line8466"><span>		elements[i].style.display = "";
</span></span><span id="line8467"><span>	}
</span></span><span id="line8468"><span>	
</span></span><span id="line8469"><span>	GraphTab = tabID;
</span></span><span id="line8470"><span>}
</span></span><span id="line8471"><span>
</span></span><span id="line8472"><span>
</span></span><span id="line8473"><span>function updateGraphColor() {
</span></span><span id="line8474"><span>	var r = getHexColor("BurnRed");
</span></span><span id="line8475"><span>	var g = getHexColor("BurnGreen");
</span></span><span id="line8476"><span>	var b = getHexColor("BurnBlue");
</span></span><span id="line8477"><span>	
</span></span><span id="line8478"><span>	document.getElementById("BurnColor").style.backgroundColor = "#" + r + "" + g + "" + b;
</span></span><span id="line8479"><span>	
</span></span><span id="line8480"><span>	r = getHexColor("PlotRed");
</span></span><span id="line8481"><span>	g = getHexColor("PlotGreen");
</span></span><span id="line8482"><span>	b = getHexColor("PlotBlue");
</span></span><span id="line8483"><span>	
</span></span><span id="line8484"><span>	document.getElementById("PlotColor").style.backgroundColor = "#" + r + "" + g + "" + b;
</span></span><span id="line8485"><span>}
</span></span><span id="line8486"><span>
</span></span><span id="line8487"><span>function burnDPSPoints() {
</span></span><span id="line8488"><span>	var data = document.getElementById("data");
</span></span><span id="line8489"><span>	
</span></span><span id="line8490"><span>	if(dpsPoints[0][0] == -1)
</span></span><span id="line8491"><span>		return;
</span></span><span id="line8492"><span>		
</span></span><span id="line8493"><span>	var FPS = parseFloat(data.FPS.value);
</span></span><span id="line8494"><span>	if(!FPS || FPS </span><span>&lt; </span><span>1) FPS = 1;
</span></span><span id="line8495"><span>	if(FPS != graphFPS) {
</span></span><span id="line8496"><span>		graphFPS = FPS;
</span></span><span id="line8497"><span>		clearDPSPoints();
</span></span><span id="line8498"><span>		return;
</span></span><span id="line8499"><span>	}
</span></span><span id="line8500"><span>
</span></span><span id="line8501"><span>	var i = 1;
</span></span><span id="line8502"><span>	while(i </span><span>&lt; </span><span>dpsPoints.length) {
</span></span><span id="line8503"><span>		if(dpsPoints[i][0] == -1)
</span></span><span id="line8504"><span>			break;
</span></span><span id="line8505"><span>		i++;
</span></span><span id="line8506"><span>	}
</span></span><span id="line8507"><span>	for(var j=1; j</span><span>&lt;i</span><span>; j++) {
</span></span><span id="line8508"><span>		var jj = 1;
</span></span><span id="line8509"><span>		while(jj </span><span>&lt; </span><span>dpsPoints[0].length &amp;&amp; jj </span><span>&lt; </span><span>dpsPoints[j].length) {
</span></span><span id="line8510"><span>			if(dpsPoints[0][jj] != dpsPoints[j][jj])
</span></span><span id="line8511"><span>				break;
</span></span><span id="line8512"><span>			if(dpsPoints[0][jj] == -1 &amp;&amp; dpsPoints[j][jj] == -1) {
</span></span><span id="line8513"><span>				i = j;
</span></span><span id="line8514"><span>				break;
</span></span><span id="line8515"><span>			}
</span></span><span id="line8516"><span>			jj++;
</span></span><span id="line8517"><span>		}
</span></span><span id="line8518"><span>	}
</span></span><span id="line8519"><span>	
</span></span><span id="line8520"><span>	if(i &gt;= dpsPoints.length)
</span></span><span id="line8521"><span>		dpsPoints[i] = new Array();
</span></span><span id="line8522"><span>	dpsPoints[i][0] = "#" + getHexColor("BurnRed") + "" + getHexColor("BurnGreen") + "" + getHexColor("BurnBlue");
</span></span><span id="line8523"><span>	
</span></span><span id="line8524"><span>	var ii = 1;
</span></span><span id="line8525"><span>	while(ii </span><span>&lt; </span><span>dpsPoints[0].length) {
</span></span><span id="line8526"><span>		if(dpsPoints[0][ii] == -1)
</span></span><span id="line8527"><span>			break;
</span></span><span id="line8528"><span>		dpsPoints[i][ii] = dpsPoints[0][ii];
</span></span><span id="line8529"><span>		ii++;
</span></span><span id="line8530"><span>	}
</span></span><span id="line8531"><span>	dpsPoints[i][ii] = -1;
</span></span><span id="line8532"><span>	
</span></span><span id="line8533"><span>	if(i+1 </span><span>&lt; </span><span>dpsPoints.length)
</span></span><span id="line8534"><span>		dpsPoints[i+1][0] = -1;
</span></span><span id="line8535"><span>	
</span></span><span id="line8536"><span>	plotDPS();
</span></span><span id="line8537"><span>}
</span></span><span id="line8538"><span>
</span></span><span id="line8539"><span>function setGraphDmg(dmgType) {
</span></span><span id="line8540"><span>	graphDmg = dmgType;
</span></span><span id="line8541"><span>	
</span></span><span id="line8542"><span>	if(dpsPoints.length &gt; 1)
</span></span><span id="line8543"><span>		dpsPoints[1][0] = -1;
</span></span><span id="line8544"><span>}
</span></span><span id="line8545"><span>
</span></span><span id="line8546"><span>function clearDPSPoints() {
</span></span><span id="line8547"><span>	var data = document.getElementById("data");
</span></span><span id="line8548"><span>	data.OptimalDPSText.value = "";
</span></span><span id="line8549"><span>	
</span></span><span id="line8550"><span>	jg.clear();
</span></span><span id="line8551"><span>	
</span></span><span id="line8552"><span>	if(dpsPoints.length &gt; 1)
</span></span><span id="line8553"><span>		dpsPoints[1][0] = -1;
</span></span><span id="line8554"><span>}
</span></span><span id="line8555"><span>
</span></span><span id="line8556"><span>function getHexColor(fieldName) {
</span></span><span id="line8557"><span>	var data = document.getElementById("data");
</span></span><span id="line8558"><span>	var c = parseFloat(data[fieldName].value);
</span></span><span id="line8559"><span>	if(!c) c = 0;
</span></span><span id="line8560"><span>	
</span></span><span id="line8561"><span>	if(c </span><span>&lt; </span><span>0) {
</span></span><span id="line8562"><span>		c = 0;
</span></span><span id="line8563"><span>		data[fieldName].value = 0;
</span></span><span id="line8564"><span>	}
</span></span><span id="line8565"><span>	else if(c &gt; 100) {
</span></span><span id="line8566"><span>		c = 100;
</span></span><span id="line8567"><span>		data[fieldName].value = 100;
</span></span><span id="line8568"><span>	}
</span></span><span id="line8569"><span>	
</span></span><span id="line8570"><span>	c = (c * 255) / 100;
</span></span><span id="line8571"><span>	c = Math.round(c).toString(16);
</span></span><span id="line8572"><span>	if(c.length == 1)
</span></span><span id="line8573"><span>		c = "0" + c;
</span></span><span id="line8574"><span>	
</span></span><span id="line8575"><span>	return c;
</span></span><span id="line8576"><span>}
</span></span><span id="line8577"><span>
</span></span><span id="line8578"><span>function createDPSPoints() {
</span></span><span id="line8579"><span>	var data = document.getElementById("data");
</span></span><span id="line8580"><span>	
</span></span><span id="line8581"><span>	var FPS = parseFloat(data.FPS.value);
</span></span><span id="line8582"><span>	if(!FPS || FPS </span><span>&lt; </span><span>1) FPS = 1;
</span></span><span id="line8583"><span>	
</span></span><span id="line8584"><span>	if(FPS != graphFPS) {
</span></span><span id="line8585"><span>		graphFPS = FPS;
</span></span><span id="line8586"><span>		if(dpsPoints.length &gt; 1)
</span></span><span id="line8587"><span>			dpsPoints[1][0] = -1;
</span></span><span id="line8588"><span>	}
</span></span><span id="line8589"><span>	
</span></span><span id="line8590"><span>	if(GraphTab == 0) {
</span></span><span id="line8591"><span>		// DPS
</span></span><span id="line8592"><span>		
</span></span><span id="line8593"><span>		var timeLimit = parseFloat(data.GraphTime.value);
</span></span><span id="line8594"><span>		if(!timeLimit || timeLimit </span><span>&lt; </span><span>0) timeLimit = 1;
</span></span><span id="line8595"><span>		timeLimit = timeLimit * FPS;
</span></span><span id="line8596"><span>		dpsPoints[0][0] = "#" + getHexColor("PlotRed") + "" + getHexColor("PlotGreen") + "" + getHexColor("PlotBlue");
</span></span><span id="line8597"><span>		dpsPoints[0][1] = 0;
</span></span><span id="line8598"><span>		dpsPoints[0][2] = 0;
</span></span><span id="line8599"><span>		
</span></span><span id="line8600"><span>		var balCurr = BalMax;
</span></span><span id="line8601"><span>		var currTick = 0;
</span></span><span id="line8602"><span>		var balLocked = 0;
</span></span><span id="line8603"><span>		var totalDamage = 0;
</span></span><span id="line8604"><span>		var totalSwings = 0;
</span></span><span id="line8605"><span>		
</span></span><span id="line8606"><span>		while(currTick </span><span>&lt; </span><span>timeLimit) {
</span></span><span id="line8607"><span>			if(balLocked </span><span>&lt;=</span><span> 0 &amp;&amp; balCurr &gt;= BalUse) {
</span></span><span id="line8608"><span>				balCurr -= BalUse;
</span></span><span id="line8609"><span>				balLocked = 4;
</span></span><span id="line8610"><span>			  
</span></span><span id="line8611"><span>				totalSwings += 1;
</span></span><span id="line8612"><span>				if(graphDmg == 0)
</span></span><span id="line8613"><span>					totalDamage += HitMin;
</span></span><span id="line8614"><span>				else if(graphDmg == 1)
</span></span><span id="line8615"><span>					totalDamage += HitMax;			
</span></span><span id="line8616"><span>				else
</span></span><span id="line8617"><span>					totalDamage += HitAvg;
</span></span><span id="line8618"><span>				dpsPoints[0][(totalSwings*4)-1] = currTick / FPS;
</span></span><span id="line8619"><span>				dpsPoints[0][(totalSwings*4)] = dpsPoints[0][(totalSwings*4)-2];
</span></span><span id="line8620"><span>				dpsPoints[0][(totalSwings*4)+1] = currTick / FPS;
</span></span><span id="line8621"><span>				dpsPoints[0][(totalSwings*4)+2] = totalDamage;
</span></span><span id="line8622"><span>			}
</span></span><span id="line8623"><span>			
</span></span><span id="line8624"><span>			balCurr += BalReg;
</span></span><span id="line8625"><span>			if(balCurr &gt; BalMax)
</span></span><span id="line8626"><span>				balCurr = BalMax;
</span></span><span id="line8627"><span>			
</span></span><span id="line8628"><span>			if(balLocked &gt; 0)
</span></span><span id="line8629"><span>				balLocked--;
</span></span><span id="line8630"><span>			currTick++;
</span></span><span id="line8631"><span>		}
</span></span><span id="line8632"><span>		dpsPoints[0][(totalSwings*4)+3] = -1;
</span></span><span id="line8633"><span>		
</span></span><span id="line8634"><span>		graphXLabel = "Seconds";
</span></span><span id="line8635"><span>		graphYLabel = "Total Histia Damage";
</span></span><span id="line8636"><span>	}
</span></span><span id="line8637"><span>	else if(GraphTab == 1) {
</span></span><span id="line8638"><span>		// Darkus vs Regia
</span></span><span id="line8639"><span>		
</span></span><span id="line8640"><span>		var rankEnd = parseFloat(data.GraphXScale1.value);
</span></span><span id="line8641"><span>		if(!rankEnd || rankEnd </span><span>&lt; </span><span>0) rankEnd = 1;
</span></span><span id="line8642"><span>		
</span></span><span id="line8643"><span>		var trainerMinDmg0 = 0;
</span></span><span id="line8644"><span>		var trainerMaxDmg0 = 0;
</span></span><span id="line8645"><span>		var trainerReg0 = 0;
</span></span><span id="line8646"><span>		var trainerAcc0 = 0;
</span></span><span id="line8647"><span>		var trainerExist0 = 0;
</span></span><span id="line8648"><span>		var trainerName0 = "";
</span></span><span id="line8649"><span>		var trainerRanks0 = 0;
</span></span><span id="line8650"><span>		
</span></span><span id="line8651"><span>		var trainerMinDmg1 = 0;
</span></span><span id="line8652"><span>		var trainerMaxDmg1 = 0;
</span></span><span id="line8653"><span>		var trainerReg1 = 0;
</span></span><span id="line8654"><span>		var trainerAcc1 = 0;
</span></span><span id="line8655"><span>		var trainerExist1 = 0;
</span></span><span id="line8656"><span>		var trainerName1 = "";
</span></span><span id="line8657"><span>		var trainerRanks1 = 0;
</span></span><span id="line8658"><span>		
</span></span><span id="line8659"><span>		var trainerOpt = -1;
</span></span><span id="line8660"><span>		var trainerNameOpt = "";
</span></span><span id="line8661"><span>		var trainerRanksOpt = 0;
</span></span><span id="line8662"><span>		
</span></span><span id="line8663"><span>		var compareTrainers = true;
</span></span><span id="line8664"><span>		var prevTrainerReg = false;
</span></span><span id="line8665"><span>    
</span></span><span id="line8666"><span>    var Weapon = data.Weapon.value;
</span></span><span id="line8667"><span>    var Subclass = data.Subclass.value;
</span></span><span id="line8668"><span>    var LabrysTargets = parseInt(data.LabrysTargets.value);
</span></span><span id="line8669"><span>    if(!LabrysTargets || LabrysTargets </span><span>&lt; </span><span>1) {
</span></span><span id="line8670"><span>      LabrysTargets = 1;
</span></span><span id="line8671"><span>    }
</span></span><span id="line8672"><span>		
</span></span><span id="line8673"><span>		for(var i=0; i</span><span>&lt;2</span><span>; i++) {
</span></span><span id="line8674"><span>			var trainer = data["graphCompare"+i].value;
</span></span><span id="line8675"><span>			
</span></span><span id="line8676"><span>			var trainerMinDmg = 0;
</span></span><span id="line8677"><span>			var trainerMaxDmg = 0;
</span></span><span id="line8678"><span>			var trainerReg = 0;
</span></span><span id="line8679"><span>			var trainerAcc = 0;
</span></span><span id="line8680"><span>			var trainerExist = true;
</span></span><span id="line8681"><span>			var trainerName = "";
</span></span><span id="line8682"><span>			
</span></span><span id="line8683"><span>			switch(trainer) {
</span></span><span id="line8684"><span>				case "D":
</span></span><span id="line8685"><span>					// Darkus
</span></span><span id="line8686"><span>					trainerMinDmg = 6;
</span></span><span id="line8687"><span>					trainerMaxDmg = 6;
</span></span><span id="line8688"><span>					trainerReg = 1;
</span></span><span id="line8689"><span>					trainerName = "Darkus";
</span></span><span id="line8690"><span>					break;
</span></span><span id="line8691"><span>				case "Dt":
</span></span><span id="line8692"><span>					// Darktur
</span></span><span id="line8693"><span>					trainerMinDmg = 10;
</span></span><span id="line8694"><span>					trainerMaxDmg = 10;
</span></span><span id="line8695"><span>					trainerName = "Darktur";
</span></span><span id="line8696"><span>					break;
</span></span><span id="line8697"><span>				case "DS":
</span></span><span id="line8698"><span>					// 64.28% Darktur 36.72% Swengus
</span></span><span id="line8699"><span>					trainerMinDmg = 10 * 0.642857;
</span></span><span id="line8700"><span>					trainerMaxDmg = 10 * 0.642857;
</span></span><span id="line8701"><span>					trainerReg = 7 * 0.357143;
</span></span><span id="line8702"><span>					trainerName = "DS";
</span></span><span id="line8703"><span>					break;
</span></span><span id="line8704"><span>				case "DB":
</span></span><span id="line8705"><span>					// 75.37% Darktur 24.63% Balthus
</span></span><span id="line8706"><span>					trainerMinDmg = 10 * 0.753693;
</span></span><span id="line8707"><span>					trainerMaxDmg = 10 * 0.753693;
</span></span><span id="line8708"><span>					trainerName = "DB";
</span></span><span id="line8709"><span>					break;
</span></span><span id="line8710"><span>				case "R":
</span></span><span id="line8711"><span>					// Regia
</span></span><span id="line8712"><span>					trainerReg = 15;
</span></span><span id="line8713"><span>					if(prevTrainerReg)
</span></span><span id="line8714"><span>						compareTrainers = false;
</span></span><span id="line8715"><span>					prevTrainerReg = true;
</span></span><span id="line8716"><span>					trainerName = "Regia";
</span></span><span id="line8717"><span>					break;
</span></span><span id="line8718"><span>				case "S":
</span></span><span id="line8719"><span>					// Swengus
</span></span><span id="line8720"><span>					trainerReg = 7;
</span></span><span id="line8721"><span>					if(prevTrainerReg)
</span></span><span id="line8722"><span>						compareTrainers = false;
</span></span><span id="line8723"><span>					prevTrainerReg = true;
</span></span><span id="line8724"><span>					trainerName = "Swengus";
</span></span><span id="line8725"><span>					break;
</span></span><span id="line8726"><span>				case "SR":
</span></span><span id="line8727"><span>					// 60% Swengus 40% Regia
</span></span><span id="line8728"><span>					trainerReg = 10.2;
</span></span><span id="line8729"><span>					if(prevTrainerReg)
</span></span><span id="line8730"><span>						compareTrainers = false;
</span></span><span id="line8731"><span>					prevTrainerReg = true;
</span></span><span id="line8732"><span>					trainerName = "SR";
</span></span><span id="line8733"><span>					break;
</span></span><span id="line8734"><span>				case "E":
</span></span><span id="line8735"><span>					// Evus
</span></span><span id="line8736"><span>					trainerAcc = 4;
</span></span><span id="line8737"><span>					trainerMinDmg = 1;
</span></span><span id="line8738"><span>					trainerMaxDmg = 1;
</span></span><span id="line8739"><span>					trainerReg = 4;
</span></span><span id="line8740"><span>					compareTrainers = false;
</span></span><span id="line8741"><span>					trainerName = "Evus";
</span></span><span id="line8742"><span>					break;
</span></span><span id="line8743"><span>				case "C":
</span></span><span id="line8744"><span>					// Erthron
</span></span><span id="line8745"><span>					trainerAcc = 2;
</span></span><span id="line8746"><span>					trainerMinDmg = 1;
</span></span><span id="line8747"><span>					trainerMaxDmg = 1;
</span></span><span id="line8748"><span>					trainerReg = 2;
</span></span><span id="line8749"><span>					compareTrainers = false;
</span></span><span id="line8750"><span>					trainerName = "Erthron";
</span></span><span id="line8751"><span>					break;
</span></span><span id="line8752"><span>				case "B":
</span></span><span id="line8753"><span>					// Bangus
</span></span><span id="line8754"><span>					trainerAcc = 2;
</span></span><span id="line8755"><span>					trainerMinDmg = 2;
</span></span><span id="line8756"><span>					trainerMaxDmg = 3;
</span></span><span id="line8757"><span>					trainerReg = 5;
</span></span><span id="line8758"><span>					trainerName = "Bangus";
</span></span><span id="line8759"><span>					break;
</span></span><span id="line8760"><span>				case "At":
</span></span><span id="line8761"><span>					// Atkus
</span></span><span id="line8762"><span>					trainerAcc = 16;
</span></span><span id="line8763"><span>					trainerReg = 1;
</span></span><span id="line8764"><span>					compareTrainers = false;
</span></span><span id="line8765"><span>					trainerName = "Atkus";
</span></span><span id="line8766"><span>					break;
</span></span><span id="line8767"><span>				case "Ak":
</span></span><span id="line8768"><span>					// Aktur
</span></span><span id="line8769"><span>					trainerAcc = 25;
</span></span><span id="line8770"><span>					compareTrainers = false;
</span></span><span id="line8771"><span>					trainerName = "Aktur";
</span></span><span id="line8772"><span>					break;
</span></span><span id="line8773"><span>				case "Aa":
</span></span><span id="line8774"><span>					// Atkia
</span></span><span id="line8775"><span>					trainerAcc = 13;
</span></span><span id="line8776"><span>					trainerMinDmg = 3;
</span></span><span id="line8777"><span>					trainerMaxDmg = 3;
</span></span><span id="line8778"><span>					trainerReg = 3;
</span></span><span id="line8779"><span>					compareTrainers = false;
</span></span><span id="line8780"><span>					trainerName = "Atkia";
</span></span><span id="line8781"><span>					break;
</span></span><span id="line8782"><span>				case "F":
</span></span><span id="line8783"><span>					// Fell
</span></span><span id="line8784"><span>					if(Weapon == 101) {
</span></span><span id="line8785"><span>						trainerAcc = 16;
</span></span><span id="line8786"><span>						trainerMinDmg = 6;
</span></span><span id="line8787"><span>						trainerMaxDmg = 6;
</span></span><span id="line8788"><span>					}
</span></span><span id="line8789"><span>					else if(Weapon == 102) {
</span></span><span id="line8790"><span>						trainerAcc = 32;
</span></span><span id="line8791"><span>						trainerMinDmg = 12;
</span></span><span id="line8792"><span>						trainerMaxDmg = 12;
</span></span><span id="line8793"><span>					}
</span></span><span id="line8794"><span>					compareTrainers = false;
</span></span><span id="line8795"><span>					trainerName = "Fell";
</span></span><span id="line8796"><span>					break;
</span></span><span id="line8797"><span>				default:
</span></span><span id="line8798"><span>					compareTrainers = false;
</span></span><span id="line8799"><span>					trainerExist = false;
</span></span><span id="line8800"><span>					break;
</span></span><span id="line8801"><span>			}
</span></span><span id="line8802"><span>      
</span></span><span id="line8803"><span>      if(Weapon == 89) {
</span></span><span id="line8804"><span>        // Ethereal Sword
</span></span><span id="line8805"><span>        
</span></span><span id="line8806"><span>        trainerAcc = trainerAcc * 1.2;
</span></span><span id="line8807"><span>        trainerMinDmg = trainerMinDmg * 1.15;
</span></span><span id="line8808"><span>        trainerMaxDmg = trainerMaxDmg * 1.15;
</span></span><span id="line8809"><span>      }
</span></span><span id="line8810"><span>			
</span></span><span id="line8811"><span>			if(i == 0) {
</span></span><span id="line8812"><span>				trainerMinDmg0 = trainerMinDmg;
</span></span><span id="line8813"><span>				trainerMaxDmg0 = trainerMaxDmg;
</span></span><span id="line8814"><span>				trainerReg0 = trainerReg;
</span></span><span id="line8815"><span>				trainerAcc0 = trainerAcc;
</span></span><span id="line8816"><span>				trainerExist0 = trainerExist;
</span></span><span id="line8817"><span>				trainerName0 = trainerName;
</span></span><span id="line8818"><span>			}
</span></span><span id="line8819"><span>			else {
</span></span><span id="line8820"><span>				trainerMinDmg1 = trainerMinDmg;
</span></span><span id="line8821"><span>				trainerMaxDmg1 = trainerMaxDmg;
</span></span><span id="line8822"><span>				trainerReg1 = trainerReg;
</span></span><span id="line8823"><span>				trainerAcc1 = trainerAcc;
</span></span><span id="line8824"><span>				trainerExist1 = trainerExist;
</span></span><span id="line8825"><span>				trainerName1 = trainerName;
</span></span><span id="line8826"><span>			}
</span></span><span id="line8827"><span>		}
</span></span><span id="line8828"><span>		
</span></span><span id="line8829"><span>		for(var i=0; i</span><span>&lt;3</span><span>; i++) {
</span></span><span id="line8830"><span>			if(i == 2 &amp;&amp; !compareTrainers) {
</span></span><span id="line8831"><span>				dpsPoints[i][0] = -1;
</span></span><span id="line8832"><span>				break;
</span></span><span id="line8833"><span>			}
</span></span><span id="line8834"><span>			
</span></span><span id="line8835"><span>			dpsPoints[i][0] = data["graphCompareColor"+i].value;
</span></span><span id="line8836"><span>			
</span></span><span id="line8837"><span>			if((i == 0 &amp;&amp; !trainerExist0) || (i == 1 &amp;&amp; !trainerExist1)) {
</span></span><span id="line8838"><span>				dpsPoints[i][1] = -1;
</span></span><span id="line8839"><span>				continue;
</span></span><span id="line8840"><span>			}
</span></span><span id="line8841"><span>			
</span></span><span id="line8842"><span>			var minDmg = GraphStatMinDmg;
</span></span><span id="line8843"><span>			var maxDmg = GraphStatMaxDmg;
</span></span><span id="line8844"><span>			var reg = GraphStatReg;
</span></span><span id="line8845"><span>			var acc = GraphStatAcc;
</span></span><span id="line8846"><span>      var accMin = GraphStatAccMin;
</span></span><span id="line8847"><span>      var fellRanks = GraphStatFell;
</span></span><span id="line8848"><span>			
</span></span><span id="line8849"><span>			var dps, avgDmg, use, useAcc, useAccMin;
</span></span><span id="line8850"><span>			var rank = 0;
</span></span><span id="line8851"><span>			while(rank </span><span>&lt;=</span><span> rankEnd) {
</span></span><span id="line8852"><span>        useAcc = acc;
</span></span><span id="line8853"><span>        useAccMin = accMin;
</span></span><span id="line8854"><span>        if(GraphStatAccMax &gt;= 0)
</span></span><span id="line8855"><span>          useAcc = Math.min(useAcc, GraphStatAccMax);
</span></span><span id="line8856"><span>        useAcc = Math.max(useAcc, useAccMin);
</span></span><span id="line8857"><span>        
</span></span><span id="line8858"><span>        if(Weapon == 110 &amp;&amp; Subclass == 1) {
</span></span><span id="line8859"><span>          var LabrysDamage = GetLabrysDamage(minDmg, maxDmg, fellRanks, LabrysTargets);
</span></span><span id="line8860"><span>          avgDmg = 100 + ((Math.max(LabrysDamage[0],0) + Math.max(LabrysDamage[1]*3,0)) / 2);
</span></span><span id="line8861"><span>        }
</span></span><span id="line8862"><span>        else {
</span></span><span id="line8863"><span>          avgDmg = 100 + ((Math.max(minDmg,0) + Math.max(maxDmg*3,0)) / 2);
</span></span><span id="line8864"><span>        }
</span></span><span id="line8865"><span>				use = Math.max(200, useAcc + (minDmg + maxDmg*3)/4) * (5/3);
</span></span><span id="line8866"><span>        use = RoundDown(use);
</span></span><span id="line8867"><span>				dps = Math.min(((reg / 6) / use),0.25) * FPS * avgDmg;
</span></span><span id="line8868"><span>				
</span></span><span id="line8869"><span>				dpsPoints[i][(rank*2)+1] = rank;
</span></span><span id="line8870"><span>				dpsPoints[i][(rank*2)+2] = dps;
</span></span><span id="line8871"><span>				
</span></span><span id="line8872"><span>				if(rank == rankEnd) {
</span></span><span id="line8873"><span>					break;
</span></span><span id="line8874"><span>				}
</span></span><span id="line8875"><span>				else if(i == 0) {
</span></span><span id="line8876"><span>					minDmg += trainerMinDmg0;
</span></span><span id="line8877"><span>					maxDmg += trainerMaxDmg0;
</span></span><span id="line8878"><span>					reg += trainerReg0;
</span></span><span id="line8879"><span>					acc += trainerAcc0;
</span></span><span id="line8880"><span>          accMin += trainerAcc0;
</span></span><span id="line8881"><span>				}
</span></span><span id="line8882"><span>				else if(i == 1) {
</span></span><span id="line8883"><span>					minDmg += trainerMinDmg1;
</span></span><span id="line8884"><span>					maxDmg += trainerMaxDmg1;
</span></span><span id="line8885"><span>					reg += trainerReg1;
</span></span><span id="line8886"><span>					acc += trainerAcc1;
</span></span><span id="line8887"><span>          accMin += trainerAcc1;
</span></span><span id="line8888"><span>				}
</span></span><span id="line8889"><span>				else {
</span></span><span id="line8890"><span>					// Optimal Ratio
</span></span><span id="line8891"><span>					var nextMin, nextMax, nextReg, nextAcc, nextAccMin;
</span></span><span id="line8892"><span>					
</span></span><span id="line8893"><span>					// Check next rank's DPS with trainer0
</span></span><span id="line8894"><span>					nextMin = minDmg + trainerMinDmg0;
</span></span><span id="line8895"><span>					nextMax = maxDmg + trainerMaxDmg0;
</span></span><span id="line8896"><span>					nextReg = reg + trainerReg0;
</span></span><span id="line8897"><span>					nextAcc = acc + trainerAcc0;
</span></span><span id="line8898"><span>          nextAccMin = accMin + trainerAcc0;
</span></span><span id="line8899"><span>          
</span></span><span id="line8900"><span>          useAcc = nextAcc;
</span></span><span id="line8901"><span>          useAccMin = nextAccMin;
</span></span><span id="line8902"><span>          if(GraphStatAccMax &gt;= 0)
</span></span><span id="line8903"><span>            useAcc = Math.min(useAcc, GraphStatAccMax);
</span></span><span id="line8904"><span>          useAcc = Math.max(useAcc, useAccMin);
</span></span><span id="line8905"><span>          
</span></span><span id="line8906"><span>          if(Weapon == 110 &amp;&amp; Subclass == 1) {
</span></span><span id="line8907"><span>            var LabrysDamage = GetLabrysDamage(minDmg, maxDmg, fellRanks, LabrysTargets);
</span></span><span id="line8908"><span>            avgDmg = 100 + ((Math.max(LabrysDamage[0],0) + Math.max(LabrysDamage[1]*3,0)) / 2);
</span></span><span id="line8909"><span>          }
</span></span><span id="line8910"><span>          else {
</span></span><span id="line8911"><span>            avgDmg = 100 + ((Math.max(nextMin,0) + Math.max(nextMax*3,0)) / 2);
</span></span><span id="line8912"><span>          }
</span></span><span id="line8913"><span>					use = Math.max(200, useAcc + (nextMin + nextMax*3)/4) * (5/3);
</span></span><span id="line8914"><span>          use = RoundDown(use);
</span></span><span id="line8915"><span>					dps = Math.min(((nextReg / 6) / use),0.25) * FPS * avgDmg;
</span></span><span id="line8916"><span>					
</span></span><span id="line8917"><span>					var nextDPS0 = dps;
</span></span><span id="line8918"><span>					
</span></span><span id="line8919"><span>					// Check next rank's DPS with trainer1
</span></span><span id="line8920"><span>					nextMin = minDmg + trainerMinDmg1;
</span></span><span id="line8921"><span>					nextMax = maxDmg + trainerMaxDmg1;
</span></span><span id="line8922"><span>					nextReg = reg + trainerReg1;
</span></span><span id="line8923"><span>					nextAcc = acc + trainerAcc1;
</span></span><span id="line8924"><span>          nextAccMin = accMin + trainerAcc0;
</span></span><span id="line8925"><span>					
</span></span><span id="line8926"><span>          useAcc = nextAcc;
</span></span><span id="line8927"><span>          useAccMin = nextAccMin;
</span></span><span id="line8928"><span>          if(GraphStatAccMax &gt;= 0)
</span></span><span id="line8929"><span>            useAcc = Math.min(useAcc, GraphStatAccMax);
</span></span><span id="line8930"><span>          useAcc = Math.max(useAcc, useAccMin);
</span></span><span id="line8931"><span>          
</span></span><span id="line8932"><span>          if(Weapon == 110 &amp;&amp; Subclass == 1) {
</span></span><span id="line8933"><span>            var LabrysDamage = GetLabrysDamage(minDmg, maxDmg, fellRanks, LabrysTargets);
</span></span><span id="line8934"><span>            avgDmg = 100 + ((Math.max(LabrysDamage[0],0) + Math.max(LabrysDamage[1]*3,0)) / 2);
</span></span><span id="line8935"><span>          }
</span></span><span id="line8936"><span>          else {
</span></span><span id="line8937"><span>            avgDmg = 100 + ((Math.max(nextMin,0) + Math.max(nextMax*3,0)) / 2);
</span></span><span id="line8938"><span>          }
</span></span><span id="line8939"><span>					use = Math.max(200, useAcc + (nextMin + nextMax*3)/4) * (5/3);
</span></span><span id="line8940"><span>          use = RoundDown(use);
</span></span><span id="line8941"><span>					dps = Math.min(((nextReg / 6) / use),0.25) * FPS * avgDmg;
</span></span><span id="line8942"><span>					
</span></span><span id="line8943"><span>					var nextDPS1 = dps;
</span></span><span id="line8944"><span>					if(nextDPS0 &gt; nextDPS1) {
</span></span><span id="line8945"><span>						// trainer0 is better
</span></span><span id="line8946"><span>						minDmg += trainerMinDmg0;
</span></span><span id="line8947"><span>						maxDmg += trainerMaxDmg0;
</span></span><span id="line8948"><span>						reg += trainerReg0;
</span></span><span id="line8949"><span>						acc += trainerAcc0;
</span></span><span id="line8950"><span>            accMin += trainerAcc0;
</span></span><span id="line8951"><span>            
</span></span><span id="line8952"><span>						if(trainerOpt == -1) {
</span></span><span id="line8953"><span>							trainerOpt = 0;
</span></span><span id="line8954"><span>							trainerRanksOpt += 1;
</span></span><span id="line8955"><span>							trainerNameOpt = trainerName0;
</span></span><span id="line8956"><span>						}
</span></span><span id="line8957"><span>						else if(trainerOpt == 0) {
</span></span><span id="line8958"><span>							trainerRanksOpt += 1;
</span></span><span id="line8959"><span>						}
</span></span><span id="line8960"><span>						else {
</span></span><span id="line8961"><span>							if(trainerOpt == 1) {
</span></span><span id="line8962"><span>								if(trainerRanksOpt </span><span>&lt;=</span><span> 5) {
</span></span><span id="line8963"><span>									trainerRanks1 = trainerRanksOpt;
</span></span><span id="line8964"><span>									trainerRanksOpt = 0;
</span></span><span id="line8965"><span>								}
</span></span><span id="line8966"><span>								trainerOpt = -2;
</span></span><span id="line8967"><span>							}
</span></span><span id="line8968"><span>							trainerRanks0 += 1;
</span></span><span id="line8969"><span>						}
</span></span><span id="line8970"><span>					}
</span></span><span id="line8971"><span>					else {
</span></span><span id="line8972"><span>						// trainer1 is better
</span></span><span id="line8973"><span>						minDmg += trainerMinDmg1;
</span></span><span id="line8974"><span>						maxDmg += trainerMaxDmg1;
</span></span><span id="line8975"><span>						reg += trainerReg1;
</span></span><span id="line8976"><span>						acc += trainerAcc1;
</span></span><span id="line8977"><span>						accMin += trainerAcc0;
</span></span><span id="line8978"><span>            
</span></span><span id="line8979"><span>						if(trainerOpt == -1) {
</span></span><span id="line8980"><span>							trainerOpt = 1;
</span></span><span id="line8981"><span>							trainerRanksOpt += 1;
</span></span><span id="line8982"><span>							trainerNameOpt = trainerName1;
</span></span><span id="line8983"><span>						}
</span></span><span id="line8984"><span>						else if(trainerOpt == 1) {
</span></span><span id="line8985"><span>							trainerRanksOpt += 1;
</span></span><span id="line8986"><span>						}
</span></span><span id="line8987"><span>						else {
</span></span><span id="line8988"><span>							if(trainerOpt == 0) {
</span></span><span id="line8989"><span>								if(trainerRanksOpt </span><span>&lt;=</span><span> 5) {
</span></span><span id="line8990"><span>									trainerRanks0 = trainerRanksOpt;
</span></span><span id="line8991"><span>									trainerRanksOpt = 0;
</span></span><span id="line8992"><span>								}
</span></span><span id="line8993"><span>								trainerOpt = -2;
</span></span><span id="line8994"><span>							}
</span></span><span id="line8995"><span>							trainerRanks1 += 1;
</span></span><span id="line8996"><span>						}
</span></span><span id="line8997"><span>					}
</span></span><span id="line8998"><span>				}
</span></span><span id="line8999"><span>				
</span></span><span id="line9000"><span>				rank++;
</span></span><span id="line9001"><span>			}
</span></span><span id="line9002"><span>			dpsPoints[i][(rank*2)+1] = -1;
</span></span><span id="line9003"><span>			
</span></span><span id="line9004"><span>			if(i+1 </span><span>&lt; </span><span>dpsPoints.length)
</span></span><span id="line9005"><span>				dpsPoints[i+1][0] = -1;
</span></span><span id="line9006"><span>		}
</span></span><span id="line9007"><span>		
</span></span><span id="line9008"><span>		var msg = "Optimal training for " + rankEnd + " ranks into the future:\n";
</span></span><span id="line9009"><span>		if(trainerRanksOpt == 0 &amp;&amp; trainerRanks0 == 0 &amp;&amp; trainerRanks1 == 0) {
</span></span><span id="line9010"><span>			msg += "N/A";
</span></span><span id="line9011"><span>		}
</span></span><span id="line9012"><span>		else {
</span></span><span id="line9013"><span>			if(trainerRanksOpt &gt; 0) {
</span></span><span id="line9014"><span>				if(trainerNameOpt == "SR") {
</span></span><span id="line9015"><span>					msg += "Swengus/Regia is better for ";
</span></span><span id="line9016"><span>					
</span></span><span id="line9017"><span>					if(trainerRanks0 == 0 &amp;&amp; trainerRanks1 == 0) {
</span></span><span id="line9018"><span>						msg += "at least ";
</span></span><span id="line9019"><span>					}
</span></span><span id="line9020"><span>					msg += trainerRanksOpt + " ranks (";
</span></span><span id="line9021"><span>					msg += Round(trainerRanksOpt * 0.6) + " Swengus + ";
</span></span><span id="line9022"><span>					msg += Round(trainerRanksOpt * 0.4) + " Regia).\n";
</span></span><span id="line9023"><span>				}
</span></span><span id="line9024"><span>				else if(trainerNameOpt == "DS") {
</span></span><span id="line9025"><span>					msg += "Darktur/Swengus is better for ";
</span></span><span id="line9026"><span>					
</span></span><span id="line9027"><span>					if(trainerRanks0 == 0 &amp;&amp; trainerRanks1 == 0) {
</span></span><span id="line9028"><span>						msg += "at least ";
</span></span><span id="line9029"><span>					}
</span></span><span id="line9030"><span>					msg += trainerRanksOpt + " ranks (";
</span></span><span id="line9031"><span>					msg += Round(trainerRanksOpt * 0.642857) + " Darktur + ";
</span></span><span id="line9032"><span>					msg += Round(trainerRanksOpt * 0.357143) + " Swengus).\n";
</span></span><span id="line9033"><span>				}
</span></span><span id="line9034"><span>				else if(trainerNameOpt == "DB") {
</span></span><span id="line9035"><span>					msg += "Darktur/Balthus is better for ";
</span></span><span id="line9036"><span>					
</span></span><span id="line9037"><span>					if(trainerRanks0 == 0 &amp;&amp; trainerRanks1 == 0) {
</span></span><span id="line9038"><span>						msg += "at least ";
</span></span><span id="line9039"><span>					}
</span></span><span id="line9040"><span>					msg += trainerRanksOpt + " ranks (";
</span></span><span id="line9041"><span>					msg += Round(trainerRanksOpt * 0.753693) + " Darktur + ";
</span></span><span id="line9042"><span>					msg += Round(trainerRanksOpt * 0.246307) + " Balthus).\n";
</span></span><span id="line9043"><span>				}
</span></span><span id="line9044"><span>				else {
</span></span><span id="line9045"><span>					msg += trainerNameOpt + " is better for ";
</span></span><span id="line9046"><span>					if(trainerRanks0 == 0 &amp;&amp; trainerRanks1 == 0) {
</span></span><span id="line9047"><span>						msg += "at least ";
</span></span><span id="line9048"><span>					}
</span></span><span id="line9049"><span>					msg += trainerRanksOpt + " ranks.\n";
</span></span><span id="line9050"><span>				}
</span></span><span id="line9051"><span>				
</span></span><span id="line9052"><span>				if(trainerRanks0 != 0 || trainerRanks1 != 0) {
</span></span><span id="line9053"><span>					msg += "After this point, the optimal training for the remaining " + (rankEnd - trainerRanksOpt) + " ranks is:\n";
</span></span><span id="line9054"><span>				}
</span></span><span id="line9055"><span>			}
</span></span><span id="line9056"><span>			
</span></span><span id="line9057"><span>			if(trainerRanks0 != 0 || trainerRanks1 != 0) {
</span></span><span id="line9058"><span>				if(trainerName0 == "SR") {
</span></span><span id="line9059"><span>					msg += Round(trainerRanks0 * 0.6) + " Swengus\n";
</span></span><span id="line9060"><span>					msg += Round(trainerRanks0 * 0.4) + " Regia\n";
</span></span><span id="line9061"><span>				}
</span></span><span id="line9062"><span>				else if(trainerName0 == "DS") {
</span></span><span id="line9063"><span>					msg += Round(trainerRanks0 * 0.642857) + " Darktur\n";
</span></span><span id="line9064"><span>					msg += Round(trainerRanks0 * 0.357143) + " Swengus\n";
</span></span><span id="line9065"><span>				}
</span></span><span id="line9066"><span>				else if(trainerName0 == "DB") {
</span></span><span id="line9067"><span>					msg += Round(trainerRanks0 * 0.753693) + " Darktur\n";
</span></span><span id="line9068"><span>					msg += Round(trainerRanks0 * 0.246307) + " Balthus\n";
</span></span><span id="line9069"><span>				}
</span></span><span id="line9070"><span>				else {
</span></span><span id="line9071"><span>					msg += trainerRanks0 + " " + trainerName0 + "\n";
</span></span><span id="line9072"><span>				}
</span></span><span id="line9073"><span>				
</span></span><span id="line9074"><span>				if(trainerName1 == "SR") {
</span></span><span id="line9075"><span>					msg += Round(trainerRanks1 * 0.6) + " Swengus\n";
</span></span><span id="line9076"><span>					msg += Round(trainerRanks1 * 0.4) + " Regia\n";
</span></span><span id="line9077"><span>				}
</span></span><span id="line9078"><span>				else if(trainerName1 == "DS") {
</span></span><span id="line9079"><span>					msg += Round(trainerRanks1 * 0.642857) + " Darktur\n";
</span></span><span id="line9080"><span>					msg += Round(trainerRanks1 * 0.357143) + " Swengus\n";
</span></span><span id="line9081"><span>				}
</span></span><span id="line9082"><span>				else if(trainerName1 == "DB") {
</span></span><span id="line9083"><span>					msg += Round(trainerRanks1 * 0.753693) + " Darktur\n";
</span></span><span id="line9084"><span>					msg += Round(trainerRanks1 * 0.246307) + " Balthus\n";
</span></span><span id="line9085"><span>				}
</span></span><span id="line9086"><span>				else {
</span></span><span id="line9087"><span>					msg += trainerRanks1 + " " + trainerName1 + "\n";
</span></span><span id="line9088"><span>				}
</span></span><span id="line9089"><span>			}
</span></span><span id="line9090"><span>		}
</span></span><span id="line9091"><span>		data.OptimalDPSText.value = msg;
</span></span><span id="line9092"><span>
</span></span><span id="line9093"><span>		graphXLabel = "Ranks Spent";
</span></span><span id="line9094"><span>		graphYLabel = "DPS Rating";
</span></span><span id="line9095"><span>	}
</span></span><span id="line9096"><span>	
</span></span><span id="line9097"><span>	plotDPS();
</span></span><span id="line9098"><span>}
</span></span><span id="line9099"><span>
</span></span><span id="line9100"><span>
</span></span><span id="line9101"><span>
</span></span><span id="line9102"><span>
</span></span><span id="line9103"><span>var canvasWidth = 735;
</span></span><span id="line9104"><span>var canvasXOffset = 65;
</span></span><span id="line9105"><span>var canvasHeight = 400;
</span></span><span id="line9106"><span>var canvasYOffset = 200;
</span></span><span id="line9107"><span>function plotDPS()
</span></span><span id="line9108"><span>{
</span></span><span id="line9109"><span>	var data = document.getElementById("data");
</span></span><span id="line9110"><span>
</span></span><span id="line9111"><span>	jg.clear();
</span></span><span id="line9112"><span>	jg.setStroke(1);
</span></span><span id="line9113"><span>	
</span></span><span id="line9114"><span>	var FPS = parseFloat(data.FPS.value);
</span></span><span id="line9115"><span>	if(!FPS || FPS </span><span>&lt; </span><span>1) FPS = 1;
</span></span><span id="line9116"><span>	
</span></span><span id="line9117"><span>	var w = 1;
</span></span><span id="line9118"><span>	var h = 1;
</span></span><span id="line9119"><span>	
</span></span><span id="line9120"><span>	if(GraphTab == 0) {
</span></span><span id="line9121"><span>		// DPS
</span></span><span id="line9122"><span>		w = parseFloat(data.GraphTime.value);
</span></span><span id="line9123"><span>		if(!w || w </span><span>&lt; </span><span>0) w = 1;
</span></span><span id="line9124"><span>		h = parseFloat(data.GraphDamage.value);
</span></span><span id="line9125"><span>		if(!h || h </span><span>&lt; </span><span>0) h = 1;
</span></span><span id="line9126"><span>		h = h * 111;
</span></span><span id="line9127"><span>	}
</span></span><span id="line9128"><span>	else if(GraphTab == 1) {
</span></span><span id="line9129"><span>		// Darkus vs Regia
</span></span><span id="line9130"><span>		w = parseFloat(data.GraphXScale1.value);
</span></span><span id="line9131"><span>		if(!w || w </span><span>&lt; </span><span>0) w = 1;
</span></span><span id="line9132"><span>		h = parseFloat(data.GraphYScale1.value);
</span></span><span id="line9133"><span>		if(!h || h </span><span>&lt; </span><span>0) h = 1;
</span></span><span id="line9134"><span>		h = h * 111;
</span></span><span id="line9135"><span>	}
</span></span><span id="line9136"><span>	
</span></span><span id="line9137"><span>	// Draw grid lines
</span></span><span id="line9138"><span>	jg.setColor("#AAAAAA");
</span></span><span id="line9139"><span>	var secondsInc = Math.ceil(w / 25);
</span></span><span id="line9140"><span>	for(var seconds=secondsInc; seconds </span><span>&lt; </span><span>w; seconds += secondsInc) {
</span></span><span id="line9141"><span>		var thisX = seconds;
</span></span><span id="line9142"><span>		thisX = Math.round(canvasWidth*(thisX / w));
</span></span><span id="line9143"><span>		
</span></span><span id="line9144"><span>		jg.drawLine(thisX+canvasXOffset,-canvasYOffset,thisX+canvasXOffset,canvasYOffset);
</span></span><span id="line9145"><span>	}
</span></span><span id="line9146"><span>	for(var yTick=1; yTick</span><span>&lt;1</span><span>0; yTick++) {
</span></span><span id="line9147"><span>		var thisY = yTick * canvasHeight / 10;
</span></span><span id="line9148"><span>		thisY = canvasYOffset - thisY;
</span></span><span id="line9149"><span>		
</span></span><span id="line9150"><span>		jg.drawLine(-1+canvasXOffset,thisY,canvasWidth+canvasXOffset,thisY);
</span></span><span id="line9151"><span>	}
</span></span><span id="line9152"><span>	
</span></span><span id="line9153"><span>	// Labels
</span></span><span id="line9154"><span>	jg.setFont("arial","10px",Font.PLAIN);
</span></span><span id="line9155"><span>	jg.setColor("#000000");
</span></span><span id="line9156"><span>	secondsInc = Math.ceil(w / 25);
</span></span><span id="line9157"><span>	for(var seconds=secondsInc; seconds </span><span>&lt;=</span><span> w; seconds += secondsInc) {
</span></span><span id="line9158"><span>		var thisX = seconds;
</span></span><span id="line9159"><span>		thisX = Math.round(canvasWidth*(thisX / w));
</span></span><span id="line9160"><span>		
</span></span><span id="line9161"><span>		jg.drawStringRect(seconds, thisX-40+canvasXOffset, canvasYOffset+2, 80, "center");
</span></span><span id="line9162"><span>	}
</span></span><span id="line9163"><span>	for(var yTick=1; yTick</span><span>&lt;=</span><span>10; yTick++) {
</span></span><span id="line9164"><span>		var thisY = yTick * canvasHeight / 10;
</span></span><span id="line9165"><span>		thisY = canvasYOffset - thisY;
</span></span><span id="line9166"><span>		
</span></span><span id="line9167"><span>		var dmg = (yTick * h / 10) / 111;
</span></span><span id="line9168"><span>		dmg = Math.round(dmg * 10) / 10;
</span></span><span id="line9169"><span>		
</span></span><span id="line9170"><span>		jg.drawStringRect(dmg, -100+canvasXOffset, thisY-6, 97, "right");
</span></span><span id="line9171"><span>	}
</span></span><span id="line9172"><span>	
</span></span><span id="line9173"><span>	// Plot
</span></span><span id="line9174"><span>	for(var i=0; i</span><span>&lt;d</span><span>psPoints.length; i++) {
</span></span><span id="line9175"><span>		if(dpsPoints[i][0] == -1)
</span></span><span id="line9176"><span>			break;
</span></span><span id="line9177"><span>		if(dpsPoints[i][1] == -1)
</span></span><span id="line9178"><span>			continue;
</span></span><span id="line9179"><span>		
</span></span><span id="line9180"><span>		jg.setColor(dpsPoints[i][0]);
</span></span><span id="line9181"><span>		var lastX = Math.round(canvasWidth*(dpsPoints[i][1] / w));
</span></span><span id="line9182"><span>		var lastY = canvasYOffset - Math.round(canvasHeight*(dpsPoints[i][2] / h));
</span></span><span id="line9183"><span>		var offchart = false;
</span></span><span id="line9184"><span>		for(var ii=3; ii</span><span>&lt;d</span><span>psPoints[i].length; ii++) {
</span></span><span id="line9185"><span>			if(dpsPoints[i][ii] == -1)
</span></span><span id="line9186"><span>				break;
</span></span><span id="line9187"><span>			var thisX = dpsPoints[i][ii];
</span></span><span id="line9188"><span>			var thisY = dpsPoints[i][ii+1];
</span></span><span id="line9189"><span>	  
</span></span><span id="line9190"><span>			thisX = Math.round(canvasWidth*(thisX / w));
</span></span><span id="line9191"><span>			thisY = canvasYOffset - Math.round(canvasHeight*(thisY / h));
</span></span><span id="line9192"><span>			
</span></span><span id="line9193"><span>			if(thisY &gt; -canvasYOffset) {
</span></span><span id="line9194"><span>				jg.drawLine(lastX+canvasXOffset,lastY,thisX+canvasXOffset,thisY);
</span></span><span id="line9195"><span>			}
</span></span><span id="line9196"><span>			else {
</span></span><span id="line9197"><span>				if(lastY &gt; -canvasYOffset) {
</span></span><span id="line9198"><span>					var cutX = (thisX - lastX) * (-canvasYOffset - lastY) / (thisY - lastY);
</span></span><span id="line9199"><span>					jg.drawLine(lastX+canvasXOffset,lastY,lastX+cutX+canvasXOffset,-canvasYOffset);
</span></span><span id="line9200"><span>				}
</span></span><span id="line9201"><span>				
</span></span><span id="line9202"><span>				offchart = true;
</span></span><span id="line9203"><span>				break;
</span></span><span id="line9204"><span>			}
</span></span><span id="line9205"><span>			
</span></span><span id="line9206"><span>			lastX = thisX;
</span></span><span id="line9207"><span>			lastY = thisY;
</span></span><span id="line9208"><span>	  
</span></span><span id="line9209"><span>			ii++;
</span></span><span id="line9210"><span>		}
</span></span><span id="line9211"><span>	
</span></span><span id="line9212"><span>		if(!offchart &amp;&amp; lastX </span><span>&lt; </span><span>canvasWidth)
</span></span><span id="line9213"><span>			jg.drawLine(lastX+canvasXOffset,lastY,canvasWidth+canvasXOffset,lastY);
</span></span><span id="line9214"><span>	}
</span></span><span id="line9215"><span>
</span></span><span id="line9216"><span>	jg.setStroke(2);
</span></span><span id="line9217"><span>	jg.setColor("#000000");
</span></span><span id="line9218"><span>	jg.drawRect(-2+canvasXOffset,-canvasYOffset,canvasWidth+2,canvasHeight);
</span></span><span id="line9219"><span>
</span></span><span id="line9220"><span>	jg.setFont("arial","12px",Font.BOLD);
</span></span><span id="line9221"><span>	jg.drawStringRect(graphXLabel, -2+canvasXOffset, canvasYOffset+14, canvasWidth+2, "center");
</span></span><span id="line9222"><span>	jg.drawStringRect(graphYLabel, -15, -20, 55, "center");
</span></span><span id="line9223"><span>
</span></span><span id="line9224"><span>	jg.paint();
</span></span><span id="line9225"><span>}
</span></span><span id="line9226"><span>
</span></span><span id="line9227"><span>var jg = new jsGraphics("dpsGraph");
</span></span><span id="line9228"><span>//--&gt;
</span></span><span id="line9229"><span></span><span>&lt;/<span class="end-tag">script</span>&gt;</span><span>
</span></span><span id="line9230"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line9231"><span>
</span></span><span id="line9232"><span>
</span></span><span id="line9233"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">width:25px; background-image:url('images/fighter_wall_r.png'); background-repeat:repeat-y; background-position:left top;</a>"&gt;</span><span>
</span></span><span id="line9234"><span>
</span></span><span id="line9235"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line9236"><span></span><span>&lt;<span class="start-tag">tr</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">width:25px; height:39px; background-image:url('images/fighter_wall_bl.png'); background-repeat:no-repeat; background-position:right top;</a>"&gt;</span><span>
</span></span><span id="line9237"><span>
</span></span><span id="line9238"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">height:39px; background-image:url('images/fighter_wall_b.png'); background-repeat:repeat-x; background-position:left top;</a>"&gt;</span><span>
</span></span><span id="line9239"><span>
</span></span><span id="line9240"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;<span class="start-tag">td</span> <span class="attribute-name">style</span>="<a class="attribute-value">width:25px; height:39px; background-image:url('images/fighter_wall_br.png'); background-repeat:no-repeat; background-position:left top;</a>"&gt;</span><span>
</span></span><span id="line9241"><span>
</span></span><span id="line9242"><span></span><span>&lt;/<span class="end-tag">td</span>&gt;</span><span></span><span>&lt;/<span class="end-tag">tr</span>&gt;</span><span>
</span></span><span id="line9243"><span></span><span>&lt;/<span class="end-tag">table</span>&gt;</span><span>
</span></span><span id="line9244"><span>
</span></span><span id="line9245"><span></span><span>&lt;/<span class="end-tag">form</span>&gt;</span><span>
</span></span><span id="line9246"><span>
</span></span><span id="line9247"><span></span><span>&lt;<span class="start-tag">script</span> <span class="attribute-name">language</span>="<a class="attribute-value">JavaScript</a>" <span class="attribute-name">type</span>="<a class="attribute-value">text/javascript</a>" <span class="attribute-name">src</span>="<a class="attribute-value" href="view-source:http://gorvin.50webs.com/CLRev/wz_tooltip.js">wz_tooltip.js</a>"&gt;</span><span></span><span>&lt;/<span class="end-tag">script</span>&gt;</span><span>
</span></span><span id="line9248"><span>
</span></span><span id="line9249"><span></span><span>&lt;/<span class="end-tag">body</span>&gt;</span><span>
</span></span><span id="line9250"><span></span><span>&lt;/<span class="end-tag">html</span>&gt;</span><span>
</span></span><span id="line9251"><span></span></span></body></html>
"??"  "/help "    @text "\r"
"aa"  "/action "  @text "\r"
"gg"  "/give "    @text "\r"
"ii"  "/info "    @text "\r"
"kk"  "/karma "   @text "\r"
"mm"  "/money "   @text "\r"
"nn"  "/news "    @text "\r"
"pp"  "/ponder "  @text "\r"
"sh"  "/share "   @text "\r"
"sl"  "/sleep "   @text "\r"
"t"   "/think "   @text "\r"
"tt"  "/thinkto " @text "\r"
"th"  "/thank "   @text "\r"
"uu"  "/use "     @text "\r"
"un"  "/unshare " @text "\r"
"wh"   "/who "     @text "\r"
"ww"  "/whisper " @text "\r"
"yy"  "/yell "    @text "\r"

"/at"
{
label top
set yestrade @env.textLog
set yesman @env.textLog.word[7]
	if yestrade >= "\BUY"
message "1 " yesman ""
		"/buy 0 " yesman " \r"
end if
goto top
}

"/tw"
{
label blackwatch
set winter @env.textLog
	if winter >= "rent one now"
		"/whisper yes \r"
end if
	if winter >= "understand more of"
		"/whisper yes \r"
end if
goto blackwatch
}

"/tr"
{
label top
pause 1
set trainer @env.textLog.word[2]
set trainerphrase @env.textLog
if trainerphrase < "You have much to learn."
"/ponder " @env.textLog.word[2] ": 0-9.\r"
end if
if trainerphrase < "It is good to see you."
"/ponder " @env.textLog.word[2] ": 10-19.\r"
end if
if trainerphrase < "Your persistence is paying off."
"/ponder " @env.textLog.word[2] ": 20-29.\r"
end if
if trainerphrase < "You are progressing well."
"/ponder " @env.textLog.word[2] ": 30-39.\r"
end if
if trainerphrase < "You are a good pupil of mine."
"/ponder " @env.textLog.word[2] ": 40-49.\r"
end if
if trainerphrase < "You are one of my better pupils."
"/ponder " @env.textLog.word[2] ": 50-99.\r"
end if
if trainerphrase < "You keep me on my toes."
"/ponder " @env.textLog.word[2] ": 100-149.\r"
end if
if trainerphrase < "It is hard to find more to teach you."
"/ponder " @env.textLog.word[2] ": 150-199.\r"
end if
if trainerphrase < "Teaching you is a challenge."
"/ponder " @env.textLog.word[2] ": 200-249.\r"
end if
if trainerphrase < "There is not much more I can teach you."
"/ponder " @env.textLog.word[2] ": 250-299.\r"
end if
if trainerphrase < "Teaching you has taught me much."
"/ponder " @env.textLog.word[2] ": 300-349.\r"
end if
if trainerphrase < "You have attained tremendous skill."
"/ponder " @env.textLog.word[2] ": 350-399.\r"
end if
if trainerphrase < "We are nearly equals."
"/ponder " @env.textLog.word[2] ": 400-449.\r"
end if
if trainerphrase < "You may be proud of your accomplishment."
"/ponder " @env.textLog.word[2] ": 450-499.\r"
end if
if trainerphrase < "You are becoming a master of our art."
"/ponder " @env.textLog.word[2] ": 500-549.\r"
end if
if trainerphrase < "Your dedication is commendable."
"/ponder " @env.textLog.word[2] ": 550-599.\r"
end if
if trainerphrase < "You show great devotion to your studies."
"/ponder " @env.textLog.word[2] ": 600-649.\r"
end if
if trainerphrase < "You are a credit to our craft."
"/ponder " @env.textLog.word[2] ": 650-699.\r"
end if
if trainerphrase < "Few indeed are your peers."
"/ponder " @env.textLog.word[2] ": 700-749.\r"
end if
if trainerphrase < "Your devotion to the craft is exemplary."
"/ponder " @env.textLog.word[2] ": 750-799.\r"
end if
if trainerphrase < "It is always good to greet a respected colleague."
"/ponder " @env.textLog.word[2] ": 800-899.\r"
end if
if trainerphrase < "You are truly a grand master."
"/ponder " @env.textLog.word[2] ": 900-999.\r"
end if
if trainerphrase < "Let us search for more we might learn together."
"/ponder " @env.textLog.word[2] ": 1000-1249.\r"
end if
if trainerphrase < "Your persistence is an example to us all."
"/ponder " @env.textLog.word[2] ": 1250-1499.\r"
end if
if trainerphrase < "Your skill astounds me."
"/ponder " @env.textLog.word[2] ": 1500-1749.\r"
end if
if trainerphrase < "You have progressed further than most."
"/ponder " @env.textLog.word[2] ": 1750-1999.\r"
end if
if trainerphrase < "You are nearly peerless."
"/ponder " @env.textLog.word[2] ": 2000–2249.\r"
end if
if trainerphrase < "You are a model of dedication."
"/ponder " @env.textLog.word[2] ": 2250–2499.\r"
end if
if trainerphrase < "You have achieved mastery."
"/ponder " @env.textLog.word[2] ": 2500–2749.\r"
end if
if trainerphrase < "You are enlightened."
"/ponder " @env.textLog.word[2] ": 2750–2999.\r"
end if
if trainerphrase < "Your command of our craft is inspiring."
"/ponder " @env.textLog.word[2] ": 3000–3249.\r"
end if
if trainerphrase < "All commend your dedication to our craft."
"/ponder " @env.textLog.word[2] ": 3250–3499.\r"
end if
if trainerphrase < "I marvel at your skill."
"/ponder " @env.textLog.word[2] ": 3500–3749.\r"
end if
if trainerphrase < "You walk where few have tread."
"/ponder " @env.textLog.word[2] ": 3750–3999.\r"
end if
if trainerphrase < "Few stones are unturned in your path."
"/ponder " @env.textLog.word[2] ": 4000–4249.\r"
end if
if trainerphrase < "You are nearly peerless."
"/ponder " @env.textLog.word[2] ": 4250–4499.\r"
end if
if trainerphrase < "You chart a way through the unknown."
"/ponder " @env.textLog.word[2] ": 4500–4749.\r"
end if
if trainerphrase < "Your path illuminates the wilderness."
"/ponder " @env.textLog.word[2] ": 4750–4999.\r"
end if
if trainerphrase < "Your skill casts a long shadow."
"/ponder " @env.textLog.word[2] ": 5000+.\r"
end if
if trainerphrase < "Your path is ablaze with glory."
"/ponder " @env.textLog.word[2] ": 6000+.\r"
end if
if trainerphrase < "You are enlightened beyond measure."
"/ponder " @env.textLog.word[2] ": 7000+.\r"
end if
if trainerphrase < "There is nothing I can teach you."
"/ponder " @env.textLog.word[2] ": MAXED.\r"
end if
goto top
}

shift-click2
{
"/share " @clicksplayer " \r"
}

"/sll"
{
"/pos lie\r"
label mid
set @env.click_interrupts true
pause 450
"/money \r"
"/use\r"
pause 4
"/pose lie\r"
goto mid
}

"/ka"
{
label top
pause 400
"/money \r"
goto top
}

"/ta"
{
set textlog @env.textLog
if textlog < "Use \SLEEP again when you return."
call afk
end if
}

afk
{
set @env.click_interrupts true
set name @env.textLog.word[2]
set textlog @env.textLog
label top
if textlog < "thinks to you"
"/thinkto " name " Sorry, no one's home right now.\r"
end if
goto top
}

"/coin"
{
label top
set @env.click_interrupts true
random
{
pause 3
"/move south WALK\r"
pause 2
"/move stop\r"
or
"/move east WALK\r"
pause 2
"/move stop\r"
or
"/move north WALK\r"
pause 2
"/move stop\r"
or
"/move west WALK\r"
pause 2
"/move stop\r"
or
"/move south WALK\r"
pause 2
"/move stop\r"
or
"/move NORTHEAST WALK\r"
pause 2
"/move stop\r"
or
"/move SOUTHEAST WALK\r"
pause 2
"/move stop\r"
or
"/move SOUTHWEST WALK\r"
pause 2
"/move stop\r"
or
"/move NORTHWEST WALK\r"
pause 2
"/move stop\r"
end random
}
goto top
}

setglobal timestamps 0

is_timestamps
{
message ""
pause 1
//must pause for @env.TextLog to catch the messages sent earlier
if @env.TextLog.word[0].letter[0] >= 0
//message "       yes timestamps"
setglobal timestamps 2
else
//message "       no timestamps"
setglobal timestamps 0
end if
}


"/waver"
{
call wavme
}

waving
{
set waver @env.textLog
if waver < "waves)"
"/action waves \r"
message waver.word[messageStart]
end if
pause 8
call wavme
}

wavme
{
label top
set waver @env.textLog
set name "(Magnic"
if waver < name
goto top
else
pause 2
call waving
end if
}

// Global initializations. (Do NOT change)
set gCW_on 0
set gCW_init 0
set gCW_stamps 0
set gCW_types 0
set gCW_skinners 0

// Default settings. Change these if you want.
set gCW_divider "* ----------------- *" // Message marking the beginning and ending of data displays.
set gCW_time_unit "H" // Time unit average coin data is displayed in when /cwdata is used. "H" for per hour, "M" for per minute, "S" for per second.
set gCW_beast_verbose 1 // Verbose beast data mode. If set to 1, /cwbeast will display longer data messages on each monster. If 0, shorter.
set gCW_skinner_verbose 1 // Verbose skinner data mode. If set to 1, /cwinfo will display longer data messages on each skinner. If 0, shorter.
set gCW_main_verbose 1 // If set to 1, data will be reported to you after each skin made. If you turn this off, the macro will be more likely to fail to pick up messages.

// /cw - Starts or stops Coin Lord, which collects data on furs skinned.
"/cw"
{
if @text.letter[0] == "?"
  message gCW_divider
  message "   /cw - Starts or stops Coin Lord, which collects data on furs skinned."
  message "   /cwnew - Resets Coin Lord's data."
  message "   /cwdata - Displays data on coins earned."
  message "   /cwinfo <skinner name> - Displays data on specified skinner. Partial names are accepted, but are case-sensitive. If no name is specified, data on all skinners is displayed."
  message "   /cwbeast <monster name> - Displays data on specified monster. Partial names are accepted, but are case-sensitive. If no name is specified, data on all beasts is displayed."
  message "   /cwmsg <skinning message> - If the macro fails to pick up a skinning message, copy and paste it (without the timestamp) to this command to have it repeated."
  message "   /<command> ? - Gives more detailed help for that command."
  message gCW_divider
else if gCW_on == 0
  setglobal gCW_on 1
  if gCW_init == 0
    message "* Coin Lord has been activated. Use \"/cw ?\" for list of commands."
  else
    message "* Coin Lord is resuming."
  end if
  if gCW_init == 0
    call "fCW_init"
  else if gCW_stamps != 0

    set inCW_time @env.textLog.word[1]
    call "fCW_get_time"
    setglobal gCW_start outCW_time
  end if
  call "fCW_main"
else
  setglobal gCW_on 0
  message "* Coin Lord is pausing."
  if gCW_stamps != 0
    setglobal gCW_stop_msg @env.textLog.word[1]
    set inCW_time @env.textLog.word[1]
    call "fCW_get_time"
    setglobal gCW_stop outCW_time
    set cw_seconds outCW_time
    set cw_seconds - gCW_start
    if cw_seconds < 0
      set cw_seconds + 86400
    end if
    setglobal gCW_time + cw_seconds
  end if
end if
}

// /cwnew - Resets Coin Lord's data.
"/cwnew"
{
if @text.letter[0] == "?"
  message "   /cwnew - Resets Coin Lord's data."
else
  call "fCW_init"
  if gCW_on == 0
    setglobal gCW_on 1
    message "* Coin Lord has been activated. Use \"/cw ?\" for list of commands."
    call "fCW_main"
  end if
end if
}

// /cwdata - Displays data on coins earned.
// /cwdata <H/M/S> - Changes whether data will be displayed in average coins earned per
//    hour, minute, or second.
"/cwdata"
{
message gCW_divider
if @text.letter[0] == "?"
  message "   /cwdata - Displays data on coins earned."
  message "   /cwdata <H/M/S> - Changes whether data will be displayed in average coins earned per hour, minute, or second."
else if gCW_init == 1
  if @text.letter[0] == "h"
    setglobal gCW_time_unit "H"
  else if @text.letter[0] == "m"
    setglobal gCW_time_unit "M"
  else if @text.letter[0] == "s"
    setglobal gCW_time_unit "S"
  end if
  call "fCW_report"
else
  message "* Coin Lord has not been started yet. Use /cw to start."
end if
message gCW_divider
}

// /cwinfo - Displays data on all skinners you've been hunting with since macro started.
// /cwinfo <skinner name> - Displays data on specified skinner. Partial names are accepted, but are case-sensitive.
// /cwinfo /format - Toggles data format: verbose or short.
"/cwinfo"
{
message gCW_divider
if @text.word[0] == "/format"
  if gCW_skinner_verbose == 0
    setglobal gCW_skinner_verbose 1
    message "* Skinner data will now be displayed in verbose format."
  else
    setglobal gCW_skinner_verbose 0
    message "* Skinner data will now be displayed in shorter format."
  end if
else if @text.letter[0] == "?"
  message "   /cwinfo - Displays data on all skinners you've been hunting with since macro started."
  message "   /cwinfo <skinner name> - Displays data on specified skinner. Partial names are accepted, but are case-sensitive."
  message "   /cwinfo /format - Toggles data format: verbose or short."
else
  set inCW_index 0
  label CWDATAP
    if inCW_index <= gCW_skinners
      if @text != ""
        if gCW_who[inCW_index] >= @text
        else if inCW_index == 0
          if @my.name >= @text
          else
            set inCW_index + 1
            goto "CWDATAP"
          end if
        else
          set inCW_index + 1
          goto "CWDATAP"
        end if
      end if
      message "---------"
      call "fCW_skinner_data"
      set inCW_index + 1
      goto "CWDATAP"
    end if
    message "---------"
end if
message gCW_divider
}

// /cwbeast - Displays data on all beasts skinned since macro started.
// /cwbeast <monster name> - Displays data on specified monster. Partial names are accepted, but are case-sensitive.
// /cwbeast /format - Toggles data format: verbose or short.
"/cwbeast"
{
message gCW_divider
if @text.word[0] == "/format"
  if gCW_beast_verbose == 0
    setglobal gCW_beast_verbose 1
    message "* Beast data will now be displayed in verbose format."
  else
    setglobal gCW_beast_verbose 0
    message "* Beast data will now be displayed in shorter format."
  end if
else if @text.letter[0] == "?"
  message "   /cwbeast - Displays data on all beasts skinned since macro started."
  message "   /cwbeast <monster name> - Displays data on specified monster. Partial names are accepted, but are case-sensitive."
  message "   /cwbeast /format - Toggles data format: verbose or short."
else
  set inCW_index 1
  label CWDATABE
    if inCW_index <= gCW_types
      if gCW_name[inCW_index] == @text
      else
        set inCW_index + 1
        goto "CWDATABE"
      end if
      message "---------"
      call "fCW_beast_data"
      set inCW_index + 1
      goto "CWDATABOUT"
    end if
  set inCW_index 1
  label CWDATAB
    if inCW_index <= gCW_types
      if @text != ""
        if gCW_name[inCW_index] >= @text
        else
          set inCW_index + 1
          goto "CWDATAB"
        end if
      end if
      message "---------"
      call "fCW_beast_data"
      set inCW_index + 1
      goto "CWDATAB"
    end if
  label CWDATABOUT
  message "---------"
end if
message gCW_divider
}

"/cwmsg"
{
if @text == "?"
  message "   /cwmsg <skinning message> - If the macro fails to pick up a skinning message, copy and paste it (without the timestamp) to this command to have it repeated."
else
  message @text
end if
}



fCW_init
{
message "* New data started."

setglobal gCW_init 1
if @env.textLog.word[0] >= 0
  setglobal gCW_stamps 2
  setglobal gCW_start_msg @env.textLog.word[1]
  set inCW_time @env.textLog.word[1]
  call "fCW_get_time"
  setglobal gCW_start outCW_time
else
  setglobal gCW_stamps 0
  message "* Time stamps appear to be off. Coin Lord will still work, but will not be able to tell you average coins earned per hour. If you wish to have access to this data, please turn time stamps on and then use /cwnew to reset the macro."
end if
setglobal gCW_time 0
setglobal gCW_stop 0
setglobal gCW_stop_msg ""
setglobal gCW_types 0
setglobal gCW_skinners 0
setglobal gCW_high_what ""
setglobal gCW_temp 0
set inCW_beast ""
call "fCW_init_beast"
setglobal gCW_temp 0
set inCW_person "You"
call "fCW_init_skinner"
}

fCW_main
{
label CWMAIN
pause 1
if gCW_on == 1
  set cw_msg @env.textLog
  if cw_msg.word[gCW_stamps] == "*"
    if cw_msg >= "recover the"
    else if cw_msg >= "recovers the"
    else
      goto "CWMAIN"
    end if
    if cw_msg >= "fur, worth"
      label CWGOT
      set inCW_index gCW_stamps
      set cw_name ""
      label CWNAME
        set inCW_index + 1
        if cw_msg.word[inCW_index] >= "recover"
          set inCW_index + 2
          set inCW_msg cw_msg
          call "fCW_msg"
          setglobal gCW_killed[0] + 1
          setglobal gCW_generated[0] + outCW_generated
          setglobal gCW_earned[0] + outCW_earned
          if outCW_generated > gCW_high[0]
            setglobal gCW_high[0] outCW_generated
            setglobal gCW_high_who[0] cw_name
            setglobal gCW_high_what outCW_beast
          end if
          set inCW_person cw_name
          call "fCW_find_skinner"
          setglobal gCW_temp outCW_index
          if outCW_index > gCW_skinners
            setglobal gCW_skinners + 1
            call "fCW_init_skinner"
          end if
          setglobal gCW_skins[gCW_temp] + 1
          setglobal gCW_made[gCW_temp] + outCW_generated
          setglobal gCW_given[gCW_temp] + outCW_earned
          if outCW_generated > gCW_highest[gCW_temp]
            setglobal gCW_highest[gCW_temp] outCW_generated
            setglobal gCW_what[gCW_temp] outCW_beast
          end if
          set inCW_beast outCW_beast
          call "fCW_find_beast"
          setglobal gCW_temp outCW_index
          if outCW_index > gCW_types
            setglobal gCW_types + 1
            call "fCW_init_beast"
          end if
          setglobal gCW_killed[gCW_temp] + 1
          setglobal gCW_generated[gCW_temp] + outCW_generated
          setglobal gCW_earned[gCW_temp] + outCW_earned
          if cw_name == "You"
            setglobal gCW_killed_self[gCW_temp] + 1
            setglobal gCW_self_gen[gCW_temp] + outCW_generated
            if outCW_generated > gCW_high_self[gCW_temp]
              setglobal gCW_high_self[gCW_temp] outCW_generated
            end if
          end if
          if outCW_generated > gCW_high[gCW_temp]
            setglobal gCW_high[gCW_temp] outCW_generated
            setglobal gCW_high_who[gCW_temp] cw_name
          end if
          set inCW_msg "Avg: "
          set inCW_total gCW_generated[gCW_temp]
          set inCW_divisor gCW_killed[gCW_temp]
          set inCW_per 1
          set inCW_fixedpt 100
          call "fCW_average"
          
          set cw_name gCW_name[gCW_temp]
          if cw_name.num_words > 1
            set cw_msg ""
            set inCW_index 0
            label CWABBREV
              if inCW_index < cw_name.num_words
                set inCW_msg cw_name.word[inCW_index]
                set cw_msg + inCW_msg.letter[0]
                set inCW_index + 1
                goto "CWABBREV"
              end if
          else
            set cw_msg cw_name    
          end if

          message cw_msg "- Skins:" gCW_killed[gCW_temp] "Coins:" gCW_generated[gCW_temp] outCW_msg
        else if cw_msg.word[inCW_index] != ""
          if cw_name != ""
            set cw_name + " "
          end if
          set cw_name + cw_msg.word[inCW_index]
          goto "CWNAME"
        end if
    else if cw_msg >= "mandibles, worth"
      goto "CWGOT"
    end if
  end if
  goto "CWMAIN"
end if
}

// gCW_temp
// inCW_beast
fCW_init_beast
{
setglobal gCW_name[gCW_temp] inCW_beast
setglobal gCW_killed[gCW_temp] 0
setglobal gCW_killed_self[gCW_temp] 0
setglobal gCW_generated[gCW_temp] 0
setglobal gCW_self_gen[gCW_temp] 0
setglobal gCW_earned[gCW_temp] 0
setglobal gCW_high[gCW_temp] 0
setglobal gCW_high_who[gCW_temp] ""
setglobal gCW_high_self[gCW_temp] 0
}

// gCW_temp
// inCW_person
fCW_init_skinner
{
setglobal gCW_who[gCW_temp] inCW_person
setglobal gCW_skins[gCW_temp] 0
setglobal gCW_made[gCW_temp] 0
setglobal gCW_given[gCW_temp] 0
setglobal gCW_highest[gCW_temp] 0
setglobal gCW_what[gCW_temp] ""
}

// inCW_beast
// outCW_index
fCW_find_beast
{
set outCW_index 1
label CWFINDB
if outCW_index <= gCW_types
  if inCW_beast != gCW_name[outCW_index]
    set outCW_index + 1
    goto "CWFINDB"
  end if  
end if
}

// inCW_person
// outCW_index
fCW_find_skinner
{
set outCW_index 0
label CWFINDP
if outCW_index <= gCW_skinners
  if inCW_person != gCW_who[outCW_index]
    set outCW_index + 1
    goto "CWFINDP"
  end if
end if
}

// inCW_time
// outCW_time
fCW_get_time
{
set cw_hours inCW_time.letter[0]
if inCW_time.letter[1] != ":"
  set cw_hours 10
  set cw_hours + inCW_time.letter[1]
  if cw_hours == 12
    set cw_hours 0
  end if
  set cw_minutes inCW_time.letter[3]
  set cw_minutes * 10
  set cw_minutes + inCW_time.letter[4]
  set cw_seconds inCW_time.letter[6]
  set cw_seconds * 10
  set cw_seconds + inCW_time.letter[7]
  if inCW_time.letter[8] == "p"
    set cw_hours + 12
  end if
else
  set cw_minutes inCW_time.letter[2]
  set cw_minutes * 10
  set cw_minutes + inCW_time.letter[3]
  set cw_seconds inCW_time.letter[5]
  set cw_seconds * 10
  set cw_seconds + inCW_time.letter[6]
  if inCW_time.letter[7] == "p"
    set cw_hours + 12
  end if
end if
set cw_minutes * 60
set cw_hours * 3600
set outCW_time cw_seconds
set outCW_time + cw_minutes
set outCW_time + cw_hours
}

// inCW_msg
// inCW_index
// outCW_generated
// outCW_earned
// outCW_beast
fCW_msg
{
set outCW_beast ""
label CWMSG
if inCW_msg.word[inCW_index] != "fur,"
  if inCW_msg.word[inCW_index] != "mandibles,"
    if inCW_msg.word[inCW_index] != ""
      if outCW_beast != ""
        set outCW_beast + " "
      end if
      set outCW_beast + inCW_msg.word[inCW_index]
      set inCW_index + 1
      goto "CWMSG"
    end if
  end if
end if
set inCW_index + 2
set outCW_generated 0
set outCW_generated + inCW_msg.word[inCW_index]
set outCW_earned 0
if inCW_msg >= "Your share is"
  set inCW_index + 4
  if inCW_msg.word[inCW_index] >= 0
    if inCW_msg.word[inCW_index] != ""
      set outCW_earned + inCW_msg.word[inCW_index]
    end if
  end if
end if
}

// inCW_index
fCW_beast_data
{
set cw_msg gCW_name[inCW_index]
set cw_msg + ":"
message cw_msg
if gCW_beast_verbose == 1
  set inCW_msg "("
  set inCW_num gCW_killed[inCW_index]
  set inCW_total gCW_killed[0]
  call "fCW_percent"
  set outCW_msg + " of total skins)"
  message "   Number skinned:" gCW_killed[inCW_index] outCW_msg
  set inCW_msg "("
  set inCW_num gCW_killed_self[inCW_index]
  set inCW_total gCW_killed[inCW_index]
  call "fCW_percent"
  set outCW_msg + " of this type)"
  message "   Number skinned by you:" gCW_killed_self[inCW_index] outCW_msg
  set inCW_msg "("
  set inCW_num gCW_generated[inCW_index]
  set inCW_total gCW_generated[0]
  call "fCW_percent"
  set outCW_msg + " of total coins)"
  message "   Coins produced:" gCW_generated[inCW_index] outCW_msg
  set inCW_msg "("
  set inCW_num gCW_earned[inCW_index]
  set inCW_total gCW_earned[0]
  call "fCW_percent"
  set outCW_msg + " of total share)"
  message "   Your share of these coins:" gCW_earned[inCW_index] outCW_msg
  set inCW_msg "("
  set inCW_num gCW_self_gen[inCW_index]
  set inCW_total gCW_generated[inCW_index]
  call "fCW_percent"
  set outCW_msg + " of total from this type)"
  message "   Coins produced from your skins:" gCW_self_gen[inCW_index] outCW_msg
  if gCW_high_who[inCW_index] == "You"
    message "   Best skin:" gCW_high[inCW_index] "coins by" @my.name
  else
    message "   Best skin:" gCW_high[inCW_index] "coins by" gCW_high_who[inCW_index]
    if gCW_high_self[inCW_index] != 0
      message "   Best skin by you:" gCW_high_self[inCW_index] "coins."
    end if
  end if
  set inCW_msg "skin: "
  set inCW_total gCW_generated[inCW_index]
  set inCW_divisor gCW_killed[inCW_index]
  set inCW_per 1
  set inCW_fixedpt 100
  call "fCW_average"
  message "   Average value per" outCW_msg "coins."
else
  set inCW_msg "("
  set inCW_num gCW_killed[inCW_index]
  set inCW_total gCW_killed[0]
  call "fCW_percent"
  set outCW_msg + ")"
  message "   Skins:" gCW_killed_self[inCW_index] "yours," gCW_killed[inCW_index] "group." outCW_msg
  set inCW_msg "("
  set inCW_num gCW_generated[inCW_index]
  set inCW_total gCW_generated[0]
  call "fCW_percent"
  set outCW_msg + ")"
  message "   Coins:" gCW_earned[inCW_index] "earned," gCW_self_gen[inCW_index] "from you," gCW_generated[inCW_index] "from group." outCW_msg
  if gCW_high_who[inCW_index] == "You"
    message "   Best:" gCW_high[inCW_index] "by" @my.name
  else
    if gCW_high_self[inCW_index] != 0
      message "   Best:" gCW_high[inCW_index] "by" gCW_high_who[inCW_index] "-" gCW_high_self[inCW_index] "by you."
    else
      message "   Best:" gCW_high[inCW_index] "by" gCW_high_who[inCW_index]
    end if
  end if
  set inCW_msg "Average: "
  set inCW_total gCW_generated[inCW_index]
  set inCW_divisor gCW_killed[inCW_index]
  set inCW_per 1
  set inCW_fixedpt 100
  call "fCW_average"
  message "  " outCW_msg
end if
}

// inCW_index
fCW_skinner_data
{
if gCW_who[inCW_index] == "You"
  set cw_msg @my.name
else
  set cw_msg gCW_who[inCW_index]
end if
set cw_msg + ":"
message cw_msg
if gCW_skinner_verbose == 1
  set inCW_msg "("
  set inCW_num gCW_skins[inCW_index]
  set inCW_total gCW_killed[0]
  call "fCW_percent"
  set outCW_msg + " of total skins)"
  message "   Furs skinned:" gCW_skins[inCW_index] outCW_msg
  set inCW_msg "("
  set inCW_num gCW_made[inCW_index]
  set inCW_total gCW_generated[0]
  call "fCW_percent"
  set outCW_msg + " of total coins)"
  message "   Coins produced:" gCW_made[inCW_index] outCW_msg
  set inCW_msg "("
  set inCW_num gCW_given[inCW_index]
  set inCW_total gCW_earned[0]
  call "fCW_percent"
  set outCW_msg + " of total share)"
  message "   Your share of those coins:" gCW_given[inCW_index] outCW_msg
  if gCW_what[inCW_index] != ""
    message "   Best skin:" gCW_what[inCW_index] "for" gCW_highest[inCW_index] "coins."
  end if
  set inCW_msg "skin: "
  set inCW_total gCW_made[inCW_index]
  set inCW_divisor gCW_skins[inCW_index]
  set inCW_per 1
  set inCW_fixedpt 100
  call "fCW_average"
  message "   Average value per" outCW_msg "coins."
else
  set inCW_msg "("
  set inCW_num gCW_skins[inCW_index]
  set inCW_total gCW_killed[0]
  call "fCW_percent"
  set outCW_msg + ")"
  message "   Skinned:" gCW_skins[inCW_index] outCW_msg
  set inCW_msg "("
  set inCW_num gCW_made[inCW_index]
  set inCW_total gCW_generated[0]
  call "fCW_percent"
  set outCW_msg + ")"
  message "   Coins:" gCW_given[inCW_index] "yours," gCW_made[inCW_index] "group." outCW_msg
  if gCW_what[inCW_index] != ""
    message "   Best:" gCW_what[inCW_index] "for" gCW_highest[inCW_index]
  end if
  set inCW_msg "Average skin: "
  set inCW_total gCW_made[inCW_index]
  set inCW_divisor gCW_skins[inCW_index]
  set inCW_per 1
  set inCW_fixedpt 100
  call "fCW_average"
  message "  " outCW_msg
end if
}

fCW_report
{
if gCW_stamps != 0
  if gCW_on == 1
    message " Data taken from" gCW_start_msg "to" @env.textLog.word[1]
    set inCW_time @env.textLog.word[1]
    call "fCW_get_time"
    set cw_seconds outCW_time
    set cw_seconds - gCW_start
    if cw_seconds < 0
      set cw_seconds + 86400
    end if
    set inCW_time cw_seconds
    set inCW_time + gCW_time
    set inCW_divisor inCW_time
  else
    message " Data taken from" gCW_start_msg "to" gCW_stop_msg
    set inCW_time gCW_time
    set inCW_divisor gCW_time
  end if

  call "fCW_parse"
  message " Total active time:" outCW_hours "hr" outCW_minutes "min" outCW_seconds "sec."
  
  message " Total skins:" gCW_killed[0]
  if gCW_killed[0] != gCW_skins[0]
    message " Total skinned by you:" gCW_skins[0]
  end if
  
  if gCW_time_unit == "M"
    set cw_msg " per minute"
    set inCW_per 60
    set inCW_fixedpt 100
  else if gCW_time_unit == "S"
    set cw_msg " per second"
    set inCW_per 1
    set inCW_fixedpt 1000
  else
    set cw_msg " per hour"
    set inCW_per 3600
    set inCW_fixedpt 100
  end if
  
  message " Total coins made by group:" gCW_generated[0]
  set inCW_msg " ("
  set inCW_total gCW_generated[0]
  call "fCW_average"
  set outCW_msg + cw_msg
  set outCW_msg + ")"
  message outCW_msg
  
  message " Amount made from your skins:" gCW_made[0]
  set inCW_msg " ("
  set inCW_total gCW_made[0]
  call "fCW_average"
  set outCW_msg + cw_msg
  set outCW_msg + ", "
  set inCW_msg outCW_msg
  set inCW_num gCW_made[0]
  set inCW_total gCW_generated[0]
  call "fCW_percent"
  set outCW_msg + " of total)"
  message outCW_msg
  
  message " Your share of coins earned:" gCW_earned[0]
  set inCW_msg " ("
  set inCW_total gCW_earned[0]
  call "fCW_average"
  set outCW_msg + cw_msg
  set outCW_msg + ", "
  set inCW_msg outCW_msg
  set inCW_num gCW_earned[0]
  set inCW_total gCW_generated[0]
  call "fCW_percent"
  set outCW_msg + " of total)"
  message outCW_msg
  
  if gCW_high_what != ""
    if gCW_high_who[0] == "You"
      message " Best skin:" gCW_high_what "for" gCW_high[0] "coins by" @my.name
    else
      message " Best skin:" gCW_high_what "for" gCW_high[0] "coins by" gCW_high_who[0]
      if gCW_what[0] != ""
        message " Best skin by you:" gCW_what[0] "for" gCW_highest[0] "coins."
      end if
    end if
  end if
  set inCW_msg "skin: "
  set inCW_total gCW_generated[0]
  set inCW_divisor gCW_killed[0]
  set inCW_per 1
  set inCW_fixedpt 100
  call "fCW_average"
  message " Average value per" outCW_msg "coins."
  
else
  message " Total skins:" gCW_killed[0]
  if gCW_killed[0] != gCW_skins[0]
    message " Total skinned by you:" gCW_skins[0]
  end if
  message " Total coins made by group:" gCW_earned[0]
  message " Amount made from your skins:" gCW_generated[0]
  message " Your share of coins earned:" gCW_made[0]
  if gCW_high_what != ""
    if gCW_high_who[0] == "You"
      message " Best skin:" gCW_high_what "for" gCW_high[0] "coins by" @my.name
    else
      message " Best skin:" gCW_high_what "for" gCW_high[0] "coins by" gCW_high_who[0]
      if gCW_what[0] != ""
        message " Best skin by you:" gCW_what[0] "for" gCW_highest[0] "coins."
      end if
    end if
  end if
  set inCW_msg "skin: "
  set inCW_total gCW_generated[0]
  set inCW_divisor gCW_killed[0]
  set inCW_per 1
  set inCW_fixedpt 100
  call "fCW_average"
  message " Average value per" outCW_msg "coins."
end if
}

// inCW_msg
// inCW_num
// inCW_total
// outCW_msg
fCW_percent
{
if inCW_divisor == 0
  set inCW_divisor 1
end if
set inCW_num * 100
set cw_coins inCW_num
set cw_coins / inCW_total
set outCW_msg inCW_msg
set outCW_msg + cw_coins
set outCW_msg + "."
set cw_coins inCW_num
set cw_coins * 10
set cw_coins / inCW_total
set cw_coins % 10
set outCW_msg + cw_coins
set outCW_msg + "%"
}


// inCW_time
// outCW_hours
// outCW_minutes
// outCW_seconds
fCW_parse
{
set outCW_hours inCW_time
set outCW_hours / 3600
set inCW_time % 3600
set outCW_minutes inCW_time
set outCW_minutes / 60
set outCW_seconds inCW_time
set outCW_seconds % 60
}

// inCW_msg
// inCW_total
// inCW_divisor
// inCW_per
// inCW_fixedpt
// outCW_msg
fCW_average
{
if inCW_divisor == 0
  set inCW_divisor 1
end if
set inCW_total * inCW_per
set cw_coins inCW_total
set cw_coins / inCW_divisor
set outCW_msg inCW_msg
set outCW_msg + cw_coins
set cw_coins inCW_total
set cw_coins % inCW_divisor
set cw_coins * inCW_fixedpt
set cw_coins / inCW_divisor
set cw_num inCW_fixedpt
set outCW_msg + "."
label CWAVG
  set cw_num / 10
  if cw_coins < cw_num
    if cw_num > 1
      set outCW_msg + 0
      goto "CWAVG"
    end if
  end if
set outCW_msg + cw_coins
}

// Dynamic Sharecads v1.3.1
//   By Gorvin

// This is an enhanced, less-spammy version of Sharecads. It takes into
// consideration the 3 second delay between shares and does not waste time
// trying to share someone you're already sharing with. If several healers
// are cadding you at once, it will try to maintain shares with the most
// recent 5 who have healed you (or less depending on if any shares are
// locked).  Additionally, this will also result in the macro attempting to
// reshare with any healers that have cadded you very recently (and thus are
// potentially still healing you) if sharing another healer has caused them
// to be unshared.

// Use "/shcads" to turn on or off.



// If the macro appears to be causing you to lag at times, set this variable
// to 1.  Doing so will cause messages to be displayed after each detected
// healing and share list message, but will improve the speed at which the
// macro is able to run.  Keeping this set to 0 should not have any impact
// on most machines.
set gShare_messages 0



set gShare_on 0

set gShare[0] ""
set gShare[1] ""
set gShare[2] ""
set gShare[3] ""
set gShare[4] ""

set gShareCad[0] ""
set gShareCad[1] ""
set gShareCad[2] ""
set gShareCad[3] ""
set gShareCad[4] ""

set gShareIgnore[0] 1
set gShareIgnore[1] 1
set gShareIgnore[2] 1
set gShareIgnore[3] 1
set gShareIgnore[4] 1

set gShare_erase 60

"/shcads"
{
if gShare_on == 1
	setglobal gShare_on 0
else
	setglobal gShare_on 1
	setglobal gShare[0] ""
	setglobal gShare[1] ""
	setglobal gShare[2] ""
	setglobal gShare[3] ""
	setglobal gShare[4] ""
	setglobal gShareCad[0] ""
	setglobal gShareCad[1] ""
	setglobal gShareCad[2] ""
	setglobal gShareCad[3] ""
	setglobal gShareCad[4] ""
	setglobal gShareIgnore[0] 1
	setglobal gShareIgnore[1] 1
	setglobal gShareIgnore[2] 1
	setglobal gShareIgnore[3] 1
	setglobal gShareIgnore[4] 1
	message "* Sharecads is now on."
	if @env.textLog.word[0] > 0
		set share_ts 2
	else
		set share_ts 0
	end if
	set share_init 0
	set share_free 5
	set share_delay 0
	set share_erase 0
	set share_check 0
	set share_type_old 0
	label SHARECADS
		if gShare_on == 1
			set share_word share_ts
			set share_msg @env.textLog
			set share_type 0
			if share_msg.word[share_word] == "You"
				if share_msg >= "You are sharing experiences with"
					set share_word + 5
					// If message printings are disabled and the last message was also a 
					// share message, compare signature of current message with the last.
					if gShare_messages == 0
						set share_type 1
						if share_type_old == 1
							set share_sig_word share_word
							call "fShare_signature"
							if share_same == 0
								call "fShare_update"
							end if
						else
							set share_sig share_msg
							call "fShare_update"
						end if
					else
						call "fShare_update"
					end if
					set share_init 1
				end if
			else if share_msg.word[share_word] >= "You"
				if share_msg >= "You sense healing energy from"
					set share_word + 5
					set share_same 0
					// If message printings are disabled and the last message was also a 
					// healing message, compare signature of current message with the last.
					if gShare_messages == 0
						set share_type 2
						if share_type_old == 2
							set share_sig_word share_word
							call "fShare_signature"
						else
							set share_sig share_msg
						end if
					end if
					if share_same == 0
						call "fShare_get_who"
						set share_ignore 0
						call "fShare_push"
						set share_check 1
						if gShare_messages == 1
							message "Healing detected."
						end if
					end if
				end if
			end if
			set share_type_old share_type
			if share_erase > 0
				set share_erase - 1
				if share_erase == 0
					setglobal gShare_which 0
					label SHAREFLUSH
						if gShare_which < 5
							setglobal gShareCad[gShare_which] ""
							setglobal gShare_which + 1
							goto "SHAREFLUSH"
						end if
				end if
			end if
			if share_delay > 0
				set share_delay - 1
			else if share_check == 1
				call "fShare_check"
				if share_check == 1
					set share_erase gShare_erase
					set share_delay 14
					"/share " share_who "\r"
					setglobal gShare_which 5
					setglobal gShare_which - share_free
					set share_bump share_who
					label SHAREADJ
						if gShare_which < 5
							set share_temp gShare[gShare_which]
							setglobal gShare[gShare_which] share_bump
							set share_bump share_temp
							setglobal gShare_which + 1
							goto "SHAREADJ"
						end if
				end if
			end if
			pause 1
			goto "SHARECADS"
		end if
		message "* Sharecads is now off."
end if
}



// Compares current text log message signature with the last to see if they're the same.
// Args:
//   share_msg - current text log message.
//   share_sig_word - word in text log message that signature begins at.
//   share_sig - previous text log message.
//   share_ts - time stamp offset.
// Returns:
//   share_same - 1 if signatures are the same.
//   share_sig - signature of current message.
fShare_signature
{
set share_same 0
// If time stamps are off, we can directly compare the messages.
if share_ts == 0
	if share_sig == share_msg
		set share_same 1
	end if
else
	label SHARESIGCHECK
		// Loop until we've reached the end of one of the signatures or we've found
		// a difference between them.
		if share_sig.word[share_sig_word] == ""
			if share_msg.word[share_sig_word] == ""
				// We've gone through each word in both signatures, and they're the same.
				set share_same 1
			end if
		else if share_sig.word[share_sig_word] == share_msg.word[share_sig_word]
			set share_sig_word + 1
			goto "SHARESIGCHECK"
		end if
end if
// If the messages were different, we need to copy over the new signature.
if share_same == 0
	set share_sig share_msg
end if
}



// Checks if need to share cadder.
// Returns:
//   share_check - 1 if need to share.
//   share_who - who to share if need to.
fShare_check
{
set share_check 0
setglobal gShare_which share_free
label SHARECHECK
	// Go through as many cadders in list as have non-locked shares.
	if gShare_which > 0
		setglobal gShare_which - 1
		set share_who gShareCad[gShare_which]
		if share_who != ""
			if gShareIgnore[gShare_which] == 0
				set share_shares 0
				// See if already sharing with this cadder.
				label SHARECHECKSH
				if share_shares < 5
					if share_who != gShare[share_shares]
						set share_shares + 1
						goto "SHARECHECKSH"
					// If already sharing with this cadder, do not share.
					end if
				// If not already sharing with this cadder, share.
				else
					set share_check 1
					goto "SHARECHECKOUT"
				end if
			end if
		end if
		goto "SHARECHECK"
	end if
label SHARECHECKOUT
}



// Pushes name into recent cadders list.
// Args:
//   share_new - name to bump
fShare_push
{
setglobal gShare_which 0
set share_lock 5
set share_lock - share_free
// Check if this cadder is already a locked share.
label SHARELOCK
	if gShare_which < share_lock
		// If is locked share, do not add to cadder list.
		if share_new == gShare[gShare_which]
			goto "SHAREPUSHOUT"
		else
			setglobal gShare_which + 1
			goto "SHARELOCK"
		end if
	end if
set share_erase gShare_erase
setglobal gShare_which 0
set share_bump share_new
label SHAREPUSH
	set share_temp gShareCad[gShare_which]
	set share_tempp gShareIgnore[gShare_which]
	setglobal gShareCad[gShare_which] share_bump
	setglobal gShareIgnore[gShare_which] share_ignore
	set share_bump share_temp
	set share_ignore share_tempp
	setglobal gShare_which + 1
	if share_bump == share_new
	else if share_bump == ""
	else if gShare_which < share_free
		goto "SHAREPUSH"
	end if
label SHAREPUSHOUT
setglobal gShare_which share_free
label SHAREREM
	if gShare_which < 5
		setglobal gShareCad[gShare_which] ""
		setglobal gShare_which + 1
		goto "SHAREREM"
	end if
}



// Updates list of current shares.
// Args:
//   share_msg - @env.textLog message to get info from.
//   share_word - word where names begin at.
fShare_update
{
set share_prev[0] gShare[0]
set share_prev[1] gShare[1]
set share_prev[2] gShare[2]
set share_prev[3] gShare[3]
set share_prev[4] gShare[4]
setglobal gShare_who 0
set share_free 5
label SHAREUPDATE
	if share_msg.word[share_word] != ""
		call "fShare_get_who"
		// Check if not expected share.
		if share_lock == 0
			if share_init == 1
				set share_shares 0
				// Check if was already in list.
				label SHAREALREADY
					if share_shares < 5
						if share_prev[share_shares] != ""
							// If was already in list, not unexpected.
							if share_new == share_prev[share_shares]
								goto "SHARECONT"
							else
								set share_shares + 1
								goto "SHAREALREADY"
							end if
						end if
					end if
				// If were not expecting share, bump onto cadders list
				// so it does not accidentally get bumped off.
				set share_delay 14
				set share_ignore 1
				call "fShare_push"
			end if
		end if
		label SHARECONT
		setglobal gShare[gShare_who] share_new
		setglobal gShare_who + 1
		goto "SHAREUPDATE"
	end if
label SHAREERASE
	if gShare_who < 5
		setglobal gShare[gShare_who] ""
		setglobal gShare_who + 1
		goto "SHAREERASE"
	end if
if gShare_messages == 1
	message "Share list updated."
end if
}



// Fetches a name from text string.
// Args:
//   share_msg - @env.textLog message to get info from.
//   share_word - word where name begin at.
// Returns:
//   share_new - new name.
//   share_lock - 1 if from share list and locked.
fShare_get_who
{
set share_lock 0
set share_new ""
label SHAREWHO
	if share_msg.word[share_word] == ""
	else if share_msg.word[share_word] == "and"
		set share_word + 1
		if share_new == ""
			goto "SHAREWHO"
		end if
	else if share_msg.word[share_word] >= "(*)"
		set share_lock 1
		set share_free - 1
		set share_word + 1
	else if share_msg.word[share_word] >= ","
		set share_letters share_msg.word[share_word]
		set share_which 0
		label SHAREL
			set share_letter share_letters.letter[share_which]
			if share_letter == ","
			else if share_letter == "."
			else if share_letter == " "
			else if share_letter == ""
			else
				set share_new + share_letter
				set share_which + 1
				goto "SHAREL"
			end if
		set share_word + 1
	else if share_msg.word[share_word] >= "."
		set share_letters share_msg.word[share_word]
		set share_which 0
		goto "SHAREL"
	else
		set share_new + share_msg.word[share_word]
		set share_word + 1
		goto "SHAREWHO"
	end if		
}

"/mes"
{
label loop
pause 1
set logck @env.textLog
if logck < "is becoming frustrated with your lack of progress"
message "* |══════════| -0%"
end if
if logck < "you have a difficult task ahead of you"
message "* |══════════| 0%"
end if
if logck < "you have just begun to"
message "* |▰═════════| 0%-13%"
end if
if logck < "you are starting to learn, but"
message "* |▰▰▰═══════| 13%-38%"
end if
if logck < "you are making progress."
message "* |▰▰▰▰▰═════| 38%-62%"
end if
if logck < "you are well on your way to enlightenment"
message "* |▰▰▰▰▰▰════ | 62%-75%"
end if
if logck < "you are close to mastering"
message "* |▰▰▰▰▰▰▰═══| 75%-88%"
end if
if logck < "you are almost ready for a breakthrough"
message "* |▰▰▰▰▰▰▰▰▰═| 88%-100%"
end if
goto loop
}

"/wt"
{
"/use /reflect\r"
pause 1
set weaponmessage @env.textLog
if weaponmessage < "You feel you have much to learn."
message "*weapon training; 0-9"
end if
if weaponmessage < "You feel tolerably skilled."
message "*weapon training; 10-19"
end if
if weaponmessage < "Your persistence is paying off."
message "*weapon training; 20-29"
end if
if weaponmessage < "You are progressing well."
message "*weapon training; 30-39"
end if
if weaponmessage < "You are becoming proficient."
message "*weapon training; 40-49"
end if
if weaponmessage < "You have learned much."
message "*weapon training; 50-99"
end if
if weaponmessage < "You have become skilled."
message "*weapon training; 100-149"
end if
if weaponmessage < "You have become very skilled."
message "*weapon training; 150-199"
end if
if weaponmessage < "Learning more is a challenge."
message "*weapon training; 200-249"
end if
if weaponmessage < "You have attained great skill."
message "*weapon training; 250-299"
end if
if weaponmessage < "You are becoming an expert."
message "*weapon training; 300-349"
end if
if weaponmessage < "You have attained tremendous skill."
message "*weapon training; 350-399"
end if
if weaponmessage < "You are close to attaining mastery."
message "*weapon training; 400-449"
end if
if weaponmessage < "You may be proud of your accomplishment."
message "*weapon training; 450-499"
end if
if weaponmessage < "You are becoming a master of your art."
message "*weapon training; 500-549"
end if
if weaponmessage < "Your dedication is commendable."
message "*weapon training; 550-599"
end if
if weaponmessage < "You show great devotion to your studies."
message "*weapon training; 600-649"
end if
if weaponmessage < "You are a credit to your craft."
message "*weapon training; 650-699"
end if
if weaponmessage < "Few indeed are your peers."
message "*weapon training; 700-749"
end if
if weaponmessage < "Your devotion to your craft is exemplary."
message "*weapon training; 750-799"
end if
if weaponmessage < "Your expertise is unquestionable."
message "*weapon training; 800-899"
end if
if weaponmessage < "You are truly a grand master."
message "*weapon training; 900-999"
end if
if weaponmessage < "Few if any are your equal."
message "*weapon training; 1000-1249"
end if
if weaponmessage < "Your persistence is an example to us all."
message "*weapon training; 1250-1499"
end if
if weaponmessage < "Your skill astounds me."
message "*weapon training; 1500-1749"
end if
if weaponmessage < "You have progressed further than most."
message "*weapon training; 1750-1999"
end if
if weaponmessage < "You are nearly peerless."
message "*weapon training; 2000-2249"
end if
if weaponmessage < "You are a model of dedication."
message "*weapon training; 2250-2499"
end if
}

"/trp"
{
label top
pause 1
set trainer @env.textLog.word[2]
set trainerphrase @env.textLog
if trainerphrase < "You have much to learn."
message "*" @env.textLog.word[2] ": 0-9."
end if
if trainerphrase < "It is good to see you."
message "*" @env.textLog.word[2] ": 10-19."
end if
if trainerphrase < "Your persistence is paying off."
message "*" @env.textLog.word[2] ": 20-29."
end if
if trainerphrase < "You are progressing well."
message "*" @env.textLog.word[2] ": 30-39."
end if
if trainerphrase < "You are a good pupil of mine."
message "*" @env.textLog.word[2] ": 40-49."
end if
if trainerphrase < "You are one of my better pupils."
message "*" @env.textLog.word[2] ": 50-99."
end if
if trainerphrase < "You keep me on my toes."
message "*" @env.textLog.word[2] ": 100-149."
end if
if trainerphrase < "It is hard to find more to teach you."
message "*" @env.textLog.word[2] ": 150-199."
end if
if trainerphrase < "Teaching you is a challenge."
message "*" @env.textLog.word[2] ": 200-249."
end if
if trainerphrase < "There is not much more I can teach you."
message "*" @env.textLog.word[2] ": 250-299."
end if
if trainerphrase < "Teaching you has taught me much."
message "*" @env.textLog.word[2] ": 300-349."
end if
if trainerphrase < "You have attained tremendous skill."
message "*" @env.textLog.word[2] ": 350-399."
end if
if trainerphrase < "We are nearly equals."
message "*" @env.textLog.word[2] ": 400-449."
end if
if trainerphrase < "You may be proud of your accomplishment."
message "*" @env.textLog.word[2] ": 450-499."
end if
if trainerphrase < "You are becoming a master of our art."
message "*" @env.textLog.word[2] ": 500-549."
end if
if trainerphrase < "Your dedication is commendable."
message "*" @env.textLog.word[2] ": 550-599."
end if
if trainerphrase < "You show great devotion to your studies."
message "*" @env.textLog.word[2] ": 600-649."
end if
if trainerphrase < "You are a credit to our craft."
message "*" @env.textLog.word[2] ": 650-699."
end if
if trainerphrase < "Few indeed are your peers."
message "*" @env.textLog.word[2] ": 700-749."
end if
if trainerphrase < "Your devotion to the craft is exemplary."
message "*" @env.textLog.word[2] ": 750-799."
end if
if trainerphrase < "It is always good to greet a respected colleague."
message "*" @env.textLog.word[2] ": 800-899."
end if
if trainerphrase < "You are truly a grand master."
message "*" @env.textLog.word[2] ": 900-999."
end if
if trainerphrase < "Let us search for more we might learn together."
message "*" @env.textLog.word[2] ": 1000-1249."
end if
if trainerphrase < "Your persistence is an example to us all."
message "*" @env.textLog.word[2] ": 1250-1499."
end if
if trainerphrase < "Your skill astounds me."
message "*" @env.textLog.word[2] ": 1500-1749."
end if
if trainerphrase < "You have progressed further than most."
message "*" @env.textLog.word[2] ": 1750-1999."
end if
if trainerphrase < "You are nearly peerless."
message "*" @env.textLog.word[2] ": 2000–2249."
end if
if trainerphrase < "You are a model of dedication."
message "*" @env.textLog.word[2] ": 2250–2499."
end if
if trainerphrase < "You have achieved mastery."
message "*" @env.textLog.word[2] ": 2500–2749."
end if
if trainerphrase < "You are enlightened."
message "*" @env.textLog.word[2] ": 2750–2999."
end if
if trainerphrase < "Your command of our craft is inspiring."
message "*" @env.textLog.word[2] ": 3000–3249."
end if
if trainerphrase < "All commend your dedication to our craft."
message "*" @env.textLog.word[2] ": 3250–3499."
end if
if trainerphrase < "I marvel at your skill."
message "*" @env.textLog.word[2] ": 3500–3749."
end if
if trainerphrase < "You walk where few have tread."
message "*" @env.textLog.word[2] ": 3750–3999."
end if
if trainerphrase < "Few stones are unturned in your path."
message "*" @env.textLog.word[2] ": 4000–4249."
end if
if trainerphrase < "Your footsteps guide the dedicated."
message "*" @env.textLog.word[2] ": 4250–4499."
end if
if trainerphrase < "You chart a way through the unknown."
message "*" @env.textLog.word[2] ": 4500–4749."
end if
if trainerphrase < "Your path illuminates the wilderness."
message "*" @env.textLog.word[2] ": 4750–4999."
end if
if trainerphrase < "Your skill casts a long shadow."
message "*" @env.textLog.word[2] ": 5000+."
end if
if trainerphrase < "Your path is ablaze with glory."
message "*" @env.textLog.word[2] ": 6000+."
end if
if trainerphrase < "You are enlightened beyond measure."
message "*" @env.textLog.word[2] ": 7000+."
end if
if trainerphrase < "There is nothing I can teach you."
message "*" @env.textLog.word[2] ": MAXED."
end if
goto top
}
numpad-1
{
"/pose leanleft \r"
}
numpad-2
{
"/pose akimbo \r"
}
numpad-3
{
"/pose leanright \r"
}
numpad-4
{
"/pose kneel \r"
}
numpad-5
{
"/pose sit \r"
}
numpad-6
{
"/pose angry \r"
}
numpad-7
{
"/pose lie \r"
}
numpad-8
{
"/pose seated \r"
}
numpad-9
{
"/pose celebrate \r"
}

setglobal CHAINING 0
setglobal swaoback 0
 
alt-click2
{
if CHAINING == 0
	setglobal swaoback @my.right_item
end if
	if @my.right_item != chain
			setglobal CHAINING 1
				"/equip " chain "\r"
					"/use " @click.simple_name " \r"
	else
	if @my.right_item == chain
			setglobal CHAINING 1
				"/use " @click.simple_name " \r"
	end if
end if
}
 
F5
{
if CHAINING == 1
	setglobal CHAINING 0 
		"/equip " swaoback "\r"
end if
}